Results generated by fwts: Version V16.01.00 (2016-01-13 08:23:12).

Some of this work - Copyright (c) 1999 - 2016, Intel Corp. All rights reserved.
Some of this work - Copyright (c) 2010 - 2016, Canonical.

This test run on 18/02/16 at 17:42:23 on host Linux fwts-live 4.2.0-18-generic
#22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC 2015 x86_64.

Command: "fwts --force-clean --skip-test=s3 --batch --uefitests
--show-progress-dialog --log-type plaintext".
Running tests: version bios_info oops klog mtrr acpiinfo uefirtauthvar
uefibootpath securebootcert uefirtmisc uefirtvariable uefirttime csm maxreadreq
crs aspm dmicheck microcode msr nx cpufreq maxfreq virt pnp pciirq mpcheck
hda_audio ebda bios32 apicedge xenv xsdt wmi wdat wakealarm waet uefi tpm2 tcpa
syntaxcheck stao srat spmi spcr slit slic sbst rsdt rsdp pcc osilinux method
msdm mchi mcfg madt lpit iort hpet hest gtdt fpdt fan fadt facs erst ecdt dmar
dbg2 dbgp cstates csrt cpep checksum autobrightness boot bgrt bert aspt asf
apicinstance acpitables.

version: Gather kernel system information.
--------------------------------------------------------------------------------
Test 1 of 4: Gather kernel signature.
Signature: Ubuntu 4.2.0-18.22~14.04.1-generic 4.2.3

Test 2 of 4: Gather kernel system information.
Kernel Version: Linux version 4.2.0-18-generic (buildd@lgw01-55) (gcc version
4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC
2015

Test 3 of 4: Gather kernel boot command line.
Kernel boot command line: initrd=/casper/initrd.lz boot=casper config
ip=frommedia persistent noprompt splash quiet FWTS_AUTO_SHUTDOWN=1
username=ubuntu hostname=fwts-live quiet BOOT_IMAGE=/casper/vmlinuz

Test 4 of 4: Gather ACPI driver version.
ACPI Version: 20150619

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 4 info only.
================================================================================

bios_info: Gather BIOS DMI information.
--------------------------------------------------------------------------------
Test 1 of 1: Gather BIOS DMI information
BIOS Vendor       : LENOVO
BIOS Version      : G1ET73WW (2.09 )
BIOS Release Date : 10/19/2012
Board Name        : 2347DS2
Board Serial #    : removed
Board Version     : NO DPK
Board Asset Tag   : Not Available
Chassis Serial #  : removed
Chassis Type      : 10
Chassis Vendor    : LENOVO
Chassis Version   : Not Available
Chassic Asset Tag : removed
Product Name      : 2347DS2
Product Serial #  : removed
Product UUID      : removed
Product Version   : ThinkPad T430
System Vendor     : LENOVO

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

oops: Scan kernel log for Oopses.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log oops check.
PASSED: Test 1, Found no oopses in kernel log.
PASSED: Test 1, Found no WARN_ON warnings in kernel log.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

klog: Scan kernel log for errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log error check.
Kernel message: [ 0.012608] ENERGY_PERF_BIAS: Set to 'normal', was 'performance'

ADVICE: This is not exactly a failure but a warning from the kernel. The
MSR_IA32_ENERGY_PERF_BIAS was initialized and defaulted to a high performance
bias setting. The kernel has detected this and changed it down to a 'normal'
bias setting.

Kernel message: [ 0.101079] [Firmware Bug]: ACPI: BIOS _OSI(Linux) query ignored

ADVICE: This is not exactly a failure mode but a warning from the kernel. The
_OSI() method has implemented a match to the 'Linux' query in the DSDT and this
is redundant because the ACPI driver matches onto the Windows _OSI strings by
default.

Kernel message: [ 0.105026] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S1_] (20150619/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S1 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means that the kernel does not know how to
enter the S1 sleep state, however, it should not be a problem if the S1 sleep
state isn't supported intentionally.

Kernel message: [ 0.105030] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S2_] (20150619/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S2 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means that the kernel does not know how to
enter the S2 sleep state, however, it should not be a problem if the S2 sleep
state isn't supported intentionally.

FAILED [HIGH] KlogAcpiFirmwareError: Test 1, HIGH Kernel message: [ 0.147666]
pnp 00:01: [Firmware Bug]: PNP resource [mem 0xfed10000-0xfed13fff] covers only
part of 0000:00:00.0 Intel MCH; extending to [mem 0xfed10000-0xfed17fff]

ADVICE: The kernel has detected a Firmware bug in the BIOS or ACPI which needs
investigating and fixing.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 23.039012] ACPI
Warning: SystemIO range 0x0000000000000428-0x000000000000042F conflicts with
OpRegion 0x0000000000000400-0x000000000000047F (\_SB_.PCI0.LPC_.PMIO) (20150619
/utaddress-254)

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 23.039025] ACPI
Warning: SystemIO range 0x0000000000000540-0x000000000000054F conflicts with
OpRegion 0x0000000000000500-0x000000000000057F (\_SB_.PCI0.LPC_.LPIO) (20150619
/utaddress-254)

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 23.039031] ACPI
Warning: SystemIO range 0x0000000000000530-0x000000000000053F conflicts with
OpRegion 0x0000000000000500-0x000000000000057F (\_SB_.PCI0.LPC_.LPIO) (20150619
/utaddress-254)

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 23.039035] ACPI
Warning: SystemIO range 0x0000000000000500-0x000000000000052F conflicts with
OpRegion 0x0000000000000500-0x000000000000057F (\_SB_.PCI0.LPC_.LPIO) (20150619
/utaddress-254)

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

FAILED [LOW] KlogAcpiSystemIOConflictLpcIchWatchDogTimer: Test 1, LOW Kernel
message: [ 23.039039] lpc_ich: Resource conflict(s) found affecting gpio_ich

ADVICE: A resource conflict has occurred between ACPI OperationRegions and the
same I/O region used by the lpc_ich driver for the General Purpose I/O (GPIO)
region. Sometimes this GPIO region is used by the firmware for rfkill or LED
controls or very rarely for the Embedded Controller System Control Interrupt.
This may require deeper inspection to check if the conflict will lead to any
real issues. However, in the vast majority of cases this warning can be ignored
as no harm will occur.

Found 6 unique errors in kernel log.

================================================================================
0 passed, 6 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mtrr: MTRR tests.
--------------------------------------------------------------------------------
MTRR overview
-------------
Reg 0: 0x00000000ffc00000 - 0x0000000100000000 (     4 MB)   Write-Protect
Reg 1: 0x0000000000000000 - 0x0000000080000000 (  2048 MB)   Write-Back
Reg 2: 0x0000000080000000 - 0x00000000c0000000 (  1024 MB)   Write-Back
Reg 3: 0x00000000c0000000 - 0x00000000e0000000 (   512 MB)   Write-Back
Reg 4: 0x00000000dc000000 - 0x00000000e0000000 (    64 MB)   Uncached
Reg 5: 0x00000000db000000 - 0x00000000dc000000 (    16 MB)   Uncached
Reg 6: 0x0000000100000000 - 0x0000000120000000 (   512 MB)   Write-Back
Reg 7: 0x000000011f000000 - 0x0000000120000000 (    16 MB)   Uncached
Reg 8: 0x000000011e800000 - 0x000000011f000000 (     8 MB)   Uncached
Reg 9: 0x000000011e600000 - 0x000000011e800000 (     2 MB)   Uncached

Test 1 of 3: Validate the kernel MTRR IOMEM setup.
PASSED: Test 1, Memory ranges seem to have correct attributes.

Test 2 of 3: Validate the MTRR setup across all processors.
PASSED: Test 2, All processors have the a consistent MTRR setup.

Test 3 of 3: Test for AMD MtrrFixDramModEn being cleared by the BIOS.
SKIPPED: Test 3, CPU is not an AMD, cannot test.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

acpiinfo: General ACPI information test.
--------------------------------------------------------------------------------
Test 1 of 3: Determine Kernel ACPI version.
Kernel ACPICA driver version: 20150619, supports ACPI 5.0

Test 2 of 3: Determine machine's ACPI version.
FADT X_FIRMWARE_CTRL 64 bit pointer was zero, falling back to using
FIRMWARE_CTRL 32 bit pointer.
FADT X_FIRMWARE_CTRL 64 bit pointer was zero, falling back to using
FIRMWARE_CTRL 32 bit pointer.
FADT X_DSDT 64 bit pointer was zero, falling back to using DSTD 32 bit pointer.
FACP ACPI Version: 5.0 

Test 3 of 3: Determine AML compiler.
Determine the compiler used to generate the ACPI AML in the DSDT and SSDT.
Table DSDT, OEM LENOVO, created with INTL (Intel) compiler.
Table SSDT0, OEM LENOVO, created with INTL (Intel) compiler.
Table SSDT1, OEM LENOVO, created with INTL (Intel) compiler.
Table SSDT2, OEM LENOVO, created with INTL (Intel) compiler.
Table SSDT3, OEM PmRef, created with INTL (Intel) compiler.
Table SSDT4, OEM PmRef, created with INTL (Intel) compiler.
Table SSDT5, OEM LENOVO, created with INTL (Intel) compiler.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 3 info only.
================================================================================

uefirtauthvar: Authenticated variable tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 12 aborted, 0 skipped, 0 info only.
================================================================================

uefibootpath: Sanity check for UEFI Boot Path Boot####.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

securebootcert: UEFI secure boot test.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

uefirtmisc: UEFI miscellaneous runtime service interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 3 aborted, 0 skipped, 0 info only.
================================================================================

uefirtvariable: UEFI Runtime service variable interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 8 aborted, 0 skipped, 0 info only.
================================================================================

uefirttime: UEFI Runtime service time interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 35 aborted, 0 skipped, 0 info only.
================================================================================

csm: UEFI Compatibility Support Module test.
--------------------------------------------------------------------------------
Test 1 of 1: UEFI Compatibility Support Module test.
Checking for UEFI Compatibility Support Module (CSM)
Int 10h jumps to 0xc0014 in option ROM at: 0xc0000..0xd0000
No CSM: Legacy BIOS firmware has video option ROM with Int 10h support.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

maxreadreq: Test firmware has set PCI Express MaxReadReq to a higher value on
non-motherboard devices.
--------------------------------------------------------------------------------
Test 1 of 1: Test firmware settings MaxReadReq for PCI Express devices.
PASSED: Test 1, All devices have MaxReadReq set > 128.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

crs: Test PCI host bridge configuration using _CRS.
--------------------------------------------------------------------------------
Test 1 of 1: Test PCI host bridge configuration using _CRS.
PASSED: Test 1, The kernel has detected a BIOS newer than the end of 2007 (10/19
/2012) and has assumed that your BIOS can correctly specify the host bridge MMIO
aperture using _CRS. If this does not work correctly you can override this by
booting with "pci=nocrs".

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

aspm: PCIe ASPM test.
--------------------------------------------------------------------------------
Test 1 of 2: PCIe ASPM ACPI test.
PCIe ASPM is not controlled by Linux kernel.

ADVICE: BIOS reports that Linux kernel should not modify ASPM settings that BIOS
configured. It can be intentional because hardware vendors identified some
capability bugs between the motherboard and the add-on cards.


Test 2 of 2: PCIe ASPM registers test.
WARNING: Test 2, RP 00h:1Ch.00h L0s not enabled.
WARNING: Test 2, Device 02h:00h.00h L0s not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.

PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 00h:1Ch.01h L0s not enabled.
WARNING: Test 2, Device 03h:00h.00h L0s not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.

PASSED: Test 2, PCIe ASPM setting matched was matched.

================================================================================
2 passed, 0 failed, 4 warnings, 0 aborted, 0 skipped, 0 info only.
================================================================================

dmicheck: DMI/SMBIOS table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Find and test SMBIOS Table Entry Points.
This test tries to find and sanity check the SMBIOS data structures.
PASSED: Test 1, Found SMBIOS Table Entry Point at 0xf00e0
SMBIOS Entry Point Structure:
  Anchor String          : _SM_
  Checksum               : 0xf0
  Entry Point Length     : 0x1f
  Major Version          : 0x02
  Minor Version          : 0x07
  Maximum Struct Size    : 0x8a
  Entry Point Revision   : 0x00
  Formatted Area         : 0x00 0x00 0x00 0x00 0x00
  Intermediate Anchor    : _DMI_
  Intermediate Checksum  : 0xfa
  Structure Table Length : 0x0a65
  Structure Table Address: 0xdae9d000
  # of SMBIOS Structures : 0x0045
  SBMIOS BCD Revision    : 27

PASSED: Test 1, SMBIOS Table Entry Point Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Point Length is valid.
PASSED: Test 1, SMBIOS Table Entry Intermediate Anchor String _DMI_ is valid.
PASSED: Test 1, SMBIOS Table Entry Point Intermediate Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Structure Table Address and Length looks
valid.

Test 2 of 3: Test DMI/SMBIOS tables for errors.
PASSED: Test 2, Entry @ 0xdae9d000 'Unknown (Type 134)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x03 in table entry
'Processor Information (Type 4)' @ 0xdae9d02a, field 'Serial Number', offset
0x20 has a default value 'None' and probably has not been updated by the BIOS
vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x05 in table entry
'Processor Information (Type 4)' @ 0xdae9d02a, field 'Asset Tag', offset 0x21
has a default value 'None' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x06 in table entry
'Processor Information (Type 4)' @ 0xdae9d02a, field 'Part Number', offset 0x22
has a default value 'None' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.5 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0xdae9d0b4 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0xdae9d0d1 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0xdae9d0ee 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0xdae9d10b 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0xdae9d128 'Unknown (Type 129)'
PASSED: Test 2, Entry @ 0xdae9d149 'Physical Memory Array (Type 16)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x05 in table entry 'Memory
Device (Type 17)' @ 0xdae9d162, field 'Asset Tag', offset 0x19 has a default
value 'None' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x03 in table entry 'Memory
Device (Type 17)' @ 0xdae9d1ca, field 'Asset Tag', offset 0x19 has a default
value 'None' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0xdae9d208 'Memory Device Mapped Address (Type 20)'
PASSED: Test 2, Entry @ 0xdae9d22d 'Memory Array Mapped Address (Type 19)'
PASSED: Test 2, Entry @ 0xdae9d24e 'Unknown (Type 134)'
PASSED: Test 2, Entry @ 0xdae9d25d 'BIOS Information (Type 0)'
PASSED: Test 2, Entry @ 0xdae9d299 'System Information (Type 1)'
FAILED [MEDIUM] DMISerialNumber: Test 2, String index 0x05 in table entry 'Base
Board Information (Type 2)' @ 0xdae9d2f7, field 'Asset Tag', offset 0x08 has a
default value 'Not Available' and probably has not been updated by the BIOS
vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless. Note that the kernel uses this field so it probably should be corrected
to ensure the kernel is using sane values.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x06 in table entry 'Base
Board Information (Type 2)' @ 0xdae9d2f7, field 'Location In Chassis', offset
0x0a has a default value 'Not Available' and probably has not been updated by
the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.3 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [MEDIUM] DMISerialNumber: Test 2, String index 0x02 in table entry
'Chassis Information (Type 3)' @ 0xdae9d345, field 'Version', offset 0x06 has a
default value 'Not Available' and probably has not been updated by the BIOS
vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless. Note that the kernel uses this field so it probably should be corrected
to ensure the kernel is using sane values.


ADVICE: It may be worth checking against section 7.4 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0xdae9d393, field 'Internal Reference
Designator', offset 0x04 has a default value 'Not Available' and probably has
not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0xdae9d3bc, field 'Internal Reference
Designator', offset 0x04 has a default value 'Not Available' and probably has
not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0xdae9d3e5 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d411 'Inactive (Type 126)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0xdae9d43d, field 'Internal Reference
Designator', offset 0x04 has a default value 'Not Available' and probably has
not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0xdae9d475 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d49c 'Inactive (Type 126)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0xdae9d4c4, field 'Internal Reference
Designator', offset 0x04 has a default value 'Not Available' and probably has
not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0xdae9d4e5 'Inactive (Type 126)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0xdae9d503, field 'Internal Reference
Designator', offset 0x04 has a default value 'Not Available' and probably has
not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0xdae9d521, field 'Internal Reference
Designator', offset 0x04 has a default value 'Not Available' and probably has
not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0xdae9d53f, field 'Internal Reference
Designator', offset 0x04 has a default value 'Not Available' and probably has
not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0xdae9d55d, field 'Internal Reference
Designator', offset 0x04 has a default value 'Not Available' and probably has
not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0xdae9d57b 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d599 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d5b7 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d5d5 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d5f3 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d611 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d630 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d64f 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d670 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d68e 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0xdae9d6b1 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0xdae9d6d3 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d6f4 'On Board Devices (Type 10)'
PASSED: Test 2, Entry @ 0xdae9d71a 'System Configuration Options (Type 12)'
PASSED: Test 2, Entry @ 0xdae9d721 'BIOS Language Information (Type 13)'
PASSED: Test 2, Entry @ 0xdae9d73e 'Portable Battery (Type 22)'
PASSED: Test 2, Entry @ 0xdae9d775 'Inactive (Type 126)'
PASSED: Test 2, Entry @ 0xdae9d791 '32-bit Memory Error Information (Type 18)'
PASSED: Test 2, Entry @ 0xdae9d7aa 'Built-in Pointing Device (Type 21)'
PASSED: Test 2, Entry @ 0xdae9d7b3 'Built-in Pointing Device (Type 21)'
PASSED: Test 2, Entry @ 0xdae9d7bc 'Unknown (Type 131)'
PASSED: Test 2, Entry @ 0xdae9d7e2 'Unknown (Type 136)'
PASSED: Test 2, Entry @ 0xdae9d7ea 'Unknown (Type 130)'
PASSED: Test 2, Entry @ 0xdae9d800 'Unknown (Type 131)'
PASSED: Test 2, Entry @ 0xdae9d842 'Unknown (Type 135)'
PASSED: Test 2, Entry @ 0xdae9d88e 'Unknown (Type 133)'
PASSED: Test 2, Entry @ 0xdae9d8a3 'System Event Log (Type 15)'
PASSED: Test 2, Entry @ 0xdae9d8f6 'Unknown (Type 140)'
PASSED: Test 2, Entry @ 0xdae9d93b 'Unknown (Type 140)'
PASSED: Test 2, Entry @ 0xdae9d96c 'Unknown (Type 140)'
PASSED: Test 2, Entry @ 0xdae9d9ad 'Unknown (Type 140)'
PASSED: Test 2, Entry @ 0xdae9d9c0 'Unknown (Type 140)'
PASSED: Test 2, Entry @ 0xdae9d9d5 'Unknown (Type 140)'
PASSED: Test 2, Entry @ 0xdae9d9ea 'Hardware Security (Type 24)'
PASSED: Test 2, Entry @ 0xdae9d9f1 'Unknown (Type 132)'
PASSED: Test 2, Entry @ 0xdae9d9fa 'Unknown (Type 135)'
PASSED: Test 2, Entry @ 0xdae9da0e 'Unknown (Type 140)'
PASSED: Test 2, Entry @ 0xdae9da32 'Unknown (Type 140)'
PASSED: Test 2, Entry @ 0xdae9da5f 'End of Table (Type 127)'

Test 3 of 3: Test DMI/SMBIOS3 tables for errors.
SKIPPED: Test 3, Cannot find SMBIOS30 table entry, skip the test.

================================================================================
62 passed, 16 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

microcode: Test if system is using latest microcode.
--------------------------------------------------------------------------------
Test 1 of 1: Test for most recent microcode being loaded.
This test verifies if the firmware has put a recent revision of the microcode
into the processor at boot time. Recent microcode is important to have all the
required features and errata updates for the processor.
The kernel did not report that CPU 0 has had a microcode update. The current
firmware is revision 0x15 and probably has not been updated.
The kernel did not report that CPU 1 has had a microcode update. The current
firmware is revision 0x15 and probably has not been updated.
The kernel did not report that CPU 2 has had a microcode update. The current
firmware is revision 0x15 and probably has not been updated.
The kernel did not report that CPU 3 has had a microcode update. The current
firmware is revision 0x15 and probably has not been updated.
SKIPPED: Test 1, Could not determine from kernel log if latest microcode has
been loaded.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

msr: MSR register tests.
--------------------------------------------------------------------------------
Test 1 of 5: Test CPU generic MSRs.
PASSED: Test 1, MSR 0x00000001 P5_MC_TYPE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000006 MONITOR_FILTER_SIZE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000017 PLATFORM_ID is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000002a EBL_CR_POWERON is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000001b APIC_BASE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000003a FEATURE_CONTROL is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000008b BIOS_SIGN_ID is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000000fe MTRRCAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000174 SYSENTER_CS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000175 SYSENTER_ESP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000176 SYSENTER_EIP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000179 MCG_CAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000017a MCG_STATUS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000019a CLOCK_MODULATION is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000019b THERM_INTERRUPT is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000001a0 MISC_ENABLE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000001b2 PACKAGE_THERM_INTERRUPT is consistent across 4
CPUs.
PASSED: Test 1, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000200 MTRR_PHYSBASE0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000201 MTRR_PHYSMASK0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000202 MTRR_PHYSBASE1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000203 MTRR_PHYSMASK1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000204 MTRR_PHYSBASE2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000205 MTRR_PHYSMASK2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000206 MTRR_PHYSBASE3 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000207 MTRR_PHYSMASK3 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000208 MTRR_PHYSBASE4 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000209 MTRR_PHYSMASK4 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020a MTRR_PHYSBASE5 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020b MTRR_PHYSMASK5 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020c MTRR_PHYSBASE6 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020d MTRR_PHYSMASK6 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020e MTRR_PHYSBASE7 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020f MTRR_PHYSMASK7 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000210 MTRR_PHYSBASE8 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000211 MTRR_PHYSMASK8 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000212 MTRR_PHYSBASE9 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000213 MTRR_PHYSMASK9 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000250 MTRR_FIX64K_000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000258 MTRR_FIX16K_800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000259 MTRR_FIX16K_a00 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000268 MTRR_FIX4K_C000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000269 MTRR_FIX4K_C800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026a MTRR_FIX4K_D000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026b MTRR_FIX4K_D800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026c MTRR_FIX4K_E000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026d MTRR_FIX4K_E800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026e MTRR_FIX4K_F000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026f MTRR_FIX4K_F800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000277 PAT is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000280 MC0_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000281 MC1_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000282 MC2_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000283 MC3_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000284 MC4_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000285 MC5_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000286 MC6_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000002ff MTRR_DEF_TYPE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000003f1 PEBS_ENABLE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000480 VMX_BASIC is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000481 VMX_PINPASED_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000482 VMX_PROCBASED_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000483 VMX_EXIT_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000484 VMX_ENTRY_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000485 VMX_MISC is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000486 VMX_CR0_FIXED0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000487 VMX_CR0_FIXED1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000488 VMX_CR4_FIXED0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000489 VMX_CR4_FIXED1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048a VMX_VMX_VMCS_ENUM is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048b VMX_PROCBASED_CTLS2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048c VMX_EPT_VPID_CAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048d VMX_TRUE_PINBASED_CTLS is consistent across 4
CPUs.
PASSED: Test 1, MSR 0x0000048e VMX_TRUE_PROCBASED_CTLS is consistent across 4
CPUs.
PASSED: Test 1, MSR 0x0000048f VMX_TRUE_EXIT_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000490 VMX_TRUE_ENTRY_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000080 EFER is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000081 STAR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000082 LSTAR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000084 FMASK is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000102 KERNEL_GS_BASE is consistent across 4 CPUs.

Test 2 of 5: Test CPU specific model MSRs.
CPU family: 0x6, model: 0x3a (Ivybridge)
PASSED: Test 2, MSR 0x000000ce MSR_PLATFORM_INFO is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x000000e2 MSR_PKG_CST_CONFIG_CONTROL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000648 MSR_CONFIG_TDP_NOMINAL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000649 MSR_CONFIG_TDP_LEVEL1 is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x0000064a MSR_CONFIG_TDP_LEVEL2 is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x0000064b MSR_CONFIG_TDP_CONTROL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x0000064c MSR_TURBO_ACTIVATION_RATIO is consistent across 4
CPUs.

Test 3 of 5: Test all P State Ratios.
PASSED: Test 3, MSR 0x000000ce Minimum P-State is consistent across 4 CPUs.
PASSED: Test 3, MSR 0x000000ce Maximum P-State is consistent across 4 CPUs.

Test 4 of 5: Test C1 and C3 autodemotion.
PASSED: Test 4, MSR 0x000000e2 C1 and C3 Autodemotion is consistent across 4
CPUs.
C1 and C3 Autodemotion enabled.

Test 5 of 5: Test SMRR MSR registers.
PASSED: Test 5, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 4 CPUs.
PASSED: Test 5, MSR 0x000001f2 SMRR_TYPE is consistent across 4 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 4 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_VALID is consistent across 4 CPUs.

================================================================================
96 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

nx: Test if CPU NX is disabled by the BIOS.
--------------------------------------------------------------------------------
Test 1 of 3: Test CPU NX capability.
PASSED: Test 1, CPU has NX flags, BIOS is not disabling it.

Test 2 of 3: Test all CPUs have same BIOS set NX flag.
This test verifies that all CPUs have the same NX flag setting. Although rare,
BIOS may set the NX flag differently per CPU. 
PASSED: Test 2, All 4 CPUs have the same NX flag set.

Test 3 of 3: Test all CPUs have same msr setting in MSR 0x1a0.
This test verifies that all CPUs have the same NX flag setting by examining the
per CPU MSR register 0x1a0.
PASSED: Test 3, All 4 CPUs have the NX flag in MSR 0x1a0 set.

================================================================================
3 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

cpufreq: CPU frequency scaling tests.
--------------------------------------------------------------------------------
WARNING: Test 1, Cannot set CPU 0 governor to userspace.
Failed to intialise cpufreq to set CPU speed
Test 1 of 7: CPU frequency table consistency
PASSED: Test 1, CPU frequency tables are consistent

Test 2 of 7: CPU frequency table duplicates
PASSED: Test 2, No duplicates in CPU frequency table

Test 3 of 7: CPU frequency firmware limits
PASSED: Test 3, No BIOS limits imposed

Test 4 of 7: CPU frequency claimed maximum
WARNING: Test 4, cpu 0 has claimed frequency of 3300000, higher than max freq of
0
WARNING: Test 4, cpu 1 has claimed frequency of 3300000, higher than max freq of
0
WARNING: Test 4, cpu 2 has claimed frequency of 3300000, higher than max freq of
0
WARNING: Test 4, cpu 3 has claimed frequency of 3300000, higher than max freq of
0
FAILED [MEDIUM] CPUFreqClaimedMax: Test 4, CPU max frequency is unreachable

Test 5 of 7: CPU frequency SW_ANY control
SKIPPED: Test 5, Can't set CPU frequencies

Test 6 of 7: CPU frequency SW_ALL control
SKIPPED: Test 6, Can't set CPU frequencies

Test 7 of 7: CPU frequency performance tests.
FAILED [MEDIUM] CPUFreqSetFailed: Test 7, Can't set CPU frequencies

================================================================================
3 passed, 2 failed, 4 warnings, 0 aborted, 2 skipped, 0 info only.
================================================================================

maxfreq: Test max CPU frequencies against max scaling frequency.
--------------------------------------------------------------------------------
Test 1 of 1: Maximum CPU frequency test.
This test checks the maximum CPU frequency as detected by the kernel for each
CPU against maxiumum frequency as specified by the BIOS frequency scaling
settings.
PASSED: Test 1, 4 CPUs passed the maximum frequency check.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

virt: CPU Virtualisation Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: CPU Virtualisation Configuration test.
Check VT/VMX Virtualization extensions are set up correctly.
FAILED [MEDIUM] VirtDisabledByBIOS: Test 1, Virtualization extensions supported
but disabled by BIOS.

================================================================================
0 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pnp: BIOS Support Installation structure test.
--------------------------------------------------------------------------------
Test 1 of 1: PnP BIOS Support Installation structure test.
This test tries to find and sanity check the Plug and Play BIOS Support
Installation Check structure. 

Found PnP Installation Check structure at 0x000f08f0
  Signature                          : $PnP
  Version                            : 0x10 (1.0)
  Length                             : 0x0021 bytes
  Control Field                      : 0x0000 (Not supported)
  Event Notification Flag Address    : 0x000f0000
  Real Mode 16 bit Code Address      : 0xf000:093d
  Real Mode 16 bit Data Address      : 0xf000:0000
  16 bit Protected Mode Code Address : 0x000f0918
  16 bit Protected Mode Data Address : 0x000f0000
  OEM Device Identifier              : 0x00000000 (undefined)

PASSED: Test 1, Version 1.0 detected.
PASSED: Test 1, PnP Installation Check structure is the correct length of 33
bytes.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pciirq: PCI IRQ Routing Table test.
--------------------------------------------------------------------------------
Test 1 of 1: PCI IRQ Routing Table test.
This test tries to find and sanity check the PCI IRQ Routing Table, as defined
by http://www.microsoft.com/taiwan/whdc/archive/pciirq.mspx and described in
pages 233-238 of PCI System Architecture, Fourth Edition, Mindshare, Inc.
(1999). NOTE: The PCI IRQ Routing Table only really knows about ISA IRQs and is
generally not used with APIC. 

Found PCI IRQ Routing Table at 0x000fbc40
  Signature             : $PIR
  Version               : 0x0100 (1.0)
  Table Size            : 0x01c0 bytes (26 slot entries)
  PCI Router ID         : 00:1f.0
  PCI Exclusive IRQs    : 0x0000 (none)
  Compatible PCI Router : 8086:122e
  Miniport Data         : 0x00000000 (none)
  Reserved              : 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  Checksum              : 0xc8

Bus:Dev Slot  INTA#   INTB#   INTC#   INTD#
 00:1b   00  6a/8c80                         
 00:04   00  60/8c80 61/8c80 62/8c80 63/8c80 
 00:06   00  63/8c80 60/8c80 61/8c80 62/8c80 
 00:1d   00  6b/8c80 63/8c80 60/8c80 62/8c80 
 00:1a   00  60/8c80 69/8c80 62/8c80 63/8c80 
 00:19   00  68/8c80                         
 00:16   00  60/8c80 63/8c80 62/8c80 61/8c80 
 00:00   00  60/8c80 61/8c80 62/8c80 63/8c80 
 00:02   00  60/8c80                         
 00:1f   00  69/8c80 63/8c80 62/8c80 60/8c80 
 00:07   00  60/8c80                         
 ef:00   04  60/8c80 61/8c80 62/8c80 63/8c80 
 00:01   00  60/8c80 61/8c80 62/8c80 63/8c80 
 00:1c   00  60/8c80 61/8c80 62/8c80 63/8c80 
 02:00   05  60/8c80 61/8c80 62/8c80 63/8c80 
 03:00   06  61/8c80 62/8c80 63/8c80 60/8c80 
 04:00   07  62/8c80 63/8c80 60/8c80 61/8c80 
 ea:00   08  63/8c80 60/8c80 61/8c80 62/8c80 
 e9:00   09  60/8c80 61/8c80 62/8c80 63/8c80 
 e8:00   0a  61/8c80 62/8c80 63/8c80 60/8c80 
 e7:00   0b  62/8c80 63/8c80 60/8c80 61/8c80 
 e6:00   0c  63/8c80 60/8c80 61/8c80 62/8c80 
 ee:00   01  69/8c80 6a/8c80 6b/8c80 68/8c80 
 ee:01   02  6a/8c80 69/8c80 68/8c80 6b/8c80 
 ee:05   03  62/8c80 68/8c80 6a/8c80 69/8c80 
 00:14   00  60/8c80                         

PASSED: Test 1, The Compatible PCI Interrupt Router is defined.
PASSED: Test 1, Table size was correct for 26 slot entries.
PASSED: Test 1, Reserved region is set to zero.
PASSED: Test 1, All 26 slots have sane looking link and IRQ bitmaps.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mpcheck: MultiProcessor Tables tests.
--------------------------------------------------------------------------------
The kernel is using the ACPI MADT for SMP configuration information, so the
Multiprocessor Tables are not used by the kernel. Any errors in the tables will
not affect the operation of Linux unless it is booted with ACPI disabled.

NOTE: Since ACPI is being used in preference to the Multiprocessor Tables, any
errors found in the mpcheck tests will be tagged as LOW errors.

Test 1 of 9: Test MP header.
PASSED: Test 1, MP header looks sane.

Test 2 of 9: Test MP CPU entries.
PASSED: Test 2, All 4 CPU entries look sane.

Test 3 of 9: Test MP Bus entries.
PASSED: Test 3, All 4 Bus Entries looked sane.

Test 4 of 9: Test MP IO APIC entries.
PASSED: Test 4, All 1 IO APIC Entries look sane.

Test 5 of 9: Test MP IO Interrupt entries.
PASSED: Test 5, All 65 IO Interrupt Entries look sane.

Test 6 of 9: Test MP Local Interrupt entries.
PASSED: Test 6, All 2 Local Interrupt Entries look sane.

Test 7 of 9: Test MP System Address entries.
PASSED: Test 7, All 3 System Address Space Mapping Entries looks sane.

Test 8 of 9: Test MP Bus Hierarchy entries.
PASSED: Test 8, All 1 Bus Hierarchy Entries look sane.

Test 9 of 9: Test MP Compatible Bus Address Space entries.
PASSED: Test 9, All 2 Compatible Bus Address Space Entries look sane.

================================================================================
9 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

hda_audio: HDA Audio Pin Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: HDA Audio Pin Configuration test.
Checking 'hwC0D0':
Vendor Name    : Realtek
Vendor ID      : 0x10ec0269
Subsystem ID   : 0x17aa21f3
Revision ID    : 0x100203
BIOS pin configurations:
  Pin  Setting
  0x0012 0x90a60140
  0x0014 0x90170110
  0x0015 0x03211020
  0x0017 0x411111f0
  0x0018 0x03a11830
  0x0019 0x411111f0
  0x001a 0x411111f0
  0x001b 0x411111f0
  0x001d 0x40138205
  0x001e 0x411111f0
Driver defined pin configurations:
  Pin  Setting
  0x0019 0x23a11040
  0x001b 0x2121103f
BIOS pin configurations required software override to make HDA audio work
correctly.
The driver or user provided overrides should be corrected in BIOS firmware.

Checking 'hwC0D3':
Vendor Name    : Intel
Vendor ID      : 0x80862806
Subsystem ID   : 0x80860101
Revision ID    : 0x100000
BIOS pin configurations:
  Pin  Setting
  0x0005 0x18560010
  0x0006 0x18560020
  0x0007 0x18560030
PASSED: Test 1, Default BIOS pin configurations did not have software override.


================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

ebda: Test EBDA region is mapped and reserved in memory map table.
--------------------------------------------------------------------------------
Test 1 of 1: Test EBDA is reserved in E820 table.
The Extended BIOS Data Area (EBDA) is normally located at the end of the low
640K region and is typically 2-4K in size. It should be reserved in the Int 15
AX=E820 BIOS memory map table.
PASSED: Test 1, EBDA region mapped at 0x9d800 and reserved as a 9K region in the
Int 15 AX=E820 BIOS memory map table at 0x9d800..0x9ffff.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

bios32: BIOS32 Service Directory test.
--------------------------------------------------------------------------------
Test 1 of 1: BIOS32 Service Directory test.
This test tries to find and sanity check the BIOS32 Service Directory as defined
in the Standard BIOS 32-bit Service Directory Proposal, Revision 0.4 May 24,
1993, Phoenix Technologies Ltd and also the PCI BIOS specification.
Found BIOS32 Service Directory at 0x000f2550
  Signature  : _32_
  Entry Point: 0x000fc200
  Revsion    : 0x00
  Length     : 0x01
  Checksum   : 0x0b

PASSED: Test 1, Service Directory Entry Point 0x000fc200 is not in high memory.
PASSED: Test 1, Service Directory Length is 1 (1 x 16 bytes) as expected.
PASSED: Test 1, Service Directory Revision is 0x00 and is supported by the
kernel.
PASSED: Test 1, Service Directory checksum passed.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

apicedge: APIC edge/level test.
--------------------------------------------------------------------------------
Test 1 of 1: Legacy and PCI Interrupt Edge/Level trigger tests.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 0 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 1 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 8 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 12 is
incorrectly level triggered.

================================================================================
0 passed, 4 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

xenv: XENV Xen Environment Table tests.
--------------------------------------------------------------------------------
ACPI XENV table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

xsdt: XSDT Extended System Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: XSDT Extended System Description Table test.
PASSED: Test 1, No issues found in XSDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

wmi: Extract and analyse Windows Management Instrumentation (WMI).
--------------------------------------------------------------------------------
Test 1 of 1: Windows Management Instrumentation test.

\_SB_.WMI1._WDG (1 of 9)
  GUID: 51F5230E-9677-46CD-A1CF-C0B23EE34DB7
  WMI Object:
    Flags          : 0x05 (Expensive | String)
    Object ID      : A0
    Instance       : 0x50

\_SB_.WMI1._WDG (2 of 9)
  GUID: 98479A64-33F5-4E33-A707-8E251EBBC3A1
  WMI Method:
    Flags          : 0x06 (Method | String)
    Object ID      : A1
    Instance       : 0x01
PASSED: Test 1, 98479A64-33F5-4E33-A707-8E251EBBC3A1 has associated method
\_SB_.WMI1.WMA1

\_SB_.WMI1._WDG (3 of 9)
  GUID: 6A4B54EF-A5ED-4D33-9455-B0D9B48DF4B3
  WMI Method:
    Flags          : 0x06 (Method | String)
    Object ID      : A2
    Instance       : 0x01
PASSED: Test 1, 6A4B54EF-A5ED-4D33-9455-B0D9B48DF4B3 has associated method
\_SB_.WMI1.WMA2

\_SB_.WMI1._WDG (4 of 9)
  GUID: 74F1EBB6-927A-4C7D-95DF-698E21E80EB5
  WMI Method:
    Flags          : 0x06 (Method | String)
    Object ID      : A3
    Instance       : 0x01
PASSED: Test 1, 74F1EBB6-927A-4C7D-95DF-698E21E80EB5 has associated method
\_SB_.WMI1.WMA3

\_SB_.WMI1._WDG (5 of 9)
  GUID: 7EEF04FF-4328-447C-B5BB-D449925D538D
  WMI Method:
    Flags          : 0x06 (Method | String)
    Object ID      : A4
    Instance       : 0x01
PASSED: Test 1, 7EEF04FF-4328-447C-B5BB-D449925D538D has associated method
\_SB_.WMI1.WMA4

\_SB_.WMI1._WDG (6 of 9)
  GUID: 8ADB159E-1E32-455C-BC93-308A7ED98246
  WMI Object:
    Flags          : 0x01 (Expensive)
    Object ID      : A5
    Instance       : 0x01

\_SB_.WMI1._WDG (7 of 9)
  GUID: 2651D9FD-911C-4B69-B94E-D0DED5963BD7
  WMI Method:
    Flags          : 0x06 (Method | String)
    Object ID      : A6
    Instance       : 0x01
PASSED: Test 1, 2651D9FD-911C-4B69-B94E-D0DED5963BD7 has associated method
\_SB_.WMI1.WMA6

\_SB_.WMI1._WDG (8 of 9)
  GUID: 7364651A-132F-4FE7-ADAA-40C6C7EE2E3B
  WMI Method:
    Flags          : 0x06 (Method | String)
    Object ID      : A7
    Instance       : 0x01
PASSED: Test 1, 7364651A-132F-4FE7-ADAA-40C6C7EE2E3B has associated method
\_SB_.WMI1.WMA7

\_SB_.WMI1._WDG (9 of 9)
  GUID: 05901221-D566-11D1-B2F0-00A0C9062910
  WMI Object:
    Flags          : 0x00 (None)
    Object ID      : BA
    Instance       : 0x01

\_SB_.WMI2._WDG (1 of 5)
  GUID: FCB424F1-075A-4E0E-BFC4-62F3E71771FA
  WMI Object:
    Flags          : 0x01 (Expensive)
    Object ID      : A7
    Instance       : 0x01

\_SB_.WMI2._WDG (2 of 5)
  GUID: E2BE5EE3-42DA-49DB-8378-1F5247388202
  WMI Method:
    Flags          : 0x02 (Method)
    Object ID      : A8
    Instance       : 0x01
PASSED: Test 1, E2BE5EE3-42DA-49DB-8378-1F5247388202 has associated method
\_SB_.WMI2.WMA8

\_SB_.WMI2._WDG (3 of 5)
  GUID: 7430019A-DCE9-4548-BAB0-9FDE0935CAFF
  WMI Object:
    Flags          : 0x05 (Expensive | String)
    Object ID      : A9
    Instance       : 0x0a

\_SB_.WMI2._WDG (4 of 5)
  GUID: 7FF47003-3B6C-4E5E-A227-E979824A85D1
  WMI Method:
    Flags          : 0x06 (Method | String)
    Object ID      : AA
    Instance       : 0x01
PASSED: Test 1, 7FF47003-3B6C-4E5E-A227-E979824A85D1 has associated method
\_SB_.WMI2.WMAA

\_SB_.WMI2._WDG (5 of 5)
  GUID: 05901221-D566-11D1-B2F0-00A0C9062910
  WMI Object:
    Flags          : 0x00 (None)
    Object ID      : BB
    Instance       : 0x01

================================================================================
8 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

wdat: WDAT Microsoft Hardware Watchdog Action Table test.
--------------------------------------------------------------------------------
ACPI WDAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

wakealarm: ACPI Wakealarm tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test existence of RTC with alarm interface.
PASSED: Test 1, RTC with a RTC alarm ioctl() interface found.

Test 2 of 4: Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 1 seconds in the future.
PASSED: Test 2, RTC wakealarm was triggered successfully.

Test 3 of 4: Test if wakealarm is fired.
PASSED: Test 3, RTC wakealarm triggered and fired successfully.

Test 4 of 4: Multiple wakealarm firing tests.
Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 2 seconds in the future.
Trigger wakealarm for 3 seconds in the future.
Trigger wakealarm for 4 seconds in the future.
PASSED: Test 4, RTC wakealarm triggered and fired successfully.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

waet: WAET Windows ACPI Emulated Devices Table test.
--------------------------------------------------------------------------------
ACPI WAET table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

uefi: UEFI Data Table test.
--------------------------------------------------------------------------------
Test 1 of 1: UEFI Data Table test.
UEFI ACPI Data Table:
  Identifier: D29563E8-CFE1-4D41-8E54-DA4322FEDE5C
  DataOffset: 0x0036
  Data:
  0000: 00 90 f5 da 00 00 00 00                          ........
PASSED: Test 1, No issues found in UEFI table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

tpm2: TPM2 Trusted Platform Module 2 test.
--------------------------------------------------------------------------------
ACPI TPM2 table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

tcpa: TCPA Trusted Computing Platform Alliance Capabilities Table test.
--------------------------------------------------------------------------------
Test 1 of 1: Validate TCPA table.
TCPA Table:
  Platform Class:                  0x0000
  Log Area Minimum Length:         0x00010000
  Log Area Start Address:          0x00000000daf6d000
PASSED: Test 1, No issues found in TCPA table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

syntaxcheck: Re-assemble DSDT and SSDTs to find syntax errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble and reassemble DSDT and SSDTs.

Checking ACPI table DSDT (#0)

FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 546
Line | AML source
--------------------------------------------------------------------------------
00543|     {
00544|         Method (_INI, 0, NotSerialized)  // _INI: Initialize
00545|         {
00546|             If (CondRefOf (\_OSI, Local0))
     |                                       ^
     | Warning 3144: Method Local is set but never used    (Local0)
00547|             {
00548|                 If (\_OSI ("Windows 2001"))
00549|                 {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
2447
Line | AML source
--------------------------------------------------------------------------------
02444|                     }
02445|                 }
02446| 
02447|                 Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
02448|                 {
02449|                     Store (0x00, NDID) /* \NDID */
02450|                     If (LNotEqual (DIDL, 0x00))
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
3719
Line | AML source
--------------------------------------------------------------------------------
03716|                             )
03717|                     })
03718|                     CreateDWordField (SCRS, \_SB.PCI0.LPC.SIO._Y26._BAS, TRMB)  // _BAS: Base Address
03719|                     Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
03720|                     {
03721|                         Store (\TBAB, TRMB) /* \_SB_.PCI0.LPC_.SIO_.TRMB */
03722|                         If (LEqual (\_SB.PCI0.LPC.TPM._STA (), 0x0F))
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RETURN_TYPES: Test 1, Assembler warning in line
5158
Line | AML source
--------------------------------------------------------------------------------
05155|                         }
05156|                     }
05157| 
05158|                     Method (_Q16, 0, NotSerialized)  // _Qxx: EC Query
     |                               ^
     | Warning 3115: Not all control paths return a value    (_Q16)
05159|                     {
05160|                         If (\_SB.PCI0.LPC.EC.HKEY.MHKK (0x40))
05161|                         {
================================================================================

ADVICE: (for Warning #3115, ASL_MSG_RETURN_TYPES): Some of the execution paths
do not return a value. All control paths that return must return a value
otherwise unexpected behaviour may occur. This error occurs because a branch on
an conditional op-code returns a value and another does not, which is
inconsistent behaviour.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 5568
Line | AML source
--------------------------------------------------------------------------------
05565|                         }
05566|                     }
05567| 
05568|                     Method (BATW, 1, NotSerialized)
     |                               ^
     | Remark 2146: Method Argument is never used    (Arg0)
05569|                     {
05570|                         Store (\_SB.PCI0.LPC.EC.BAT1.XB1S, Local0)
05571|                         If (LAnd (HB1A, LNot (SLUL)))
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5638
Line | AML source
--------------------------------------------------------------------------------
05635|                     }
05636| 
05637|                     Mutex (BATM, 0x07)
05638|                     Method (GBIF, 3, NotSerialized)
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05639|                     {
05640|                         Acquire (BATM, 0xFFFF)
05641|                         If (Arg2)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 5784
Line | AML source
--------------------------------------------------------------------------------
05781|                             If (Arg2)
05782|                             {
05783|                                 Multiply (Local3, Local1, Local1)
05784|                                 Divide (Local1, 0x03E8, Local7, Local1)
     |                                                             ^
     | Warning 3144: Method Local is set but never used    (Local7)
05785|                             }
05786|                         }
05787| 
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 5888
Line | AML source
--------------------------------------------------------------------------------
05885|                                 Store (Arg0, Local1)
05886|                                 If (LNot (DerefOf (Index (BT0I, 0x00))))
05887|                                 {
05888|                                     Divide (Local1, 0x0A, Local0, Local1)
     |                                                               ^
     | Warning 3144: Method Local is set but never used    (Local0)
05889|                                 }
05890| 
05891|                                 And (Local1, 0xFF, HT0L) /* \_SB_.PCI0.LPC_.EC__.HT0L */
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 6038
Line | AML source
--------------------------------------------------------------------------------
06035|                                 Store (Arg0, Local1)
06036|                                 If (LNot (DerefOf (Index (BT1I, 0x00))))
06037|                                 {
06038|                                     Divide (Local1, 0x0A, Local0, Local1)
     |                                                               ^
     | Warning 3144: Method Local is set but never used    (Local0)
06039|                                 }
06040| 
06041|                                 And (Local1, 0xFF, HT1L) /* \_SB_.PCI0.LPC_.EC__.HT1L */
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6519
Line | AML source
--------------------------------------------------------------------------------
06516|                             Return (\UAWS (Arg0))
06517|                         }
06518| 
06519|                         Method (MLCG, 1, NotSerialized)
     |                                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
06520|                         {
06521|                             Store (\KBLS (0x00, 0x00), Local0)
06522|                             Return (Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6543
Line | AML source
--------------------------------------------------------------------------------
06540|                             Return (Local0)
06541|                         }
06542| 
06543|                         Method (DSSG, 1, NotSerialized)
     |                                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
06544|                         {
06545|                             Or (0x0400, \PDCI, Local0)
06546|                             Return (Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6554
Line | AML source
--------------------------------------------------------------------------------
06551|                             Or (\PDCI, Arg0, \PDCI)
06552|                         }
06553| 
06554|                         Method (SBSG, 1, NotSerialized)
     |                                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
06555|                         {
06556|                             Return (\SYBC (0x00, 0x00))
06557|                         }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6564
Line | AML source
--------------------------------------------------------------------------------
06561|                             Return (\SYBC (0x01, Arg0))
06562|                         }
06563| 
06564|                         Method (PBLG, 1, NotSerialized)
     |                                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
06565|                         {
06566|                             Store (\BRLV, Local0)
06567|                             Or (Local0, 0x0F00, Local1)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6591
Line | AML source
--------------------------------------------------------------------------------
06588|                             Return (0x00)
06589|                         }
06590| 
06591|                         Method (PMSG, 1, NotSerialized)
     |                                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
06592|                         {
06593|                             Store (\PRSM (0x00, 0x00), Local0)
06594|                             If (LNot (\APIN))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6640
Line | AML source
--------------------------------------------------------------------------------
06637|                             Return (0x00)
06638|                         }
06639| 
06640|                         Method (ISSG, 1, NotSerialized)
     |                                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
06641|                         {
06642|                             Store (\ISSP, Local0)
06643|                             Or (Local0, 0x80, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6654
Line | AML source
--------------------------------------------------------------------------------
06651|                             Return (0x00)
06652|                         }
06653| 
06654|                         Method (FFSG, 1, NotSerialized)
     |                                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
06655|                         {
06656|                             Return (\IFRS (0x00, 0x00))
06657|                         }
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
6699
Line | AML source
--------------------------------------------------------------------------------
06696|                             Return (INDV) /* \_SB_.PCI0.LPC_.EC__.HKEY.INDV */
06697|                         }
06698| 
06699|                         Method (MHGI, 1, NotSerialized)
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
06700|                         {
06701|                             Name (RETB, Buffer (0x10) {})
06702|                             CreateByteField (RETB, 0x00, MHGS)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_METHOD: Test 1, Assembler error in line
7212
Line | AML source
--------------------------------------------------------------------------------
07209|                         })
07210|                     }
07211| 
07212|                     Name (_IRC, 0x00)  // _IRC: Inrush Current
     |                             ^
     | Error 6103: Reserved name must be a control method    (with zero arguments)
07213|                     OperationRegion (ATRP, SystemMemory, \ATRB, 0x00010000)
07214|                     Field (ATRP, AnyAcc, Lock, Preserve)
07215|                     {
================================================================================

ADVICE: (for Error #6103, ASL_MSG_RESERVED_METHOD): The reserved method must be
a control method, this occurs for example for the _Lxx, _Exx, _Wxx or _Qxx
methods, or for a predefined name that requires input arguments, or no return
value from prefefined names such as _DIS, _INI, _IRC, _OFF, _ON, _PSx.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 7901
Line | AML source
--------------------------------------------------------------------------------
07898| 
07899|                 Scope (\_SB.PCI0.PEG.VID)
07900|                 {
07901|                     Method (NBCI, 4, NotSerialized)
     |                               ^
     | Remark 2146: Method Argument is never used    (Arg0)
07902|                     {
07903|                         Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
07904|                         Store ("------- NBCI DSM --------", Debug)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 7901
Line | AML source
--------------------------------------------------------------------------------
07898| 
07899|                 Scope (\_SB.PCI0.PEG.VID)
07900|                 {
07901|                     Method (NBCI, 4, NotSerialized)
     |                               ^
     | Remark 2146: Method Argument is never used    (Arg1)
07902|                     {
07903|                         Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
07904|                         Store ("------- NBCI DSM --------", Debug)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 7901
Line | AML source
--------------------------------------------------------------------------------
07898| 
07899|                 Scope (\_SB.PCI0.PEG.VID)
07900|                 {
07901|                     Method (NBCI, 4, NotSerialized)
     |                               ^
     | Remark 2146: Method Argument is never used    (Arg3)
07902|                     {
07903|                         Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
07904|                         Store ("------- NBCI DSM --------", Debug)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7901
Line | AML source
--------------------------------------------------------------------------------
07898| 
07899|                 Scope (\_SB.PCI0.PEG.VID)
07900|                 {
07901|                     Method (NBCI, 4, NotSerialized)
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07902|                     {
07903|                         Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
07904|                         Store ("------- NBCI DSM --------", Debug)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

Assembler remark in line 7903
Line | AML source
--------------------------------------------------------------------------------
07900|                 {
07901|                     Method (NBCI, 4, NotSerialized)
07902|                     {
07903|                         Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                 ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
07904|                         Store ("------- NBCI DSM --------", Debug)
07905|                         Store (ToInteger (Arg2), _T_0) /* \_SB_.PCI0.PEG_.VID_.NBCI._T_0 */
07906|                         If (LEqual (_T_0, 0x00))
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
8167
Line | AML source
--------------------------------------------------------------------------------
08164|                         Return (0x80000002)
08165|                     }
08166| 
08167|                     Method (NVSB, 1, NotSerialized)
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
08168|                     {
08169|                         Name (CNT, 0x00)
08170|                         If (LEqual (PBCC, 0x01))
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 8186
Line | AML source
--------------------------------------------------------------------------------
08183|                                     If (LEqual (And (PBCR, 0x02), 0x00))
08184|                                     {
08185|                                         Multiply (Arg0, 0x03E8, Local0)
08186|                                         Divide (Local0, 0xFF, Local1, Local2)
     |                                                                   ^
     | Warning 3144: Method Local is set but never used    (Local1)
08187|                                         ShiftLeft (Local2, 0x08, Local2)
08188|                                         Store (Local2, PBDI) /* \_SB_.PCI0.PEG_.VID_.PBDI */
08189|                                         Store (0x86100000, PBCR) /* \_SB_.PCI0.PEG_.VID_.PBCR */
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 8633
Line | AML source
--------------------------------------------------------------------------------
08630|                     Return (0x00)
08631|                 }
08632| 
08633|                 Method (POSC, 3, Serialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg1)
08634|                 {
08635|                     CreateDWordField (Arg2, 0x00, CDW1)
08636|                     If (LNotEqual (Arg0, One))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_RETURN_VALUE: Test 1, Assembler warning
in line 9042
Line | AML source
--------------------------------------------------------------------------------
09039|                                 Return (UPCP) /* \_SB_.PCI0.EHC1.URTH.URMH.PRT0._UPC.UPCP */
09040|                             }
09041| 
09042|                             Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
     |                                       ^
     | Warning 3107: Reserved method must return a value    (Package required for _PLD)
09043|                             {
09044|                                 Name (PLDP, Buffer (0x10) {})
09045|                                 Store (\PLD0, PLDP) /* \_SB_.PCI0.EHC1.URTH.URMH.PRT0._PLD.PLDP */
================================================================================

ADVICE: (for Warning #3107, ASL_MSG_RESERVED_RETURN_VALUE): A reserved method
was expected to return a value, however, it does not. This is unexpected
behaviour that does not conform the the ACPI specification.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9552
Line | AML source
--------------------------------------------------------------------------------
09549|                 }
09550|             }
09551| 
09552|             Method (BPTS, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
09553|             {
09554|                 Store (0x01, HDBM) /* \_SB_.PCI0.LPC_.EC__.HDBM */
09555|                 If (LNotEqual (BSTS, 0x00))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9617
Line | AML source
--------------------------------------------------------------------------------
09614|                 }
09615|             }
09616| 
09617|             Method (BPON, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
09618|             {
09619|                 If (\_SB.PCI0.LPC.CSON)
09620|                 {
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 9707
Line | AML source
--------------------------------------------------------------------------------
09704|                 Else
09705|                 {
09706|                     Store (RBEC (0x47), Local2)
09707|                     And (Local2, 0x01, Local1)
     |                                            ^
     | Warning 3144: Method Local is set but never used    (Local1)
09708|                     And (Local2, 0x04, Local2)
09709|                     ShiftRight (Local2, 0x02, Local2)
09710|                 }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9773
Line | AML source
--------------------------------------------------------------------------------
09770| 
09771|         Scope (\_SB.PCI0.LPC.EC.HKEY)
09772|         {
09773|             Method (GSMS, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
09774|             {
09775|                 Return (\AUDC (0x00, 0x00))
09776|             }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 10557
Line | AML source
--------------------------------------------------------------------------------
10554| 
10555|         Scope (\_SB.PCI0.LPC.EC.HKEY)
10556|         {
10557|             Method (GHSL, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
10558|             {
10559|                 Return (\FNSC (0x00, 0x00))
10560|             }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 10760
Line | AML source
--------------------------------------------------------------------------------
10757|                 }
10758|             }
10759| 
10760|             Method (WGWK, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
10761|             {
10762|                 If (And (WGFL, 0x20))
10763|                 {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11611
Line | AML source
--------------------------------------------------------------------------------
11608|                 Return (Local7)
11609|             }
11610| 
11611|             Method (WMA1, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
11612|             {
11613|                 Acquire (MWMI, 0xFFFF)
11614|                 If (LEqual (SizeOf (Arg2), 0x00))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11611
Line | AML source
--------------------------------------------------------------------------------
11608|                 Return (Local7)
11609|             }
11610| 
11611|             Method (WMA1, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
11612|             {
11613|                 Acquire (MWMI, 0xFFFF)
11614|                 If (LEqual (SizeOf (Arg2), 0x00))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11635
Line | AML source
--------------------------------------------------------------------------------
11632|                 Return (DerefOf (Index (RETN, Local0)))
11633|             }
11634| 
11635|             Method (WMA2, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
11636|             {
11637|                 Acquire (MWMI, 0xFFFF)
11638|                 Store (CARG (Arg2), Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11635
Line | AML source
--------------------------------------------------------------------------------
11632|                 Return (DerefOf (Index (RETN, Local0)))
11633|             }
11634| 
11635|             Method (WMA2, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
11636|             {
11637|                 Acquire (MWMI, 0xFFFF)
11638|                 Store (CARG (Arg2), Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11656
Line | AML source
--------------------------------------------------------------------------------
11653|                 Return (DerefOf (Index (RETN, Local0)))
11654|             }
11655| 
11656|             Method (WMA3, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
11657|             {
11658|                 Acquire (MWMI, 0xFFFF)
11659|                 Store (CARG (Arg2), Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11656
Line | AML source
--------------------------------------------------------------------------------
11653|                 Return (DerefOf (Index (RETN, Local0)))
11654|             }
11655| 
11656|             Method (WMA3, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
11657|             {
11658|                 Acquire (MWMI, 0xFFFF)
11659|                 Store (CARG (Arg2), Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11677
Line | AML source
--------------------------------------------------------------------------------
11674|                 Return (DerefOf (Index (RETN, Local0)))
11675|             }
11676| 
11677|             Method (WMA4, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
11678|             {
11679|                 Acquire (MWMI, 0xFFFF)
11680|                 Store (CARG (Arg2), Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11677
Line | AML source
--------------------------------------------------------------------------------
11674|                 Return (DerefOf (Index (RETN, Local0)))
11675|             }
11676| 
11677|             Method (WMA4, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
11678|             {
11679|                 Acquire (MWMI, 0xFFFF)
11680|                 Store (CARG (Arg2), Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11698
Line | AML source
--------------------------------------------------------------------------------
11695|                 Return (DerefOf (Index (RETN, Local0)))
11696|             }
11697| 
11698|             Method (WQA5, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
11699|             {
11700|                 Acquire (MWMI, 0xFFFF)
11701|                 Store (\WMIS (0x05, 0x00), Local0)
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 11701
Line | AML source
--------------------------------------------------------------------------------
11698|             Method (WQA5, 1, NotSerialized)
11699|             {
11700|                 Acquire (MWMI, 0xFFFF)
11701|                 Store (\WMIS (0x05, 0x00), Local0)
     |                                                ^
     | Warning 3144: Method Local is set but never used    (Local0)
11702|                 Store (\WSPM, Index (PCFG, 0x00))
11703|                 Store (\WSPS, Index (PCFG, 0x04))
11704|                 Store (\WSMN, Index (PCFG, 0x08))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11712
Line | AML source
--------------------------------------------------------------------------------
11709|                 Return (PCFG) /* \_SB_.WMI1.PCFG */
11710|             }
11711| 
11712|             Method (WMA6, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
11713|             {
11714|                 Acquire (MWMI, 0xFFFF)
11715|                 If (LEqual (SizeOf (Arg2), 0x00))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11712
Line | AML source
--------------------------------------------------------------------------------
11709|                 Return (PCFG) /* \_SB_.WMI1.PCFG */
11710|             }
11711| 
11712|             Method (WMA6, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
11713|             {
11714|                 Acquire (MWMI, 0xFFFF)
11715|                 If (LEqual (SizeOf (Arg2), 0x00))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11740
Line | AML source
--------------------------------------------------------------------------------
11737|                 Return (DerefOf (Index (RETN, Local0)))
11738|             }
11739| 
11740|             Method (WMA7, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
11741|             {
11742|                 If (LEqual (SizeOf (Arg2), 0x00))
11743|                 {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11740
Line | AML source
--------------------------------------------------------------------------------
11737|                 Return (DerefOf (Index (RETN, Local0)))
11738|             }
11739| 
11740|             Method (WMA7, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
11741|             {
11742|                 If (LEqual (SizeOf (Arg2), 0x00))
11743|                 {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
11830
Line | AML source
--------------------------------------------------------------------------------
11827|                 Return (0x00)
11828|             }
11829| 
11830|             Method (SCMP, 3, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
11831|             {
11832|                 Store (SizeOf (Arg0), Local0)
11833|                 If (LEqual (Local0, 0x00))
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12615
Line | AML source
--------------------------------------------------------------------------------
12612|             {
12613|                  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   /* ........ */
12614|             })
12615|             Method (WQA7, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
12616|             {
12617|                 Acquire (\_SB.WMI1.MWMI, 0xFFFF)
12618|                 \WMIS (0x07, 0x00)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12631
Line | AML source
--------------------------------------------------------------------------------
12628|                 Return (PREL) /* \_SB_.WMI2.PREL */
12629|             }
12630| 
12631|             Method (WMA8, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
12632|             {
12633|                 CreateByteField (Arg2, 0x00, PRE0)
12634|                 CreateByteField (Arg2, 0x01, PRE1)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12631
Line | AML source
--------------------------------------------------------------------------------
12628|                 Return (PREL) /* \_SB_.WMI2.PREL */
12629|             }
12630| 
12631|             Method (WMA8, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
12632|             {
12633|                 CreateByteField (Arg2, 0x00, PRE0)
12634|                 CreateByteField (Arg2, 0x01, PRE1)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12719
Line | AML source
--------------------------------------------------------------------------------
12716|                 Return (Local7)
12717|             }
12718| 
12719|             Method (WMAA, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
12720|             {
12721|                 Acquire (\_SB.WMI1.MWMI, 0xFFFF)
12722|                 If (LEqual (SizeOf (Arg2), 0x00))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12719
Line | AML source
--------------------------------------------------------------------------------
12716|                 Return (Local7)
12717|             }
12718| 
12719|             Method (WMAA, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
12720|             {
12721|                 Acquire (\_SB.WMI1.MWMI, 0xFFFF)
12722|                 If (LEqual (SizeOf (Arg2), 0x00))
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
12924
Line | AML source
--------------------------------------------------------------------------------
12921|                 Return (Local0)
12922|             }
12923| 
12924|             Method (MHPF, 1, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
12925|             {
12926|                 Name (RETB, Buffer (0x25) {})
12927|                 Acquire (BFWM, 0xFFFF)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
12944
Line | AML source
--------------------------------------------------------------------------------
12941|                 Return (RETB) /* \_SB_.PCI0.LPC_.EC__.HKEY.MHPF.RETB */
12942|             }
12943| 
12944|             Method (MHIF, 1, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
12945|             {
12946|                 Name (RETB, Buffer (0x0A) {})
12947|                 Acquire (BFWM, 0xFFFF)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12962
Line | AML source
--------------------------------------------------------------------------------
12959| 
12960|         Scope (\_SB.PCI0.LPC.EC.HKEY)
12961|         {
12962|             Method (PSSG, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
12963|             {
12964|                 Return (\PSIF (0x00, 0x00))
12965|             }
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
13104
Line | AML source
--------------------------------------------------------------------------------
13101| 
13102|         Scope (\_SB.PCI0.PEG.VID)
13103|         {
13104|             Method (GOBT, 1, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
13105|             {
13106|                 Name (OPVK, Buffer (0xE6)
13107|                 {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13152
Line | AML source
--------------------------------------------------------------------------------
13149|         {
13150|             Name (OMPR, 0x02)
13151|             Name (HDAS, 0x00)
13152|             Method (NVOP, 4, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
13153|             {
13154|                 Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
13155|                 Store ("------- NV OPTIMUS DSM --------", Debug)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
13152
Line | AML source
--------------------------------------------------------------------------------
13149|         {
13150|             Name (OMPR, 0x02)
13151|             Name (HDAS, 0x00)
13152|             Method (NVOP, 4, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
13153|             {
13154|                 Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
13155|                 Store ("------- NV OPTIMUS DSM --------", Debug)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

Assembler remark in line 13154
Line | AML source
--------------------------------------------------------------------------------
13151|             Name (HDAS, 0x00)
13152|             Method (NVOP, 4, NotSerialized)
13153|             {
13154|                 Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                         ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
13155|                 Store ("------- NV OPTIMUS DSM --------", Debug)
13156|                 If (LNotEqual (Arg1, 0x0100))
13157|                 {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13276
Line | AML source
--------------------------------------------------------------------------------
13273|         Scope (\_SB.PCI0.PEG.VID)
13274|         {
13275|             Name (CPPC, 0x00)
13276|             Method (NVPS, 4, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
13277|             {
13278|                 Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
13279|                 Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13276
Line | AML source
--------------------------------------------------------------------------------
13273|         Scope (\_SB.PCI0.PEG.VID)
13274|         {
13275|             Name (CPPC, 0x00)
13276|             Method (NVPS, 4, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
13277|             {
13278|                 Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
13279|                 Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
13276
Line | AML source
--------------------------------------------------------------------------------
13273|         Scope (\_SB.PCI0.PEG.VID)
13274|         {
13275|             Name (CPPC, 0x00)
13276|             Method (NVPS, 4, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
13277|             {
13278|                 Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
13279|                 Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

Assembler remark in line 13278
Line | AML source
--------------------------------------------------------------------------------
13275|             Name (CPPC, 0x00)
13276|             Method (NVPS, 4, NotSerialized)
13277|             {
13278|                 Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                         ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
13279|                 Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
13280|                 Store ("------- NV GPS DSM --------", Debug)
13281|                 Store (ToInteger (Arg2), _T_0) /* \_SB_.PCI0.PEG_.VID_.NVPS._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 13279
Line | AML source
--------------------------------------------------------------------------------
13276|             Method (NVPS, 4, NotSerialized)
13277|             {
13278|                 Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
13279|                 Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                         ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
13280|                 Store ("------- NV GPS DSM --------", Debug)
13281|                 Store (ToInteger (Arg2), _T_0) /* \_SB_.PCI0.PEG_.VID_.NVPS._T_0 */
13282|                 If (LEqual (_T_0, 0x00))
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
14680
Line | AML source
--------------------------------------------------------------------------------
14677|         Return (SMI (0x12, Arg0, 0x00, 0x00, 0x00))
14678|     }
14679| 
14680|     Method (PMON, 2, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
14681|     {
14682|         Store (SizeOf (Arg0), Local0)
14683|         Name (TSTR, Buffer (Local0) {})
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
14996
Line | AML source
--------------------------------------------------------------------------------
14993|         Return (0x00)
14994|     }
14995| 
14996|     Method (SCMP, 2, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
14997|     {
14998|         Store (SizeOf (Arg0), Local0)
14999|         If (LNotEqual (Local0, SizeOf (Arg1)))
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

Table DSDT (0) reassembly: Found 1 errors, 9 warnings, 57 remarks.


Checking ACPI table SSDT (#1)

PASSED: Test 1, SSDT (1) reassembly, Found 0 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#2)

PASSED: Test 1, SSDT (2) reassembly, Found 0 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#3)

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 167
Line | AML source
--------------------------------------------------------------------------------
00164|             }
00165| 
00166|             Name (_PLD, ToPLD (
00167|                 PLD_Revision       = 0x1,
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
00168|                 PLD_IgnoreColor    = 0x1,
00169|                 PLD_Red            = 0x0,
00170|                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

Table SSDT (3) reassembly: Found 1 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#4)

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 376
Line | AML source
--------------------------------------------------------------------------------
00373|                 0x0000000F
00374|             }
00375|         })
00376|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00377|         {
00378|             0x80000000, 
00379|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 396
Line | AML source
--------------------------------------------------------------------------------
00393|             0x80000000
00394|         }
00395| 
00396|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00397|         {
00398|             0x80000000, 
00399|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 397
Line | AML source
--------------------------------------------------------------------------------
00394|         }
00395| 
00396|         Package (0x06)
00397|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00398|             0x80000000, 
00399|             0x80000000, 
00400|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 416
Line | AML source
--------------------------------------------------------------------------------
00413|             0x80000000
00414|         }
00415| 
00416|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00417|         {
00418|             0x80000000, 
00419|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 417
Line | AML source
--------------------------------------------------------------------------------
00414|         }
00415| 
00416|         Package (0x06)
00417|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00418|             0x80000000, 
00419|             0x80000000, 
00420|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 436
Line | AML source
--------------------------------------------------------------------------------
00433|             0x80000000
00434|         }
00435| 
00436|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00437|         {
00438|             0x80000000, 
00439|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 437
Line | AML source
--------------------------------------------------------------------------------
00434|         }
00435| 
00436|         Package (0x06)
00437|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00438|             0x80000000, 
00439|             0x80000000, 
00440|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 456
Line | AML source
--------------------------------------------------------------------------------
00453|             0x80000000
00454|         }
00455| 
00456|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00457|         {
00458|             0x80000000, 
00459|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 457
Line | AML source
--------------------------------------------------------------------------------
00454|         }
00455| 
00456|         Package (0x06)
00457|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00458|             0x80000000, 
00459|             0x80000000, 
00460|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 476
Line | AML source
--------------------------------------------------------------------------------
00473|             0x80000000
00474|         }
00475| 
00476|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00477|         {
00478|             0x80000000, 
00479|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 477
Line | AML source
--------------------------------------------------------------------------------
00474|         }
00475| 
00476|         Package (0x06)
00477|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00478|             0x80000000, 
00479|             0x80000000, 
00480|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 496
Line | AML source
--------------------------------------------------------------------------------
00493|             0x80000000
00494|         }
00495| 
00496|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00497|         {
00498|             0x80000000, 
00499|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 497
Line | AML source
--------------------------------------------------------------------------------
00494|         }
00495| 
00496|         Package (0x06)
00497|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00498|             0x80000000, 
00499|             0x80000000, 
00500|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 516
Line | AML source
--------------------------------------------------------------------------------
00513|             0x80000000
00514|         }
00515| 
00516|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00517|         {
00518|             0x80000000, 
00519|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 517
Line | AML source
--------------------------------------------------------------------------------
00514|         }
00515| 
00516|         Package (0x06)
00517|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00518|             0x80000000, 
00519|             0x80000000, 
00520|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 536
Line | AML source
--------------------------------------------------------------------------------
00533|             0x80000000
00534|         }
00535| 
00536|         Name (_PSS, Package (0x10)  // _PSS: Performance Supported States
     |           ^
     | Error 6126: syntax error, unexpected PARSEOP_NAME
00537|         {
00538|             Package (0x06)
00539|             {
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 697
Line | AML source
--------------------------------------------------------------------------------
00694|                 0x00000C00, 
00695|                 0x00000C00
00696|             }
00697|         })
     |         ^
     | Error 6126: syntax error, unexpected ')'  
00698|         Package (0x06)
00699|         {
00700|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 708
Line | AML source
--------------------------------------------------------------------------------
00705|             0x80000000
00706|         }
00707| 
00708|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00709|         {
00710|             0x80000000, 
00711|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 709
Line | AML source
--------------------------------------------------------------------------------
00706|         }
00707| 
00708|         Package (0x06)
00709|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00710|             0x80000000, 
00711|             0x80000000, 
00712|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 728
Line | AML source
--------------------------------------------------------------------------------
00725|             0x80000000
00726|         }
00727| 
00728|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00729|         {
00730|             0x80000000, 
00731|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 729
Line | AML source
--------------------------------------------------------------------------------
00726|         }
00727| 
00728|         Package (0x06)
00729|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00730|             0x80000000, 
00731|             0x80000000, 
00732|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 748
Line | AML source
--------------------------------------------------------------------------------
00745|             0x80000000
00746|         }
00747| 
00748|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00749|         {
00750|             0x80000000, 
00751|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 749
Line | AML source
--------------------------------------------------------------------------------
00746|         }
00747| 
00748|         Package (0x06)
00749|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00750|             0x80000000, 
00751|             0x80000000, 
00752|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 768
Line | AML source
--------------------------------------------------------------------------------
00765|             0x80000000
00766|         }
00767| 
00768|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00769|         {
00770|             0x80000000, 
00771|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 769
Line | AML source
--------------------------------------------------------------------------------
00766|         }
00767| 
00768|         Package (0x06)
00769|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00770|             0x80000000, 
00771|             0x80000000, 
00772|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 788
Line | AML source
--------------------------------------------------------------------------------
00785|             0x80000000
00786|         }
00787| 
00788|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00789|         {
00790|             0x80000000, 
00791|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 789
Line | AML source
--------------------------------------------------------------------------------
00786|         }
00787| 
00788|         Package (0x06)
00789|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00790|             0x80000000, 
00791|             0x80000000, 
00792|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 808
Line | AML source
--------------------------------------------------------------------------------
00805|             0x80000000
00806|         }
00807| 
00808|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00809|         {
00810|             0x80000000, 
00811|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 809
Line | AML source
--------------------------------------------------------------------------------
00806|         }
00807| 
00808|         Package (0x06)
00809|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00810|             0x80000000, 
00811|             0x80000000, 
00812|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 828
Line | AML source
--------------------------------------------------------------------------------
00825|             0x80000000
00826|         }
00827| 
00828|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00829|         {
00830|             0x80000000, 
00831|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 829
Line | AML source
--------------------------------------------------------------------------------
00826|         }
00827| 
00828|         Package (0x06)
00829|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00830|             0x80000000, 
00831|             0x80000000, 
00832|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 848
Line | AML source
--------------------------------------------------------------------------------
00845|             0x80000000
00846|         }
00847| 
00848|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00849|         {
00850|             0x80000000, 
00851|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 849
Line | AML source
--------------------------------------------------------------------------------
00846|         }
00847| 
00848|         Package (0x06)
00849|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00850|             0x80000000, 
00851|             0x80000000, 
00852|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 899
Line | AML source
--------------------------------------------------------------------------------
00896|             }
00897|         })
00898|     }
00899| }
     | ^                                         
     | Error 6126: syntax error, unexpected '}', expecting $end and premature End-Of-File
00900| 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] SyntaxCheckIASLCompilerAborted: Test 1, Compilation aborted early
due to a parser detected syntax error.

ADVICE: Some subsequent errors may not be detected because the compiler had to
terminate prematurely. If the compiler did not abort early then potentially
correct code may parse incorrectly producing some or many false positive errors.

Table SSDT (4) reassembly: Found 34 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#5)

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 107
Line | AML source
--------------------------------------------------------------------------------
00104|         {
00105|             Store (CPDC (Arg0), Local0)
00106|             GCAP (Local0)
00107|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00108|         }
00109| 
00110|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
117
Line | AML source
--------------------------------------------------------------------------------
00114|             Return (Local0)
00115|         }
00116| 
00117|         Method (CPDC, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00118|         {
00119|             CreateDWordField (Arg0, Zero, REVS)
00120|             CreateDWordField (Arg0, 0x04, SIZE)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 132
Line | AML source
--------------------------------------------------------------------------------
00129|             Return (COSC (ToUUID (""), REVS, SIZE, Local2))
00130|         }
00131| 
00132|         Method (COSC, 4, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg2)
00133|         {
00134|             CreateDWordField (Arg3, Zero, STS0)
00135|             CreateDWordField (Arg3, 0x04, CAP0)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
132
Line | AML source
--------------------------------------------------------------------------------
00129|             Return (COSC (ToUUID (""), REVS, SIZE, Local2))
00130|         }
00131| 
00132|         Method (COSC, 4, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00133|         {
00134|             CreateDWordField (Arg3, Zero, STS0)
00135|             CreateDWordField (Arg3, 0x04, CAP0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 135
Line | AML source
--------------------------------------------------------------------------------
00132|         Method (COSC, 4, NotSerialized)
00133|         {
00134|             CreateDWordField (Arg3, Zero, STS0)
00135|             CreateDWordField (Arg3, 0x04, CAP0)
     |                                             ^
     | Remark 2089: Object is not referenced    (Name is within method [COSC])
00136|             CreateDWordField (Arg0, Zero, IID0)
00137|             CreateDWordField (Arg0, 0x04, IID1)
00138|             CreateDWordField (Arg0, 0x08, IID2)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
161
Line | AML source
--------------------------------------------------------------------------------
00158|             Return (Arg3)
00159|         }
00160| 
00161|         Method (GCAP, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00162|         {
00163|             CreateDWordField (Arg0, Zero, STS0)
00164|             CreateDWordField (Arg0, 0x04, CAP0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 200
Line | AML source
--------------------------------------------------------------------------------
00197|         {
00198|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00199|             GCAP (Local0)
00200|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00201|         }
00202| 
00203|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
240
Line | AML source
--------------------------------------------------------------------------------
00237|             Return (Zero)
00238|         }
00239| 
00240|         Method (APCT, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00241|         {
00242|             If (LAnd (And (CFGD, 0x2E), LNot (And (SDTL, 0x20))))
00243|             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
250
Line | AML source
--------------------------------------------------------------------------------
00247|             }
00248|         }
00249| 
00250|         Method (APPT, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00251|         {
00252|             If (LAnd (And (CFGD, One), LNot (And (SDTL, 0x10))))
00253|             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 267
Line | AML source
--------------------------------------------------------------------------------
00264|         {
00265|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00266|             GCAP (Local0)
00267|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00268|         }
00269| 
00270|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 314
Line | AML source
--------------------------------------------------------------------------------
00311|         {
00312|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00313|             GCAP (Local0)
00314|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00315|         }
00316| 
00317|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 361
Line | AML source
--------------------------------------------------------------------------------
00358|         {
00359|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00360|             GCAP (Local0)
00361|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00362|         }
00363| 
00364|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 408
Line | AML source
--------------------------------------------------------------------------------
00405|         {
00406|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00407|             GCAP (Local0)
00408|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00409|         }
00410| 
00411|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 455
Line | AML source
--------------------------------------------------------------------------------
00452|         {
00453|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00454|             GCAP (Local0)
00455|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00456|         }
00457| 
00458|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 502
Line | AML source
--------------------------------------------------------------------------------
00499|         {
00500|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00501|             GCAP (Local0)
00502|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00503|         }
00504| 
00505|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

Table SSDT (5) reassembly: Found 0 errors, 8 warnings, 7 remarks.


Checking ACPI table SSDT (#6)

PASSED: Test 1, SSDT (6) reassembly, Found 0 errors, 0 warnings, 0 remarks.


================================================================================
3 passed, 114 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

stao: STAO Status Override Table test.
--------------------------------------------------------------------------------
ACPI STAO table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

srat: SRAT System Resource Affinity Table test.
--------------------------------------------------------------------------------
ACPI SRAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spmi: SPMI Service Processor Management Interface Description Table test.
--------------------------------------------------------------------------------
ACPI SPMI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spcr: SPCR Serial Port Console Redirection Table test.
--------------------------------------------------------------------------------
ACPI SPCR table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slit: SLIT System Locality Distance Information test.
--------------------------------------------------------------------------------
ACPI SLIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slic: SLIC Software Licensing Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: SLIC Software Licensing Description Table test.
Software Licensing Description Table
SLIC Public Key Structure has had minimal check due to proprietary nature of the
table
SLIC Windows Marker Structure has had minimal check due to proprietary nature of
the table
PASSED: Test 1, No issues found in SLIC table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

sbst: SBST Smart Battery Specification Table test.
--------------------------------------------------------------------------------
ACPI SBST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

rsdt: RSDT Root System Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDT Root System Description Table test.
PASSED: Test 1, No issues found in RSDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

rsdp: RSDP Root System Description Pointer test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDP Root System Description Pointer test.
PASSED: Test 1, No issues found in RSDP table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pcc: Processor Clocking Control (PCC) test.
--------------------------------------------------------------------------------
Test 1 of 1: Processor Clocking Control (PCC) test.
This test checks the sanity of the Processor Clocking Control as found on some
HP ProLiant machines. Most computers do not use this interface to control the
CPU clock frequency, so this test will be skipped.

This machine does not use Processor Clocking Control (PCC).

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

osilinux: Disassemble DSDT to check for _OSI("Linux").
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble DSDT to check for _OSI("Linux").
This is not strictly a failure mode, it just alerts one that this has been
defined in the DSDT and probably should be avoided since the Linux ACPI driver
matches onto the Windows _OSI strings
                {
                    Store (0x01, \WIN8)
                }
                If (\_OSI ("Linux"))
                {
                    Store (0x01, \LNUX)
                }
                If (\_OSI ("FreeBSD"))
                {
                    Store (0x01, \LNUX)
                }
            }
WARNING: Test 1, DSDT implements a deprecated _OSI("Linux") test.

================================================================================
0 passed, 0 failed, 1 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

method: ACPI DSDT Method Semantic tests.
--------------------------------------------------------------------------------
Test 1 of 191: Test Method Names.
Found 1957 Objects 
PASSED: Test 1, Method names contain legal characters.

Test 2 of 191: Test _AEI.
SKIPPED: Test 2, Skipping test for non-existant object _AEI.

Test 3 of 191: Test _EVT (Event Method).
SKIPPED: Test 3, Skipping test for non-existant object _EVT.

Test 4 of 191: Test _DLM (Device Lock Mutex).
SKIPPED: Test 4, Skipping test for non-existant object _DLM.

Test 5 of 191: Test _PIC (Inform AML of Interrupt Model).
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.

Test 6 of 191: Test _CID (Compatible ID).
PASSED: Test 6, \_SB_.PCI0._CID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 6, \_SB_.PCI0.LPC_.KBD_._CID returned an integer 0x0303d041 (EISA
ID PNP0303).
PASSED: Test 6, \_SB_.PCI0.LPC_.MOU_._CID returned an integer 0x130fd041 (EISA
ID PNP0F13).
PASSED: Test 6, \_SB_.PCI0.LPC_.TPM_._CID returned an integer 0x310cd041 (EISA
ID PNP0C31).
PASSED: Test 6, \_SB_.IFFS._CID returned an integer 0x020cd041 (EISA ID
PNP0C02).

Test 7 of 191: Test _DDN (DOS Device Name).
SKIPPED: Test 7, Skipping test for non-existant object _DDN.

Test 8 of 191: Test _HID (Hardware ID).
PASSED: Test 8, \_SB_.LNKA._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKB._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKC._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKD._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKE._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKF._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKG._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKH._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.MEM_._HID returned an integer 0x010cd041 (EISA ID
PNP0C01).
PASSED: Test 8, \_SB_.LID_._HID returned an integer 0x0d0cd041 (EISA ID
PNP0C0D).
PASSED: Test 8, \_SB_.SLPB._HID returned an integer 0x0e0cd041 (EISA ID
PNP0C0E).
PASSED: Test 8, \_SB_.PCI0._HID returned an integer 0x080ad041 (EISA ID
PNP0A08).
PASSED: Test 8, \_SB_.PCI0.LPC_.SIO_._HID returned an integer 0x020cd041 (EISA
ID PNP0C02).
PASSED: Test 8, \_SB_.PCI0.LPC_.PIC_._HID returned an integer 0x0000d041 (EISA
ID PNP0000).
PASSED: Test 8, \_SB_.PCI0.LPC_.TIMR._HID returned an integer 0x0001d041 (EISA
ID PNP0100).
PASSED: Test 8, \_SB_.PCI0.LPC_.HPET._HID returned an integer 0x0301d041 (EISA
ID PNP0103).
PASSED: Test 8, \_SB_.PCI0.LPC_.DMAC._HID returned an integer 0x0002d041 (EISA
ID PNP0200).
PASSED: Test 8, \_SB_.PCI0.LPC_.SPKR._HID returned an integer 0x0008d041 (EISA
ID PNP0800).
PASSED: Test 8, \_SB_.PCI0.LPC_.FPU_._HID returned an integer 0x040cd041 (EISA
ID PNP0C04).
PASSED: Test 8, \_SB_.PCI0.LPC_.RTC_._HID returned an integer 0x000bd041 (EISA
ID PNP0B00).
PASSED: Test 8, \_SB_.PCI0.LPC_.KBD_._HID returned an integer 0x7100ae30 (EISA
ID LEN0071).
PASSED: Test 8, \_SB_.PCI0.LPC_.MOU_._HID returned an integer 0x1500ae30 (EISA
ID LEN0015).
PASSED: Test 8, \_SB_.PCI0.LPC_.TPM_._HID returned an integer 0x310cd041 (EISA
ID PNP0C31).
PASSED: Test 8, \_SB_.PCI0.LPC_.EC__._HID returned an integer 0x090cd041 (EISA
ID PNP0C09).
PASSED: Test 8, \_SB_.PCI0.LPC_.EC__.BAT0._HID returned an integer 0x0a0cd041
(EISA ID PNP0C0A).
PASSED: Test 8, \_SB_.PCI0.LPC_.EC__.BAT1._HID returned an integer 0x0a0cd041
(EISA ID PNP0C0A).
PASSED: Test 8, \_SB_.PCI0.LPC_.EC__.AC__._HID returned a string 'ACPI0003' as
expected.
PASSED: Test 8, \_SB_.PCI0.LPC_.EC__.WGSH._HID returned an integer 0x7800ae30
(EISA ID LEN0078).
PASSED: Test 8, \_SB_.PCI0.LPC_.EC__.HKEY._HID returned an integer 0x6800ae30
(EISA ID LEN0068).
PASSED: Test 8, \_SB_.WMI1._HID returned an integer 0x140cd041 (EISA ID
PNP0C14).
PASSED: Test 8, \_SB_.WMI2._HID returned an integer 0x140cd041 (EISA ID
PNP0C14).
PASSED: Test 8, \_SB_.IFFS._HID returned an integer 0x9233d425 (EISA ID
INT3392).

Test 9 of 191: Test _HRV (Hardware Revision Number).
SKIPPED: Test 9, Skipping test for non-existant object _HRV.

Test 10 of 191: Test _MLS (Multiple Language String).
SKIPPED: Test 10, Skipping test for non-existant object _MLS.

Test 11 of 191: Test _PLD (Physical Device Location).
PASSED: Test 11, \_SB_.PCI0.SAT1.PRT1._PLD correctly returned a sane looking
package.
PASSED: Test 11, \_SB_.PCI0.XHCI.URTH.HSP0._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.URTH.HSP1._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.URTH.HSP2._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.URTH.HSP3._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.URTH.SSP0._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.URTH.SSP1._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.URTH.SSP2._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.URTH.SSP3._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.URTH.URMH._PLD correctly returned a sane
looking package.
FAILED [MEDIUM] MethodReturnNullObj: Test 11,
\_SB_.PCI0.EHC1.URTH.URMH.PRT0._PLD returned a NULL object, and did not return
ACPI_TYPE_PACKAGE.
PASSED: Test 11, \_SB_.PCI0.EHC1.URTH.URMH.PRT1._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.URTH.URMH.PRT2._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.URTH.URMH.PRT3._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.URTH.URMH.PRT4._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.URTH.URMH.PRT5._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.URTH.URMH.PRT6._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.URTH.URMH.PRT7._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.URTH.URMH._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.URTH.URMH.PRT8._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.URTH.URMH.PRT9._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.URTH.URMH.PRTA._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.URTH.URMH.PRTB._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.URTH.URMH.PRTC._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.URTH.URMH.PRTD._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.URTH.URMH.PRTD.WCAM._PLD correctly returned a
sane looking package.

Test 12 of 191: Test _SUB (Subsystem ID).
SKIPPED: Test 12, Skipping test for non-existant object _SUB.

Test 13 of 191: Test _SUN (Slot User Number).
SKIPPED: Test 13, Skipping test for non-existant object _SUN.

Test 14 of 191: Test _STR (String).
SKIPPED: Test 14, Skipping test for non-existant object _STR.

Test 15 of 191: Test _UID (Unique ID).
PASSED: Test 15, \_SB_.LNKA._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.LNKB._UID correctly returned sane looking value
0x00000002.
PASSED: Test 15, \_SB_.LNKC._UID correctly returned sane looking value
0x00000003.
PASSED: Test 15, \_SB_.LNKD._UID correctly returned sane looking value
0x00000004.
PASSED: Test 15, \_SB_.LNKE._UID correctly returned sane looking value
0x00000005.
PASSED: Test 15, \_SB_.LNKF._UID correctly returned sane looking value
0x00000006.
PASSED: Test 15, \_SB_.LNKG._UID correctly returned sane looking value
0x00000007.
PASSED: Test 15, \_SB_.LNKH._UID correctly returned sane looking value
0x00000008.
PASSED: Test 15, \_SB_.PCI0.LPC_.SIO_._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPC_.TPM_._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.PCI0.LPC_.EC__._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPC_.EC__.BAT0._UID correctly returned sane looking
value 0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPC_.EC__.BAT1._UID correctly returned sane looking
value 0x00000001.
PASSED: Test 15, \_SB_.PCI0.LPC_.EC__.AC__._UID correctly returned sane looking
value 0x00000000.
PASSED: Test 15, \_SB_.WMI1._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.WMI2._UID correctly returned sane looking value
0x00000002.

Test 16 of 191: Test _CDM (Clock Domain).
SKIPPED: Test 16, Skipping test for non-existant object _CDM.

Test 17 of 191: Test _CRS (Current Resource Settings).
PASSED: Test 17, \_SB_.LNKA._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKB._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKC._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKD._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKE._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKF._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKG._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKH._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.MEM_._CRS (32-bit Fixed Location Memory Range Descriptor)
looks sane.
PASSED: Test 17, \_SB_.PCI0._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.SIO_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.PIC_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.TIMR._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.HPET._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.DMAC._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.SPKR._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.FPU_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.RTC_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.KBD_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.MOU_._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.TPM_._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC_.EC__._CRS (I/O Port Descriptor) looks sane.

Test 18 of 191: Test _DSD (Device Specific Data).
SKIPPED: Test 18, Skipping test for non-existant object _DSD.

Test 19 of 191: Test _DIS (Disable).
PASSED: Test 19, \_SB_.LNKA._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKB._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKC._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKD._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKE._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKF._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKG._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKH._DIS returned no values as expected.

Test 20 of 191: Test _DMA (Direct Memory Access).
SKIPPED: Test 20, Skipping test for non-existant object _DMA.

Test 21 of 191: Test _FIX (Fixed Register Resource Provider).
SKIPPED: Test 21, Skipping test for non-existant object _FIX.

Test 22 of 191: Test _GSB (Global System Interrupt Base).
SKIPPED: Test 22, Skipping test for non-existant object _GSB.

Test 23 of 191: Test _HPP (Hot Plug Parameters).
SKIPPED: Test 23, Skipping test for non-existant object _HPP.

Test 24 of 191: Test _PRS (Possible Resource Settings).
PASSED: Test 24, \_SB_.LNKA._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKB._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKC._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKD._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKE._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKF._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKG._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKH._PRS (IRQ Descriptor) looks sane.

Test 25 of 191: Test _PXM (Proximity).
SKIPPED: Test 25, Skipping test for non-existant object _PXM.

Test 26 of 191: Test _CCA (Cache Coherency Attribute).
SKIPPED: Test 26, Skipping test for non-existant object _CCA.

Test 27 of 191: Test _EDL (Eject Device List).
SKIPPED: Test 27, Skipping test for non-existant object _EDL.

Test 28 of 191: Test _EJD (Ejection Dependent Device).
PASSED: Test 28, \_SB_.PCI0.EXP3.SLOT._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI0.EHC1.URTH.URMH.PRT5._EJD correctly returned a
string.
PASSED: Test 28, \_SB_.PCI0.EHC2.URTH.URMH.PRTC._EJD correctly returned a
string.

Test 29 of 191: Test _EJ0 (Eject).
PASSED: Test 29, \_SB_.PCI0.LPC_.EC__.BAT1._EJ0 returned no values as expected.
PASSED: Test 29, \_SB_.PCI0.SAT1.PRT1._EJ0 returned no values as expected.

Test 30 of 191: Test _EJ1 (Eject).
SKIPPED: Test 30, Skipping test for non-existant object _EJ1.

Test 31 of 191: Test _EJ2 (Eject).
SKIPPED: Test 31, Skipping test for non-existant object _EJ2.

Test 32 of 191: Test _EJ3 (Eject).
SKIPPED: Test 32, Skipping test for non-existant object _EJ3.

Test 33 of 191: Test _EJ4 (Eject).
SKIPPED: Test 33, Skipping test for non-existant object _EJ4.

Test 34 of 191: Test _LCK (Lock).
SKIPPED: Test 34, Skipping test for non-existant object _LCK.

Test 35 of 191: Test _RMV (Remove).
PASSED: Test 35, \_SB_.PCI0.EXP3.SLOT._RMV correctly returned sane looking value
0x00000001.

Test 36 of 191: Test _STA (Status).
PASSED: Test 36, \_SB_.LNKA._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.LNKB._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.LNKC._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.LNKD._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.LNKE._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.LNKF._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.LNKG._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.LNKH._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.PCI0.LPC_.HPET._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.LPC_.TPM_._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPC_.EC__.PUBS._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPC_.EC__.BAT0._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.LPC_.EC__.BAT1._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPC_.EC__.AC__._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.LPC_.EC__.WGSH._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.LPC_.EC__.HKEY._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.PEG_.VID_._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.SAT1.PRT1._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.EHC2.URTH.URMH.PRTD.WCAM._STA correctly returned
sane looking value 0x0000000f.

Test 37 of 191: Test _DEP (Operational Region Dependencies).
SKIPPED: Test 37, Skipping test for non-existant object _DEP.

Test 38 of 191: Test _BDN (BIOS Dock Name).
SKIPPED: Test 38, Skipping test for non-existant object _BDN.

Test 39 of 191: Test _BBN (Base Bus Number).
PASSED: Test 39, \_SB_.PCI0._BBN correctly returned an integer.

Test 40 of 191: Test _DCK (Dock).
SKIPPED: Test 40, Skipping test for non-existant object _DCK.

Test 41 of 191: Test _INI (Initialize).
PASSED: Test 41, \_SB_._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.VID_._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.LPC_.EC__._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.PEG_.VID_._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.EXP1._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.EXP3._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.XHCI._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.EHC1._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.EHC2._INI returned no values as expected.

Test 42 of 191: Test _GLK (Global Lock).
SKIPPED: Test 42, Skipping test for non-existant object _GLK.

Test 43 of 191: Test _SEG (Segment).
SKIPPED: Test 43, Skipping test for non-existant object _SEG.

Test 44 of 191: Test _OFF (Set resource off).
PASSED: Test 44, \_SB_.PCI0.LPC_.EC__.PUBS._OFF returned no values as expected.

Test 45 of 191: Test _ON (Set resource on).
SKIPPED: Test 45, Skipping test for non-existant object _ON.

Test 46 of 191: Test _DSW (Device Sleep Wake).
SKIPPED: Test 46, Skipping test for non-existant object _DSW.

Test 47 of 191: Test _IRC (In Rush Current).
FAILED [MEDIUM] MethodShouldReturnNothing: Test 47, \_SB_.PCI0.PEG_.VID_._IRC
returned values, but was expected to return nothing.
Object returned:
  INTEGER: 0x00000000

ADVICE: This probably won't cause any errors, but it should be fixed as the AML
code is not conforming to the expected behaviour as described in the ACPI
specification.


Test 48 of 191: Test _PRE (Power Resources for Enumeration).
SKIPPED: Test 48, Skipping test for non-existant object _PRE.

Test 49 of 191: Test _PR0 (Power Resources for D0).
PASSED: Test 49, \_SB_.PCI0.XHCI._PR0 correctly returned a sane looking package.
PASSED: Test 49, \_SB_.PCI0.EHC1._PR0 correctly returned a sane looking package.
PASSED: Test 49, \_SB_.PCI0.EHC2._PR0 correctly returned a sane looking package.

Test 50 of 191: Test _PR1 (Power Resources for D1).
PASSED: Test 50, \_SB_.PCI0.XHCI._PR1 correctly returned a sane looking package.
PASSED: Test 50, \_SB_.PCI0.EHC1._PR1 correctly returned a sane looking package.
PASSED: Test 50, \_SB_.PCI0.EHC2._PR1 correctly returned a sane looking package.

Test 51 of 191: Test _PR2 (Power Resources for D2).
PASSED: Test 51, \_SB_.PCI0.XHCI._PR2 correctly returned a sane looking package.
PASSED: Test 51, \_SB_.PCI0.EHC1._PR2 correctly returned a sane looking package.
PASSED: Test 51, \_SB_.PCI0.EHC2._PR2 correctly returned a sane looking package.

Test 52 of 191: Test _PR3 (Power Resources for D3).
SKIPPED: Test 52, Skipping test for non-existant object _PR3.

Test 53 of 191: Test _PRW (Power Resources for Wake).
PASSED: Test 53, \_SB_.LID_._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.SLPB._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.IGBE._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.EXP3._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.XHCI._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.EHC1._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.EHC2._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.HDEF._PRW correctly returned a sane looking package.

Test 54 of 191: Test _PS0 (Power State 0).
PASSED: Test 54, \_SB_.PCI0.VID_._PS0 returned no values as expected.
PASSED: Test 54, \_SB_.PCI0.PEG_.VID_._PS0 returned no values as expected.

Test 55 of 191: Test _PS1 (Power State 1).
PASSED: Test 55, \_SB_.PCI0.VID_._PS1 returned no values as expected.
PASSED: Test 55, \_SB_.PCI0.PEG_.VID_._PS1 returned no values as expected.

Test 56 of 191: Test _PS2 (Power State 2).
PASSED: Test 56, \_SB_.PCI0.VID_._PS2 returned no values as expected.
PASSED: Test 56, \_SB_.PCI0.PEG_.VID_._PS2 returned no values as expected.

Test 57 of 191: Test _PS3 (Power State 3).
PASSED: Test 57, \_SB_.PCI0.VID_._PS3 returned no values as expected.
PASSED: Test 57, \_SB_.PCI0.PEG_.VID_._PS3 returned no values as expected.

Test 58 of 191: Test _PSC (Power State Current).
SKIPPED: Test 58, Skipping test for non-existant object _PSC.

Test 59 of 191: Test _PSE (Power State for Enumeration).
SKIPPED: Test 59, Skipping test for non-existant object _PSE.

Test 60 of 191: Test _PSW (Power State Wake).
PASSED: Test 60, \_SB_.LID_._PSW returned no values as expected.
PASSED: Test 60, \_SB_.SLPB._PSW returned no values as expected.
PASSED: Test 60, \_SB_.PCI0.HDEF._PSW returned no values as expected.

Test 61 of 191: Test _S1D (S1 Device State).
SKIPPED: Test 61, Skipping test for non-existant object _S1D.

Test 62 of 191: Test _S2D (S2 Device State).
SKIPPED: Test 62, Skipping test for non-existant object _S2D.

Test 63 of 191: Test _S3D (S3 Device State).
PASSED: Test 63, \_SB_.PCI0._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.VID_._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.LPC_._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.PEG_._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.PEG_.VID_._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.IGBE._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.SAT1._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.SAT2._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.SMBU._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.XHCI._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.EHC1._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.EHC2._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.HDEF._S3D correctly returned an integer.

Test 64 of 191: Test _S4D (S4 Device State).
SKIPPED: Test 64, Skipping test for non-existant object _S4D.

Test 65 of 191: Test _S0W (S0 Device Wake State).
SKIPPED: Test 65, Skipping test for non-existant object _S0W.

Test 66 of 191: Test _S1W (S1 Device Wake State).
SKIPPED: Test 66, Skipping test for non-existant object _S1W.

Test 67 of 191: Test _S2W (S2 Device Wake State).
SKIPPED: Test 67, Skipping test for non-existant object _S2W.

Test 68 of 191: Test _S3W (S3 Device Wake State).
SKIPPED: Test 68, Skipping test for non-existant object _S3W.

Test 69 of 191: Test _S4W (S4 Device Wake State).
SKIPPED: Test 69, Skipping test for non-existant object _S4W.

Test 70 of 191: Test _RST (Device Reset).
SKIPPED: Test 70, Skipping test for non-existant object _RST.

Test 71 of 191: Test _PRR (Power Resource for Reset).
SKIPPED: Test 71, Skipping test for non-existant object _PRR.

Test 72 of 191: Test _S0_ (S0 System State).
\_S0_ PM1a_CNT.SLP_TYP value: 0x00000000
\_S0_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 72, \_S0_ correctly returned a sane looking package.

Test 73 of 191: Test _S1_ (S1 System State).
SKIPPED: Test 73, Skipping test for non-existant object _S1_.

Test 74 of 191: Test _S2_ (S2 System State).
SKIPPED: Test 74, Skipping test for non-existant object _S2_.

Test 75 of 191: Test _S3_ (S3 System State).
\_S3_ PM1a_CNT.SLP_TYP value: 0x00000005
\_S3_ PM1b_CNT.SLP_TYP value: 0x00000005
PASSED: Test 75, \_S3_ correctly returned a sane looking package.

Test 76 of 191: Test _S4_ (S4 System State).
\_S4_ PM1a_CNT.SLP_TYP value: 0x00000006
\_S4_ PM1b_CNT.SLP_TYP value: 0x00000006
PASSED: Test 76, \_S4_ correctly returned a sane looking package.

Test 77 of 191: Test _S5_ (S5 System State).
\_S5_ PM1a_CNT.SLP_TYP value: 0x00000007
\_S5_ PM1b_CNT.SLP_TYP value: 0x00000007
PASSED: Test 77, \_S5_ correctly returned a sane looking package.

Test 78 of 191: Test _SWS (System Wake Source).
SKIPPED: Test 78, Skipping test for non-existant object _SWS.

Test 79 of 191: Test _PSS (Performance Supported States).
\_PR_.CPU0._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      2601    35000    10        10
   1      2600    35000    10        10
   2      2500    33218    10        10
   3      2400    31470    10        10
   4      2300    29755    10        10
   5      2200    28074    10        10
   6      2100    26426    10        10
   7      2000    24816    10        10
   8      1900    23556    10        10
   9      1800    22002    10        10
  10      1700    20480    10        10
  11      1600    18989    10        10
  12      1500    17534    10        10
  13      1400    16106    10        10
  14      1300    15009    10        10
  15      1200    13638    10        10
PASSED: Test 79, \_PR_.CPU0._PSS correctly returned a sane looking package.

Test 80 of 191: Test _CPC (Continuous Performance Control).
SKIPPED: Test 80, Skipping test for non-existant object _CPC.

Test 81 of 191: Test _CSD (C State Dependencies).
SKIPPED: Test 81, Skipping test for non-existant object _CSD.

Test 82 of 191: Test _CST (C States).
SKIPPED: Test 82, Skipping test for non-existant object _CST.

Test 83 of 191: Test _PCT (Performance Control).
PASSED: Test 83, \_PR_.CPU0._PCT correctly returned a sane looking package.

Test 84 of 191: Test _PDL (P-State Depth Limit).
SKIPPED: Test 84, Skipping test for non-existant object _PDL.

Test 85 of 191: Test _PPC (Performance Present Capabilities).
PASSED: Test 85, \_PR_.CPU0._PPC correctly returned an integer.

Test 86 of 191: Test _PPE (Polling for Platform Error).
SKIPPED: Test 86, Skipping test for non-existant object _PPE.

Test 87 of 191: Test _PSD (Power State Dependencies).
PASSED: Test 87, \_PR_.CPU0._PSD correctly returned a sane looking package.

Test 88 of 191: Test _PTC (Processor Throttling Control).
SKIPPED: Test 88, Skipping test for non-existant object _PTC.

Test 89 of 191: Test _TDL (T-State Depth Limit).
SKIPPED: Test 89, Skipping test for non-existant object _TDL.

Test 90 of 191: Test _TPC (Throttling Present Capabilities).
SKIPPED: Test 90, Skipping test for non-existant object _TPC.

Test 91 of 191: Test _TSD (Throttling State Dependencies).
SKIPPED: Test 91, Skipping test for non-existant object _TSD.

Test 92 of 191: Test _TSS (Throttling Supported States).
SKIPPED: Test 92, Skipping test for non-existant object _TSS.

Test 93 of 191: Test _PUR (Processor Utilization Request).
SKIPPED: Test 93, Skipping test for non-existant object _PUR.

Test 94 of 191: Test _MSG (Message).
SKIPPED: Test 94, Skipping test for non-existant object _MSG.

Test 95 of 191: Test _SST (System Status).
PASSED: Test 95, \_SI_._SST returned no values as expected.
PASSED: Test 95, \_SI_._SST returned no values as expected.
PASSED: Test 95, \_SI_._SST returned no values as expected.
PASSED: Test 95, \_SI_._SST returned no values as expected.
PASSED: Test 95, \_SI_._SST returned no values as expected.

Test 96 of 191: Test _ALC (Ambient Light Colour Chromaticity).
SKIPPED: Test 96, Skipping test for non-existant object _ALC.

Test 97 of 191: Test _ALI (Ambient Light Illuminance).
SKIPPED: Test 97, Skipping test for non-existant object _ALI.

Test 98 of 191: Test _ALT (Ambient Light Temperature).
SKIPPED: Test 98, Skipping test for non-existant object _ALT.

Test 99 of 191: Test _ALP (Ambient Light Polling).
SKIPPED: Test 99, Skipping test for non-existant object _ALP.

Test 100 of 191: Test _ALR (Ambient Light Response).
SKIPPED: Test 100, Skipping test for non-existant object _ALR.

Test 101 of 191: Test _LID (Lid Status).
PASSED: Test 101, \_SB_.LID_._LID correctly returned sane looking value
0x00000000.

Test 102 of 191: Test _GTF (Get Task File).
PASSED: Test 102, \_SB_.PCI0.SAT1.PRT0._GTF correctly returned a sane looking
buffer.
PASSED: Test 102, \_SB_.PCI0.SAT1.PRT1._GTF correctly returned a sane looking
buffer.
PASSED: Test 102, \_SB_.PCI0.SAT1.PRT2._GTF correctly returned a sane looking
buffer.
PASSED: Test 102, \_SB_.PCI0.SAT1.PRT3._GTF correctly returned a sane looking
buffer.
PASSED: Test 102, \_SB_.PCI0.SAT1.PRT4._GTF correctly returned a sane looking
buffer.

Test 103 of 191: Test _GTM (Get Timing Mode).
SKIPPED: Test 103, Skipping test for non-existant object _GTM.

Test 104 of 191: Test _MBM (Memory Bandwidth Monitoring Data).
SKIPPED: Test 104, Skipping test for non-existant object _MBM.

Test 105 of 191: Test _UPC (USB Port Capabilities).
PASSED: Test 105, \_SB_.PCI0.XHCI.URTH.HSP0._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.URTH.HSP1._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.URTH.HSP2._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.URTH.HSP3._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.URTH.SSP0._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.URTH.SSP1._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.URTH.SSP2._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.URTH.SSP3._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.URTH.URMH._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.URTH.URMH.PRT0._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.URTH.URMH.PRT1._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.URTH.URMH.PRT2._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.URTH.URMH.PRT3._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.URTH.URMH.PRT4._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.URTH.URMH.PRT5._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.URTH.URMH.PRT6._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.URTH.URMH.PRT7._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.URTH.URMH._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.URTH.URMH.PRT8._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.URTH.URMH.PRT9._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.URTH.URMH.PRTA._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.URTH.URMH.PRTB._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.URTH.URMH.PRTC._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.URTH.URMH.PRTD._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.URTH.URMH.PRTD.WCAM._UPC correctly returned a
sane looking package.

Test 106 of 191: Test _UPD (User Presence Detect).
SKIPPED: Test 106, Skipping test for non-existant object _UPD.

Test 107 of 191: Test _UPP (User Presence Polling).
SKIPPED: Test 107, Skipping test for non-existant object _UPP.

Test 108 of 191: Test _GCP (Get Capabilities).
SKIPPED: Test 108, Skipping test for non-existant object _GCP.

Test 109 of 191: Test _GRT (Get Real Time).
SKIPPED: Test 109, Skipping test for non-existant object _GRT.

Test 110 of 191: Test _GWS (Get Wake Status).
SKIPPED: Test 110, Skipping test for non-existant object _GWS.

Test 111 of 191: Test _CWS (Clear Wake Status).
SKIPPED: Test 111, Skipping test for non-existant object _CWS.

Test 112 of 191: Test _STP (Set Expired Timer Wake Policy).
SKIPPED: Test 112, Skipping test for non-existant object _STP.

Test 113 of 191: Test _STV (Set Timer Value).
SKIPPED: Test 113, Skipping test for non-existant object _STV.

Test 114 of 191: Test _TIP (Expired Timer Wake Policy).
SKIPPED: Test 114, Skipping test for non-existant object _TIP.

Test 115 of 191: Test _TIV (Timer Values).
SKIPPED: Test 115, Skipping test for non-existant object _TIV.

Test 116 of 191: Test _SBS (Smart Battery Subsystem).
SKIPPED: Test 116, Skipping test for non-existant object _SBS.

Test 117 of 191: Test _BCT (Battery Charge Time).
SKIPPED: Test 117, Skipping test for non-existant object _BCT.

Test 118 of 191: Test _BIF (Battery Information).
PASSED: Test 118, \_SB_.PCI0.LPC_.EC__.BAT0._BIF correctly returned a sane
looking package.
PASSED: Test 118, \_SB_.PCI0.LPC_.EC__.BAT1._BIF correctly returned a sane
looking package.

Test 119 of 191: Test _BIX (Battery Information Extended).
SKIPPED: Test 119, Skipping test for non-existant object _BIX.

Test 120 of 191: Test _BMA (Battery Measurement Averaging).
SKIPPED: Test 120, Skipping test for non-existant object _BMA.

Test 121 of 191: Test _BMC (Battery Maintenance Control).
SKIPPED: Test 121, Skipping test for non-existant object _BMC.

Test 122 of 191: Test _BMD (Battery Maintenance Data).
SKIPPED: Test 122, Skipping test for non-existant object _BMD.

Test 123 of 191: Test _BMS (Battery Measurement Sampling Time).
SKIPPED: Test 123, Skipping test for non-existant object _BMS.

Test 124 of 191: Test _BST (Battery Status).
PASSED: Test 124, \_SB_.PCI0.LPC_.EC__.BAT0._BST correctly returned a sane
looking package.
PASSED: Test 124, \_SB_.PCI0.LPC_.EC__.BAT1._BST correctly returned a sane
looking package.

Test 125 of 191: Test _BTP (Battery Trip Point).
PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT0._BTP returned no values as expected.
PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT1._BTP returned no values as expected.

PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT0._BTP returned no values as expected.
PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT1._BTP returned no values as expected.

PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT0._BTP returned no values as expected.
PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT1._BTP returned no values as expected.

PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT0._BTP returned no values as expected.
PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT1._BTP returned no values as expected.

PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT0._BTP returned no values as expected.
PASSED: Test 125, \_SB_.PCI0.LPC_.EC__.BAT1._BTP returned no values as expected.


Test 126 of 191: Test _BTH (Battery Throttle Limit).
SKIPPED: Test 126, Skipping test for non-existant object _BTH.

Test 127 of 191: Test _BTM (Battery Time).
SKIPPED: Test 127, Skipping test for non-existant object _BTM.

Test 128 of 191: Test _PCL (Power Consumer List).
PASSED: Test 128, \_SB_.PCI0.LPC_.EC__.BAT0._PCL returned a sane package of 1
references.
PASSED: Test 128, \_SB_.PCI0.LPC_.EC__.BAT1._PCL returned a sane package of 1
references.
PASSED: Test 128, \_SB_.PCI0.LPC_.EC__.AC__._PCL returned a sane package of 1
references.

Test 129 of 191: Test _PIF (Power Source Information).
SKIPPED: Test 129, Skipping test for non-existant object _PIF.

Test 130 of 191: Test _PRL (Power Source Redundancy List).
SKIPPED: Test 130, Skipping test for non-existant object _PRL.

Test 131 of 191: Test _PSR (Power Source).
PASSED: Test 131, \_SB_.PCI0.LPC_.EC__.AC__._PSR correctly returned sane looking
value 0x00000000.

Test 132 of 191: Test _GAI (Get Averaging Level).
SKIPPED: Test 132, Skipping test for non-existant object _GAI.

Test 133 of 191: Test _GHL (Get Harware Limit).
SKIPPED: Test 133, Skipping test for non-existant object _GHL.

Test 134 of 191: Test _PMD (Power Meter Devices).
SKIPPED: Test 134, Skipping test for non-existant object _PMD.

Test 135 of 191: Test _PMM (Power Meter Measurement).
SKIPPED: Test 135, Skipping test for non-existant object _PMM.

Test 136 of 191: Test _FIF (Fan Information).
SKIPPED: Test 136, Skipping test for non-existant object _FIF.

Test 137 of 191: Test _FPS (Fan Performance States).
SKIPPED: Test 137, Skipping test for non-existant object _FPS.

Test 138 of 191: Test _FSL (Fan Set Level).
SKIPPED: Test 138, Skipping test for non-existant object _FSL.

Test 139 of 191: Test _FST (Fan Status).
SKIPPED: Test 139, Skipping test for non-existant object _FST.

Test 140 of 191: Test _ACx (Active Cooling).
SKIPPED: Test 140, Skipping test for non-existant object _AC0.

SKIPPED: Test 140, Skipping test for non-existant object _AC1.

SKIPPED: Test 140, Skipping test for non-existant object _AC2.

SKIPPED: Test 140, Skipping test for non-existant object _AC3.

SKIPPED: Test 140, Skipping test for non-existant object _AC4.

SKIPPED: Test 140, Skipping test for non-existant object _AC5.

SKIPPED: Test 140, Skipping test for non-existant object _AC6.

SKIPPED: Test 140, Skipping test for non-existant object _AC7.

SKIPPED: Test 140, Skipping test for non-existant object _AC8.

SKIPPED: Test 140, Skipping test for non-existant object _AC9.


Test 141 of 191: Test _ART (Active Cooling Relationship Table).
SKIPPED: Test 141, Skipping test for non-existant object _ART.

Test 142 of 191: Test _CRT (Critical Trip Point).
PASSED: Test 142, \_TZ_.THM0._CRT correctly returned a sane looking return type.

Test 143 of 191: Test _CR3 (Warm/Standby Temperature).
SKIPPED: Test 143, Skipping test for non-existant object _CR3.

Test 144 of 191: Test _DTI (Device Temperature Indication).
SKIPPED: Test 144, Skipping test for non-existant object _DTI.

Test 145 of 191: Test _HOT (Hot Temperature).
SKIPPED: Test 145, Skipping test for non-existant object _HOT.

Test 146 of 191: Test _MTL (Minimum Throttle Limit).
SKIPPED: Test 146, Skipping test for non-existant object _MTL.

Test 147 of 191: Test _NTT (Notification Temp Threshold).
SKIPPED: Test 147, Skipping test for non-existant object _NTT.

Test 148 of 191: Test _PSL (Passive List).
SKIPPED: Test 148, Skipping test for non-existant object _PSL.

Test 149 of 191: Test _PSV (Passive Temp).
SKIPPED: Test 149, Skipping test for non-existant object _PSV.

Test 150 of 191: Test _RTV (Relative Temp Values).
SKIPPED: Test 150, Skipping test for non-existant object _RTV.

Test 151 of 191: Test _SCP (Set Cooling Policy).
SKIPPED: Test 151, Skipping test for non-existant object _DTI.

Test 152 of 191: Test _TC1 (Thermal Constant 1).
SKIPPED: Test 152, Skipping test for non-existant object _TC1.

Test 153 of 191: Test _TC2 (Thermal Constant 2).
SKIPPED: Test 153, Skipping test for non-existant object _TC2.

Test 154 of 191: Test _TFP (Thermal fast Sampling Period).
SKIPPED: Test 154, Skipping test for non-existant object _TFP.

Test 155 of 191: Test _TMP (Thermal Zone Current Temp).
PASSED: Test 155, \_TZ_.THM0._TMP correctly returned a sane looking return type.

Test 156 of 191: Test _TPT (Trip Point Temperature).
SKIPPED: Test 156, Skipping test for non-existant object _TPT.

Test 157 of 191: Test _TRT (Thermal Relationship Table).
SKIPPED: Test 157, Skipping test for non-existant object _TRT.

Test 158 of 191: Test _TSN (Thermal Sensor Device).
SKIPPED: Test 158, Skipping test for non-existant object _TSN.

Test 159 of 191: Test _TSP (Thermal Sampling Period).
SKIPPED: Test 159, Skipping test for non-existant object _TSP.

Test 160 of 191: Test _TST (Temperature Sensor Threshold).
SKIPPED: Test 160, Skipping test for non-existant object _TST.

Test 161 of 191: Test _TZD (Thermal Zone Devices).
SKIPPED: Test 161, Skipping test for non-existant object _TZD.

Test 162 of 191: Test _TZM (Thermal Zone member).
SKIPPED: Test 162, Skipping test for non-existant object _TZM.

Test 163 of 191: Test _TZP (Thermal Zone Polling).
SKIPPED: Test 163, Skipping test for non-existant object _TZP.

Test 164 of 191: Test _GPE (General Purpose Events).
PASSED: Test 164, \_SB_.PCI0.LPC_.EC__._GPE returned an integer 0x00000011

Test 165 of 191: Test _EC (EC Offset Query).
SKIPPED: Test 165, Skipping test for non-existant object _EC.

Test 166 of 191: Test _PTS (Prepare to Sleep).
Test _PTS(1).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(2).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(3).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(4).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(5).
PASSED: Test 166, \_PTS returned no values as expected.


Test 167 of 191: Test _TTS (Transition to State).
SKIPPED: Test 167, Optional control method _TTS does not exist.

Test 168 of 191: Test _S0 (System S0 State).
SKIPPED: Test 168, Skipping test for non-existant object _S0.

Test 169 of 191: Test _S1 (System S1 State).
SKIPPED: Test 169, Skipping test for non-existant object _S1.

Test 170 of 191: Test _S2 (System S2 State).
SKIPPED: Test 170, Skipping test for non-existant object _S2.

Test 171 of 191: Test _S3 (System S3 State).
SKIPPED: Test 171, Skipping test for non-existant object _S3.

Test 172 of 191: Test _S4 (System S4 State).
SKIPPED: Test 172, Skipping test for non-existant object _S4.

Test 173 of 191: Test _S5 (System S5 State).
SKIPPED: Test 173, Skipping test for non-existant object _S5.

Test 174 of 191: Test _WAK (System Wake).
Test _WAK(1) System Wake, State S1.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(2) System Wake, State S2.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(3) System Wake, State S3.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(4) System Wake, State S4.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(5) System Wake, State S5.
PASSED: Test 174, \_WAK correctly returned a sane looking package.


Test 175 of 191: Test _ADR (Return Unique ID for Device).
PASSED: Test 175, \_SB_.PCI0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.VID_._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.VID_.LCD0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.VID_.CRT0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.VID_.DVI0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.VID_.DVI1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.VID_.DVI2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.VID_.DVI3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.VID_.DVI4._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.VID_.DVI5._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.LPC_._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_.VID_._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_.VID_.LCD0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_.VID_.CRT0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_.VID_.DVI0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_.VID_.DP0_._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_.VID_.DVI1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_.VID_.DP1_._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_.VID_.DVI2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG_.VID_.DP2_._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGBE._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EXP1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EXP1.SLOT._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EXP2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EXP3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EXP3.SLOT._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.PRT0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.PRT1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.PRT2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.PRT3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.PRT4._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SMBU._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.URTH._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.URTH.HSP0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.URTH.HSP1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.URTH.HSP2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.URTH.HSP3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.URTH.SSP0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.URTH.SSP1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.URTH.SSP2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.URTH.SSP3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH.URMH._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH.URMH.PRT0._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH.URMH.PRT1._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH.URMH.PRT2._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH.URMH.PRT3._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH.URMH.PRT4._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH.URMH.PRT5._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH.URMH.PRT6._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.URTH.URMH.PRT7._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.URTH._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.URTH.URMH._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.URTH.URMH.PRT8._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.URTH.URMH.PRT9._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.URTH.URMH.PRTA._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.URTH.URMH.PRTB._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.URTH.URMH.PRTC._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.URTH.URMH.PRTD._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.URTH.URMH.PRTD.WCAM._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.HDEF._ADR correctly returned an integer.

Test 176 of 191: Test _BCL (Query List of Brightness Control Levels Supported).
Brightness levels for \_SB_.PCI0.VID_.LCD0._BCL:
  Level on full power   : 100
  Level on battery power: 100
  Brightness Levels     : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100
PASSED: Test 176, \_SB_.PCI0.VID_.LCD0._BCL returned a sane package of 103
integers.
Brightness levels for \_SB_.PCI0.PEG_.VID_.LCD0._BCL:
  Level on full power   : 100
  Level on battery power: 100
  Brightness Levels     : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100
PASSED: Test 176, \_SB_.PCI0.PEG_.VID_.LCD0._BCL returned a sane package of 103
integers.

Test 177 of 191: Test _BCM (Set Brightness Level).
PASSED: Test 177, \_SB_.PCI0.VID_.LCD0._BCM returned no values as expected.
PASSED: Test 177, \_SB_.PCI0.PEG_.VID_.LCD0._BCM returned no values as expected.

Test 178 of 191: Test _BQC (Brightness Query Current Level).
PASSED: Test 178, \_SB_.PCI0.VID_.LCD0._BQC correctly returned an integer.
PASSED: Test 178, \_SB_.PCI0.PEG_.VID_.LCD0._BQC correctly returned an integer.

Test 179 of 191: Test _DCS (Return the Status of Output Device).
PASSED: Test 179, \_SB_.PCI0.VID_.LCD0._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.VID_.CRT0._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.VID_.DVI0._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.VID_.DVI1._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.VID_.DVI2._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.VID_.DVI3._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.VID_.DVI4._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.VID_.DVI5._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.PEG_.VID_.LCD0._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.PEG_.VID_.CRT0._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.PEG_.VID_.DVI0._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.PEG_.VID_.DP0_._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.PEG_.VID_.DVI1._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.PEG_.VID_.DP1_._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.PEG_.VID_.DVI2._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.PEG_.VID_.DP2_._DCS correctly returned an integer.

Test 180 of 191: Test _DDC (Return the EDID for this Device).
PASSED: Test 180, \_SB_.PCI0.VID_.LCD0._DDC could not return a buffer of 0 items
and instead returned an error status.
PASSED: Test 180, \_SB_.PCI0.PEG_.VID_.LCD0._DDC could not return a buffer of 0
items and instead returned an error status.
PASSED: Test 180, \_SB_.PCI0.VID_.LCD0._DDC could not return a buffer of 0 items
and instead returned an error status.
PASSED: Test 180, \_SB_.PCI0.PEG_.VID_.LCD0._DDC could not return a buffer of 0
items and instead returned an error status.

Test 181 of 191: Test _DSS (Device Set State).
PASSED: Test 181, \_SB_.PCI0.VID_.LCD0._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.VID_.CRT0._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.VID_.DVI0._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.VID_.DVI1._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.VID_.DVI2._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.VID_.DVI3._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.VID_.DVI4._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.VID_.DVI5._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.PEG_.VID_.LCD0._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.PEG_.VID_.CRT0._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.PEG_.VID_.DVI0._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.PEG_.VID_.DP0_._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.PEG_.VID_.DVI1._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.PEG_.VID_.DP1_._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.PEG_.VID_.DVI2._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.PEG_.VID_.DP2_._DSS returned no values as expected.

Test 182 of 191: Test _DGS (Query Graphics State).
PASSED: Test 182, \_SB_.PCI0.VID_.LCD0._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.VID_.CRT0._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.VID_.DVI0._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.VID_.DVI1._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.VID_.DVI2._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.VID_.DVI3._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.VID_.DVI4._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.VID_.DVI5._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.PEG_.VID_.LCD0._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.PEG_.VID_.CRT0._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.PEG_.VID_.DVI0._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.PEG_.VID_.DP0_._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.PEG_.VID_.DVI1._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.PEG_.VID_.DP1_._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.PEG_.VID_.DVI2._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.PEG_.VID_.DP2_._DGS correctly returned an integer.

Test 183 of 191: Test _DOD (Enumerate All Devices Attached to Display Adapter).
Device 0:
  Instance:                0
  Display port attachment: 0
  Type of display:         4 (Internal/Integrated Digital Flat Panel)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
PASSED: Test 183, \_SB_.PCI0.VID_._DOD correctly returned a sane looking
package.
Device 0:
  Instance:                0
  Display port attachment: 0
  Type of display:         1 (VGA, CRT or VESA Compatible Analog Monitor)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
Device 1:
  Instance:                4
  Display port attachment: 1
  Type of display:         1 (VGA, CRT or VESA Compatible Analog Monitor)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
Device 2:
  Instance:                1
  Display port attachment: 1
  Type of display:         1 (VGA, CRT or VESA Compatible Analog Monitor)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
Device 3:
  Instance:                5
  Display port attachment: 1
  Type of display:         1 (VGA, CRT or VESA Compatible Analog Monitor)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
Device 4:
  Instance:                2
  Display port attachment: 1
  Type of display:         1 (VGA, CRT or VESA Compatible Analog Monitor)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
Device 5:
  Instance:                6
  Display port attachment: 1
  Type of display:         1 (VGA, CRT or VESA Compatible Analog Monitor)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
Device 6:
  Instance:                3
  Display port attachment: 1
  Type of display:         1 (VGA, CRT or VESA Compatible Analog Monitor)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
Device 7:
  Instance:                0
  Display port attachment: 1
  Type of display:         1 (VGA, CRT or VESA Compatible Analog Monitor)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
PASSED: Test 183, \_SB_.PCI0.PEG_.VID_._DOD correctly returned a sane looking
package.

Test 184 of 191: Test _DOS (Enable/Disable Output Switching).
PASSED: Test 184, \_SB_.PCI0.VID_._DOS returned no values as expected.
PASSED: Test 184, \_SB_.PCI0.PEG_.VID_._DOS returned no values as expected.

Test 185 of 191: Test _GPD (Get POST Device).
SKIPPED: Test 185, Skipping test for non-existant object _GPD.

Test 186 of 191: Test _ROM (Get ROM Data).
PASSED: Test 186, \_SB_.PCI0.PEG_.VID_._ROM correctly returned a sane looking
package.

Test 187 of 191: Test _SPD (Set POST Device).
SKIPPED: Test 187, Skipping test for non-existant object _SPD.

Test 188 of 191: Test _VPO (Video POST Options).
SKIPPED: Test 188, Skipping test for non-existant object _VPO.

Test 189 of 191: Test _CBA (Configuration Base Address).
SKIPPED: Test 189, Skipping test for non-existant object _CBA.

Test 190 of 191: Test _IFT (IPMI Interface Type).
SKIPPED: Test 190, Skipping test for non-existant object _IFT.

Test 191 of 191: Test _SRV (IPMI Interface Revision).
SKIPPED: Test 191, Skipping test for non-existant object _SRV.

================================================================================
403 passed, 2 failed, 0 warning, 0 aborted, 140 skipped, 0 info only.
================================================================================

msdm: MSDM Microsoft Data Management Table test.
--------------------------------------------------------------------------------
ACPI MSDM table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

mchi: MCHI Management Controller Host Interface Table test.
--------------------------------------------------------------------------------
ACPI MCHI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

mcfg: MCFG PCI Express* memory mapped config space test.
--------------------------------------------------------------------------------
Test 1 of 2: Validate MCFG table.
This test tries to validate the MCFG table by comparing the first 16 bytes in
the MMIO mapped config space with the 'traditional' config space of the first
PCI device (root bridge). The MCFG data is only trusted if it is marked reserved
in the Int 15 AX=E820 BIOS memory map

Memory Map Layout
-----------------
0x0000000000000000 - 0x000000000009d7ff (System RAM)
0x000000000009d800 - 0x000000000009ffff (reserved)
0x00000000000e0000 - 0x00000000000fffff (reserved)
0x0000000000100000 - 0x000000001fffffff (System RAM)
0x0000000020000000 - 0x00000000201fffff (reserved)
0x0000000020200000 - 0x0000000040003fff (System RAM)
0x0000000040004000 - 0x0000000040004fff (reserved)
0x0000000040005000 - 0x00000000cee0afff (System RAM)
0x00000000cee0b000 - 0x00000000dae9efff (reserved)
0x00000000dae9f000 - 0x00000000daf9efff (ACPI Non-volatile Storage)
0x00000000daf9f000 - 0x00000000daffefff (ACPI Non-volatile Storage)
0x00000000dafff000 - 0x00000000df9fffff (reserved)
0x00000000f8000000 - 0x00000000fbffffff (reserved)
0x00000000fec00000 - 0x00000000fec00fff (reserved)
0x00000000fed08000 - 0x00000000fed08fff (reserved)
0x00000000fed10000 - 0x00000000fed19fff (reserved)
0x00000000fed1c000 - 0x00000000fed1ffff (reserved)
0x00000000fee00000 - 0x00000000fee00fff (reserved)
0x00000000ffc00000 - 0x00000000ffffffff (reserved)
0x0000000100000000 - 0x000000011e5fffff (System RAM)

MCFG table found, size is 16 bytes (excluding header) (1 entries).
Configuration Entry #0:
  Base Address  : 0xf8000000
  Segment       : 0
  Start bus     : 0
  End bus       : 63
PASSED: Test 1, MCFG MMIO config space is reserved in memory map table.

Test 2 of 2: Validate MCFG PCI config space.
PASSED: Test 2, PCI config space verified.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

madt: MADT Multiple APIC Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: MADT Multiple APIC Description Table test.
PASSED: Test 1, No issues found in MADT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

lpit: LPIT Low Power Idle Table test.
--------------------------------------------------------------------------------
ACPI LPIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

iort: IORT IO Remapping Table test.
--------------------------------------------------------------------------------
ACPI IORT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

hpet: HPET IA-PC High Precision Event Timer Table tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test HPET base in kernel log.
This test checks the HPET PCI BAR for each timer block in the timer. The base
address is passed by the firmware via an ACPI table. IRQ routing and
initialization is also verified by the test.
PASSED: Test 1, Found HPET base 0xfed00000 in kernel log.

Test 2 of 4: Test HPET base in HPET table.
Hardware ID of Event Block:
  PCI Vendor ID              : 0x8086
  Legacy IRQ Routing Capable : 1
  COUNT_SIZE_CAP counter size: 1
  Number of comparitors      : 3
  Hardwre Revision ID        : 0x1
Lower 32 bit base Address    : 0xfed00000
  Address Space ID           : 0x0
  Register Bit Width         : 0x0
  Register Bit Offset        : 0x0
  Address Width              : 0x0
HPET sequence number         : 0x0
Minimum clock tick           : 0x80
Page Protection              : 0x0 (No guaranteed protection)
OEM attributes               : 0x0
PASSED: Test 2, HPET looks sane.

Test 3 of 4: Test HPET base in DSDT and/or SSDT.
PASSED: Test 3, HPET base matches that between DSDT and the kernel (0xfed00000).

Test 4 of 4: Test HPET configuration.
PASSED: Test 4, Vendor ID looks sane: 0x8086.
PASSED: Test 4, Valid clock period 69841279.

================================================================================
5 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

hest: HEST Hardware Error Source Table test.
--------------------------------------------------------------------------------
ACPI HEST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

gtdt: GTDT Generic Timer Description Table test.
--------------------------------------------------------------------------------
ACPI GTDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

fpdt: FPDT Firmware Performance Data Table test.
--------------------------------------------------------------------------------
Test 1 of 1: FPDT Firmware Performance Data Table test.
    Firmware Basic Boot Performance Pointer Record:
    Perf Rec Type:	0x0000
    Rec Length:	0x10
    Revision:	0x01
    Reserved:	0x00000000
    FBPT Pointer:	0x00000000da044418
Note: currently fwts does not check FBPT validity and the associated data
  S3 Performance Table Pointer Record:
    Perf Rec Type:	0x0001
    Rec Length:	0x10
    Revision:	0x01
    Reserved:	0x00000000
    S3PT Pointer:	0x00000000da044398
Note: currently fwts does not check S3PT validity and the associated data
  Reserved for BIOS Vendor use:
    Perf Rec Type:	0x3000
    Rec Length:	0x10
    Revision:	0x01
    Data:
  0048: 00 00 00 00 18 20 04 da 00 00 00 00              ..... ......
  Reserved for BIOS Vendor use:
    Perf Rec Type:	0x3001
    Rec Length:	0x10
    Revision:	0x01
    Data:
  0058: 00 00 00 00 18 d0 fd d9 00 00 00 00              ............
PASSED: Test 1, No issues found in FPDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

fan: Simple fan tests.
--------------------------------------------------------------------------------
Test 1 of 2: Test fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
PASSED: Test 1, Fan cooling_device0 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device1 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device2 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device3 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device4 of type LCD has max cooling state 15 and
current cooling state 0.
FAILED [MEDIUM] NoFanCurState: Test 1, Fan present but has no cur_state present.

Test 2 of 2: Load system, check CPU fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
Loading CPUs for 20 seconds to try and get fan speeds to change.
Fan cooling_device0 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device1 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device2 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device3 current state did not change from value 0 while CPUs were
busy.

ADVICE: Did not detect any change in the CPU related thermal cooling device
states. It could be that the devices are returning static information back to
the driver and/or the fan speed is automatically being controlled by firmware
using System Management Mode in which case the kernel interfaces being examined
may not work anyway.


================================================================================
5 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

fadt: FADT Fixed ACPI Description Table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Test FADT ACPI Description Table tests.
PASSED: Test 1, No issues found in FADT table.

Test 2 of 3: Test FADT SCI_EN bit is enabled.
FADT Preferred PM Profile: 2 (Mobile) 
FADT is greater than ACPI version 1.0
PASSED: Test 2, SCI_EN bit in PM1a Control Register Block is enabled.

Test 3 of 3: Test FADT reset register.
PASSED: Test 3, FADT reset register width is 8 bits wide as expected.
PASSED: Test 3, FADT register bit offset is 0 as expected.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

facs: FACS Firmware ACPI Control Structure test.
--------------------------------------------------------------------------------
Test 1 of 1: FACS Firmware ACPI Control Structure test.
FACS Firmware ACPI Control Structure:
  Signature:                'FACS'
  Length:                   0x00000040
  Hardware Signature:       0x00000000
  Firmware Waking Vector:   0x00000000
  Global Lock:              0x00000000
  Flags:                    0x00000000
  X-Firmware Waking Vector: 0x0000000000000000
  Version:                  0x01
  Reserved:                 0x00 0x00 0x00
  OSPM Flags:               0x00000000
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
PASSED: Test 1, No issues found in FACS table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

erst: ERST Error Record Serialization Table test.
--------------------------------------------------------------------------------
ACPI ERST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

ecdt: ECDT Embedded Controller Boot Resources Table test.
--------------------------------------------------------------------------------
Test 1 of 1: ECDT Embedded Controller Boot Resources Table test.
ECDT Embedded Controller Boot Resources Table:
  EC_CONTROL:
    Address Space ID:       0x01
    Register Bit Width      0x08
    Register Bit Offset     0x00
    Access Size             0x00
    Address                 0x0000000000000066
  EC_DATA:
    Address Space ID:       0x01
    Register Bit Width      0x08
    Register Bit Offset     0x00
    Access Size             0x00
    Address                 0x0000000000000062
  UID:                      0x00000000
  GPE_BIT:                  0x11
  EC_ID:                    '\_SB.PCI0.LPC.EC'

PASSED: Test 1, Found and evaluated \_SB.PCI0.LPC.EC._UID, returns expected
value 0x0
PASSED: Test 1, No issues found in ECDT table.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

dmar: DMA Remapping (VT-d) test.
--------------------------------------------------------------------------------
Test 1 of 1: DMA Remapping test.
SKIPPED: Test 1, No DMAR table. This is not necessarily a failure as most
systems do not have this table.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

dbg2: DBG2 (Debug Port Table 2) test.
--------------------------------------------------------------------------------
Test 1 of 1: DBG2 (Debug Port Table 2) test.
DBG2 Table:
  Info Offset:              0x0000002c
  Info Count:               0x00000003

DBG2 Info Structure 0:
  Revision:                 0x00
  Length:                   0x0044
  Number of Registers       0x01
  Namespace String Length:  0x001e
  Namespace String Offset:  0x0026
  OEM Data Length:          0x0000
  OEM Data Offset:          0x0000
  Port Type:                0x8002 (USB)
  Port Subtype:             0x0001 (EHCI controller)
  Reserved:                 0x0000
  Base Address Offset:      0x0016
  Address Size Offset:      0x0022

  Namespace String:         '\_SB.PCI0.EHC1.URTH.URMH.PRT1'
    Address Space ID:       0x00
    Register Bit Width      0x20
    Register Bit Offset     0x00
    Access Size             0x00
    Address                 0x00000000f25390a0

DBG2 Info Structure 1:
  Revision:                 0x00
  Length:                   0x0044
  Number of Registers       0x01
  Namespace String Length:  0x001e
  Namespace String Offset:  0x0026
  OEM Data Length:          0x0000
  OEM Data Offset:          0x0000
  Port Type:                0x8002 (USB)
  Port Subtype:             0x0001 (EHCI controller)
  Reserved:                 0x0000
  Base Address Offset:      0x0016
  Address Size Offset:      0x0022

  Namespace String:         '\_SB.PCI0.EHC2.URTH.URMH.PRT9'
    Address Space ID:       0x00
    Register Bit Width      0x20
    Register Bit Offset     0x00
    Access Size             0x00
    Address                 0x00000000f253a0a0

DBG2 Info Structure 2:
  Revision:                 0x00
  Length:                   0x0035
  Number of Registers       0x01
  Namespace String Length:  0x000f
  Namespace String Offset:  0x0026
  OEM Data Length:          0x0000
  OEM Data Offset:          0x0000
  Port Type:                0x8003 (Net)
  Port Subtype:             0x8086 (PCI)
  Reserved:                 0x0000
  Base Address Offset:      0x0016
  Address Size Offset:      0x0022

  Namespace String:         '\_SB.PCI0.IGBE'
    Address Space ID:       0x00
    Register Bit Width      0x20
    Register Bit Offset     0x00
    Access Size             0x00
    Address                 0x00000000f2500000

PASSED: Test 1, No issues found in DBG2 table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

dbgp: DBGP (Debug Port) Table test.
--------------------------------------------------------------------------------
ACPI DBGP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cstates: Processor C state support test.
--------------------------------------------------------------------------------
Test 1 of 1: Test all CPUs C-states.
This test checks if all processors have the same number of C-states, if the
C-state counter works and if C-state transitions happen.
Processor 0 has not reached C1 C3 C6 during tests. This is not a failure,
however it is not a complete and thorough test.
PASSED: Test 1, Processor 1 has reached all C-states: C1 C3 C6 C7 
PASSED: Test 1, Processor 1 has the same number of C-states as processor 0
Processor 2 has not reached C1 C3 C6 during tests. This is not a failure,
however it is not a complete and thorough test.
PASSED: Test 1, Processor 2 has the same number of C-states as processor 0
Processor 3 has not reached C1 C3 C6 during tests. This is not a failure,
however it is not a complete and thorough test.
PASSED: Test 1, Processor 3 has the same number of C-states as processor 0

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

csrt: CSRT Core System Resource Table test.
--------------------------------------------------------------------------------
ACPI CSRT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cpep: CPEP Corrected Platform Error Polling Table test.
--------------------------------------------------------------------------------
ACPI CPEP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

checksum: ACPI table checksum test.
--------------------------------------------------------------------------------
Test 1 of 1: ACPI table checksum test.
PASSED: Test 1, Table RSDP has correct checksum 0x7f.
PASSED: Test 1, Table RSDP has correct extended checksum 0xb2.
PASSED: Test 1, Table XSDT has correct checksum 0x4c
PASSED: Test 1, Table DSDT has correct checksum 0x0b
PASSED: Test 1, Table FACP has correct checksum 0x8f
PASSED: Test 1, Table SLIC has correct checksum 0x73
PASSED: Test 1, Table TCPA has correct checksum 0xf6
PASSED: Test 1, Table SSDT has correct checksum 0xc6
PASSED: Test 1, Table SSDT has correct checksum 0x61
PASSED: Test 1, Table SSDT has correct checksum 0x77
PASSED: Test 1, Table HPET has correct checksum 0x60
PASSED: Test 1, Table APIC has correct checksum 0x98
PASSED: Test 1, Table MCFG has correct checksum 0x31
PASSED: Test 1, Table ECDT has correct checksum 0x17
PASSED: Test 1, Table FPDT has correct checksum 0xc2
PASSED: Test 1, Table ASF! has correct checksum 0xb0
PASSED: Test 1, Table UEFI has correct checksum 0x7c
PASSED: Test 1, Table UEFI has correct checksum 0xa2
PASSED: Test 1, Table POAT has correct checksum 0x36
PASSED: Test 1, Table SSDT has correct checksum 0x11
PASSED: Test 1, Table SSDT has correct checksum 0x41
PASSED: Test 1, Table SSDT has correct checksum 0xc8
PASSED: Test 1, Table UEFI has correct checksum 0x06
PASSED: Test 1, Table DBG2 has correct checksum 0x8d
PASSED: Test 1, Table RSDT has correct checksum 0xb2
PASSED: Test 1, Table FACP has correct checksum 0x79

================================================================================
26 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

autobrightness: Automated LCD brightness test.
--------------------------------------------------------------------------------
Test 1 of 2: Test for maximum and actual brightness.
PASSED: Test 1, Maximum brightness for intel_backlight is 4437 which is sane.
PASSED: Test 1, Actual brightness for intel_backlight is 4437 which is in range
0..4437.
PASSED: Test 1, Maximum brightness for acpi_video0 is 15 which is sane.
PASSED: Test 1, Actual brightness for acpi_video0 is 15 which is in range 0..15.

Test 2 of 2: Change actual brightness.
FAILED [MEDIUM] BrightnessMismatch: Test 2, 52 brightness levels did not match
the brightnesss level just set for backlight intel_backlight.
The failed brightness levels were: 43 128 213 299 384 469 555 640 725 811 896
981 1067 1152 1237 1323 1408 1493 1579 1664 1749 1835 1920 2005 2091 2176 2261
2346 2432 2517 2602 2688 2773 2858 2944 3029 3114 3200 3285 3370 3456 3541 3626
3712 3797 3882 3968 4053 4138 4224 4309 4394.
PASSED: Test 2, Actual brightness matches the brightnesss level for all 15
levels for backlight acpi_video0.

================================================================================
5 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

boot: BOOT Table test.
--------------------------------------------------------------------------------
ACPI BOOT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

bgrt: BGRT Boot Graphics Resource Table test.
--------------------------------------------------------------------------------
ACPI BGRT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

bert: BERT Boot Error Record Table test.
--------------------------------------------------------------------------------
ACPI BERT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

aspt: ASPT Table test.
--------------------------------------------------------------------------------
ACPI ASPT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

asf: ASF! Alert Standard Format Table test.
--------------------------------------------------------------------------------
Test 1 of 1: ASF! Alert Standard Format Table test.
ASF! Hardware Error Source Table
PASSED: Test 1, No issues found in ASF! ASF_INFO record.
PASSED: Test 1, No issues found in ASF! ASF_ALRT record.
PASSED: Test 1, No issues found in ASF! ASF_RCTL record.
PASSED: Test 1, No issues found in ASF! ASF_RMCP record.
PASSED: Test 1, No issues found in ASF! ASF_ADDR record.
PASSED: Test 1, No issues found in ASF! table.

================================================================================
6 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

apicinstance: Test for single instance of APIC/MADT table.
--------------------------------------------------------------------------------
Test 1 of 1: Test for single instance of APIC/MADT table.
Found APIC/MADT table APIC @ dafe4000, length 0x152 
PASSED: Test 1, Found 1 APIC/MADT table(s), as expected.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

acpitables: ACPI table headers sanity tests.
--------------------------------------------------------------------------------
Test 1 of 1: Test ACPI headers.
PASSED: Test 1, Table XSDT has valid signature and ID strings.
PASSED: Test 1, Table DSDT has valid signature and ID strings.
PASSED: Test 1, Table FACP has valid signature and ID strings.
PASSED: Test 1, Table SLIC has valid signature and ID strings.
PASSED: Test 1, Table TCPA has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table HPET has valid signature and ID strings.
PASSED: Test 1, Table APIC has valid signature and ID strings.
PASSED: Test 1, Table MCFG has valid signature and ID strings.
PASSED: Test 1, Table ECDT has valid signature and ID strings.
PASSED: Test 1, Table FPDT has valid signature and ID strings.
PASSED: Test 1, Table ASF! has valid signature and ID strings.
PASSED: Test 1, Table UEFI has valid signature and ID strings.
PASSED: Test 1, Table UEFI has valid signature and ID strings.
PASSED: Test 1, Table POAT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table UEFI has valid signature and ID strings.
PASSED: Test 1, Table DBG2 has valid signature and ID strings.
PASSED: Test 1, Table RSDT has valid signature and ID strings.
PASSED: Test 1, Table FACP has valid signature and ID strings.

================================================================================
24 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================


706 passed, 147 failed, 9 warnings, 61 aborted, 169 skipped, 10 info only.

Test Failure Summary
================================================================================

Critical failures: NONE

High failures: 42
 klog: HIGH Kernel message: [    0.147666] pnp 00:01: [Firmware Bug]: PNP resource [mem 0xfed10000-0xfed13fff] covers only part of 0000:00:00.0 Intel MCH; extending to [mem 0xfed10000-0xfed17fff]
 klog: HIGH Kernel message: [   23.039012] ACPI Warning: SystemIO range 0x0000000000000428-0x000000000000042F conflicts with OpRegion 0x0000000000000400-0x000000000000047F (\_SB_.PCI0.LPC_.PMIO) (20150619/utaddress-254)
 klog: HIGH Kernel message: [   23.039025] ACPI Warning: SystemIO range 0x0000000000000540-0x000000000000054F conflicts with OpRegion 0x0000000000000500-0x000000000000057F (\_SB_.PCI0.LPC_.LPIO) (20150619/utaddress-254)
 klog: HIGH Kernel message: [   23.039031] ACPI Warning: SystemIO range 0x0000000000000530-0x000000000000053F conflicts with OpRegion 0x0000000000000500-0x000000000000057F (\_SB_.PCI0.LPC_.LPIO) (20150619/utaddress-254)
 klog: HIGH Kernel message: [   23.039035] ACPI Warning: SystemIO range 0x0000000000000500-0x000000000000052F conflicts with OpRegion 0x0000000000000500-0x000000000000057F (\_SB_.PCI0.LPC_.LPIO) (20150619/utaddress-254)
 syntaxcheck: Assembler error in line 7212
 syntaxcheck: Assembler error in line 167
 syntaxcheck: Assembler error in line 376
 syntaxcheck: Assembler error in line 396
 syntaxcheck: Assembler error in line 397
 syntaxcheck: Assembler error in line 416
 syntaxcheck: Assembler error in line 417
 syntaxcheck: Assembler error in line 436
 syntaxcheck: Assembler error in line 437
 syntaxcheck: Assembler error in line 456
 syntaxcheck: Assembler error in line 457
 syntaxcheck: Assembler error in line 476
 syntaxcheck: Assembler error in line 477
 syntaxcheck: Assembler error in line 496
 syntaxcheck: Assembler error in line 497
 syntaxcheck: Assembler error in line 516
 syntaxcheck: Assembler error in line 517
 syntaxcheck: Assembler error in line 536
 syntaxcheck: Assembler error in line 697
 syntaxcheck: Assembler error in line 708
 syntaxcheck: Assembler error in line 709
 syntaxcheck: Assembler error in line 728
 syntaxcheck: Assembler error in line 729
 syntaxcheck: Assembler error in line 748
 syntaxcheck: Assembler error in line 749
 syntaxcheck: Assembler error in line 768
 syntaxcheck: Assembler error in line 769
 syntaxcheck: Assembler error in line 788
 syntaxcheck: Assembler error in line 789
 syntaxcheck: Assembler error in line 808
 syntaxcheck: Assembler error in line 809
 syntaxcheck: Assembler error in line 828
 syntaxcheck: Assembler error in line 829
 syntaxcheck: Assembler error in line 848
 syntaxcheck: Assembler error in line 849
 syntaxcheck: Assembler error in line 899
 syntaxcheck: Compilation aborted early due to a parser detected syntax error.

Medium failures: 30
 dmicheck: String index 0x05 in table entry 'Base Board Information (Type 2)' @ 0xdae9d2f7, field 'Asset Tag', offset 0x08 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x02 in table entry 'Chassis Information (Type 3)' @ 0xdae9d345, field 'Version', offset 0x06 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 cpufreq: CPU max frequency is unreachable
 cpufreq: Can't set CPU frequencies
 virt: Virtualization extensions supported but disabled by BIOS.
 apicedge: Non-Legacy interrupt 0 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 1 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 8 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 12 is incorrectly level triggered.
 syntaxcheck: Assembler warning in line 546
 syntaxcheck: Assembler warning in line 5158
 syntaxcheck: Assembler warning in line 5784
 syntaxcheck: Assembler warning in line 5888
 syntaxcheck: Assembler warning in line 6038
 syntaxcheck: Assembler warning in line 8186
 syntaxcheck: Assembler warning in line 9042
 syntaxcheck: Assembler warning in line 9707
 syntaxcheck: Assembler warning in line 11701
 syntaxcheck: Assembler warning in line 107
 syntaxcheck: Assembler warning in line 200
 syntaxcheck: Assembler warning in line 267
 syntaxcheck: Assembler warning in line 314
 syntaxcheck: Assembler warning in line 361
 syntaxcheck: Assembler warning in line 408
 syntaxcheck: Assembler warning in line 455
 syntaxcheck: Assembler warning in line 502
 method: \_SB_.PCI0.EHC1.URTH.URMH.PRT0._PLD returned a NULL object, and did not return ACPI_TYPE_PACKAGE.
 method: \_SB_.PCI0.PEG_.VID_._IRC returned values, but was expected to return nothing.
 fan: Fan present but has no cur_state present.
 autobrightness: 52 brightness levels did not match the brightnesss level just set for backlight intel_backlight.

Low failures: 60
 klog: LOW Kernel message: [   23.039039] lpc_ich: Resource conflict(s) found affecting gpio_ich
 dmicheck: String index 0x03 in table entry 'Processor Information (Type 4)' @ 0xdae9d02a, field 'Serial Number', offset 0x20 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x05 in table entry 'Processor Information (Type 4)' @ 0xdae9d02a, field 'Asset Tag', offset 0x21 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x06 in table entry 'Processor Information (Type 4)' @ 0xdae9d02a, field 'Part Number', offset 0x22 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x05 in table entry 'Memory Device (Type 17)' @ 0xdae9d162, field 'Asset Tag', offset 0x19 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x03 in table entry 'Memory Device (Type 17)' @ 0xdae9d1ca, field 'Asset Tag', offset 0x19 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x06 in table entry 'Base Board Information (Type 2)' @ 0xdae9d2f7, field 'Location In Chassis', offset 0x0a has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0xdae9d393, field 'Internal Reference Designator', offset 0x04 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0xdae9d3bc, field 'Internal Reference Designator', offset 0x04 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0xdae9d43d, field 'Internal Reference Designator', offset 0x04 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0xdae9d4c4, field 'Internal Reference Designator', offset 0x04 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0xdae9d503, field 'Internal Reference Designator', offset 0x04 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0xdae9d521, field 'Internal Reference Designator', offset 0x04 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0xdae9d53f, field 'Internal Reference Designator', offset 0x04 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0xdae9d55d, field 'Internal Reference Designator', offset 0x04 has a default value 'Not Available' and probably has not been updated by the BIOS vendor.
 syntaxcheck: Assembler remark in line 2447
 syntaxcheck: Assembler remark in line 3719
 syntaxcheck: Assembler remark in line 5568
 syntaxcheck: Assembler remark in line 5638
 syntaxcheck: Assembler remark in line 6519
 syntaxcheck: Assembler remark in line 6543
 syntaxcheck: Assembler remark in line 6554
 syntaxcheck: Assembler remark in line 6564
 syntaxcheck: Assembler remark in line 6591
 syntaxcheck: Assembler remark in line 6640
 syntaxcheck: Assembler remark in line 6654
 syntaxcheck: Assembler remark in line 6699
 syntaxcheck: Assembler remark in line 7901
 syntaxcheck: Assembler remark in line 8167
 syntaxcheck: Assembler remark in line 8633
 syntaxcheck: Assembler remark in line 9552
 syntaxcheck: Assembler remark in line 9617
 syntaxcheck: Assembler remark in line 9773
 syntaxcheck: Assembler remark in line 10557
 syntaxcheck: Assembler remark in line 10760
 syntaxcheck: Assembler remark in line 11611
 syntaxcheck: Assembler remark in line 11635
 syntaxcheck: Assembler remark in line 11656
 syntaxcheck: Assembler remark in line 11677
 syntaxcheck: Assembler remark in line 11698
 syntaxcheck: Assembler remark in line 11712
 syntaxcheck: Assembler remark in line 11740
 syntaxcheck: Assembler remark in line 11830
 syntaxcheck: Assembler remark in line 12615
 syntaxcheck: Assembler remark in line 12631
 syntaxcheck: Assembler remark in line 12719
 syntaxcheck: Assembler remark in line 12924
 syntaxcheck: Assembler remark in line 12944
 syntaxcheck: Assembler remark in line 12962
 syntaxcheck: Assembler remark in line 13104
 syntaxcheck: Assembler remark in line 13152
 syntaxcheck: Assembler remark in line 13276
 syntaxcheck: Assembler remark in line 14680
 syntaxcheck: Assembler remark in line 14996
 syntaxcheck: Assembler remark in line 117
 syntaxcheck: Assembler remark in line 132
 syntaxcheck: Assembler remark in line 135
 syntaxcheck: Assembler remark in line 161
 syntaxcheck: Assembler remark in line 240
 syntaxcheck: Assembler remark in line 250

Other failures: NONE

Test           |Pass |Fail |Abort|Warn |Skip |Info |
---------------+-----+-----+-----+-----+-----+-----+
acpiinfo       |     |     |     |     |     |    3|
acpitables     |   24|     |     |     |     |     |
apicedge       |     |    4|     |     |     |     |
apicinstance   |    1|     |     |     |     |     |
asf            |    6|     |     |     |     |     |
aspm           |    2|     |     |    4|     |     |
aspt           |     |     |     |     |    1|     |
autobrightness |    5|    1|     |     |     |     |
bert           |     |     |     |     |    1|     |
bgrt           |     |     |     |     |    1|     |
bios32         |    4|     |     |     |     |     |
bios_info      |     |     |     |     |     |    1|
boot           |     |     |     |     |    1|     |
checksum       |   26|     |     |     |     |     |
cpep           |     |     |     |     |    1|     |
cpufreq        |    3|    2|     |    4|    2|     |
crs            |    1|     |     |     |     |     |
csm            |     |     |     |     |     |    1|
csrt           |     |     |     |     |    1|     |
cstates        |    4|     |     |     |     |     |
dbg2           |    1|     |     |     |     |     |
dbgp           |     |     |     |     |    1|     |
dmar           |     |     |     |     |    1|     |
dmicheck       |   62|   16|     |     |    1|     |
ebda           |    1|     |     |     |     |     |
ecdt           |    2|     |     |     |     |     |
erst           |     |     |     |     |    1|     |
facs           |    1|     |     |     |     |     |
fadt           |    4|     |     |     |     |     |
fan            |    5|    1|     |     |     |     |
fpdt           |    1|     |     |     |     |     |
gtdt           |     |     |     |     |    1|     |
hda_audio      |    1|     |     |     |     |     |
hest           |     |     |     |     |    1|     |
hpet           |    5|     |     |     |     |     |
iort           |     |     |     |     |    1|     |
klog           |     |    6|     |     |     |     |
lpit           |     |     |     |     |    1|     |
madt           |    1|     |     |     |     |     |
maxfreq        |    1|     |     |     |     |     |
maxreadreq     |    1|     |     |     |     |     |
mcfg           |    2|     |     |     |     |     |
mchi           |     |     |     |     |    1|     |
method         |  403|    2|     |     |  140|     |
microcode      |     |     |     |     |    1|     |
mpcheck        |    9|     |     |     |     |     |
msdm           |     |     |     |     |    1|     |
msr            |   96|     |     |     |     |     |
mtrr           |    2|     |     |     |    1|     |
nx             |    3|     |     |     |     |     |
oops           |    2|     |     |     |     |     |
osilinux       |     |     |     |    1|     |     |
pcc            |     |     |     |     |     |    1|
pciirq         |    4|     |     |     |     |     |
pnp            |    2|     |     |     |     |     |
rsdp           |    1|     |     |     |     |     |
rsdt           |    1|     |     |     |     |     |
sbst           |     |     |     |     |    1|     |
securebootcert |     |     |     |     |    1|     |
slic           |    1|     |     |     |     |     |
slit           |     |     |     |     |    1|     |
spcr           |     |     |     |     |    1|     |
spmi           |     |     |     |     |    1|     |
srat           |     |     |     |     |    1|     |
stao           |     |     |     |     |    1|     |
syntaxcheck    |    3|  114|     |     |     |     |
tcpa           |    1|     |     |     |     |     |
tpm2           |     |     |    1|     |     |     |
uefi           |    1|     |     |     |     |     |
uefibootpath   |     |     |    1|     |     |     |
uefirtauthvar  |     |     |   12|     |     |     |
uefirtmisc     |     |     |    3|     |     |     |
uefirttime     |     |     |   35|     |     |     |
uefirtvariable |     |     |    8|     |     |     |
version        |     |     |     |     |     |    4|
virt           |     |    1|     |     |     |     |
waet           |     |     |     |     |    1|     |
wakealarm      |    4|     |     |     |     |     |
wdat           |     |     |     |     |    1|     |
wmi            |    8|     |     |     |     |     |
xenv           |     |     |    1|     |     |     |
xsdt           |    1|     |     |     |     |     |
---------------+-----+-----+-----+-----+-----+-----+
Total:         |  706|  147|   61|    9|  169|   10|
---------------+-----+-----+-----+-----+-----+-----+
