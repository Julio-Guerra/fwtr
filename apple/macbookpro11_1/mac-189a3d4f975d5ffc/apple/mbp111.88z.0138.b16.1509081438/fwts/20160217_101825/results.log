Results generated by fwts: Version V16.01.00 (2016-01-13 08:23:12).

Some of this work - Copyright (c) 1999 - 2016, Intel Corp. All rights reserved.
Some of this work - Copyright (c) 2010 - 2016, Canonical.

This test run on 17/02/16 at 10:18:25 on host Linux ubuntu 4.2.0-18-generic
#22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC 2015 x86_64.

Command: "fwts --force-clean --skip-test=s3 --batch --uefitests
--show-progress-dialog --log-type plaintext".
Running tests: version bios_info oops klog mtrr acpiinfo uefirtauthvar
uefibootpath securebootcert uefirtmisc uefirtvariable uefirttime csm maxreadreq
crs aspm dmicheck microcode msr nx cpufreq maxfreq virt pnp pciirq mpcheck
hda_audio ebda bios32 apicedge xenv xsdt wmi wdat wakealarm waet uefi tpm2 tcpa
syntaxcheck stao srat spmi spcr slit slic sbst rsdt rsdp pcc osilinux method
msdm mchi mcfg madt lpit iort hpet hest gtdt fpdt fan fadt facs erst ecdt dmar
dbg2 dbgp cstates csrt cpep checksum autobrightness boot bgrt bert aspt asf
apicinstance acpitables.

version: Gather kernel system information.
--------------------------------------------------------------------------------
Test 1 of 4: Gather kernel signature.
Signature: Ubuntu 4.2.0-18.22~14.04.1-generic 4.2.3

Test 2 of 4: Gather kernel system information.
Kernel Version: Linux version 4.2.0-18-generic (buildd@lgw01-55) (gcc version
4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC
2015

Test 3 of 4: Gather kernel boot command line.
Kernel boot command line: BOOT_IMAGE=/casper/vmlinuz boot=casper ip=frommedia
persistent noprompt splash quiet FWTS_AUTO_SHUTDOWN=1 --

Test 4 of 4: Gather ACPI driver version.
ACPI Version: 20150619

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 4 info only.
================================================================================

bios_info: Gather BIOS DMI information.
--------------------------------------------------------------------------------
Test 1 of 1: Gather BIOS DMI information
BIOS Vendor       : Apple Inc.
BIOS Version      : MBP111.88Z.0138.B16.1509081438
BIOS Release Date : 09/08/2015
Board Name        : Mac-189A3D4F975D5FFC
Board Serial #    : 
Board Version     : MacBookPro11,1
Board Asset Tag   : Base Board Asset Tag#
Chassis Serial #  : 
Chassis Type      : 10
Chassis Vendor    : Apple Inc.
Chassis Version   : Mac-189A3D4F975D5FFC
Chassic Asset Tag : 
Product Name      : MacBookPro11,1
Product Serial #  : 
Product UUID      : 
Product Version   : 1.0
System Vendor     : Apple Inc.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

oops: Scan kernel log for Oopses.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log oops check.
PASSED: Test 1, Found no oopses in kernel log.
PASSED: Test 1, Found no WARN_ON warnings in kernel log.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

klog: Scan kernel log for errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log error check.
Kernel message: [ 0.025590] ENERGY_PERF_BIAS: Set to 'normal', was 'performance'

ADVICE: This is not exactly a failure but a warning from the kernel. The
MSR_IA32_ENERGY_PERF_BIAS was initialized and defaulted to a high performance
bias setting. The kernel has detected this and changed it down to a 'normal'
bias setting.

Kernel message: [ 0.127119] [Firmware Bug]: ACPI: BIOS _OSI(Linux) query ignored

ADVICE: This is not exactly a failure mode but a warning from the kernel. The
_OSI() method has implemented a match to the 'Linux' query in the DSDT and this
is redundant because the ACPI driver matches onto the Windows _OSI strings by
default.

Kernel message: [ 0.129510] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S1_] (20150619/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S1 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means that the kernel does not know how to
enter the S1 sleep state, however, it should not be a problem if the S1 sleep
state isn't supported intentionally.

Kernel message: [ 0.129515] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S2_] (20150619/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S2 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means that the kernel does not know how to
enter the S2 sleep state, however, it should not be a problem if the S2 sleep
state isn't supported intentionally.

PASSED: Test 1, Found no errors in kernel log.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mtrr: MTRR tests.
--------------------------------------------------------------------------------
MTRR overview
-------------
Reg 0: 0x00000000c0000000 - 0x0000000100000000 (  1024 MB)   Uncached
Reg 1: 0x00000000a0000000 - 0x00000000c0000000 (   512 MB)   Uncached
Reg 2: 0x0000000090000000 - 0x00000000a0000000 (   256 MB)   Uncached
Reg 3: 0x000000008c000000 - 0x0000000090000000 (    64 MB)   Uncached
Reg 4: 0x000000008b800000 - 0x000000008c000000 (     8 MB)   Uncached

Test 1 of 3: Validate the kernel MTRR IOMEM setup.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x1000 to 0x57fff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x1000 to 0x57fff (System
RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x59000 to 0x8efff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x59000 to 0x8efff (System
RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x90000 to 0x9ffff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x90000 to 0x9ffff (System
RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x100000 to 0x8ad13fff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x100000 to 0x8ad13fff
(System RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x8ad53000 to 0x8ad61fff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x8ad53000 to 0x8ad61fff
(System RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x8ad8f000 to 0x8ae38fff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x8ad8f000 to 0x8ae38fff
(System RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x8ae8f000 to 0x8aecffff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x8ae8f000 to 0x8aecffff
(System RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x8aeff000 to 0x8af7bfff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x8aeff000 to 0x8af7bfff
(System RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x8afe5000 to 0x8affffff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x8afe5000 to 0x8affffff
(System RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x90000000 to 0x9fffffff
(0000:02:00.0) has incorrect attribute Uncached.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0xa0000000 to 0xafffffff
(0000:00:02.0) has incorrect attribute Uncached.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x100000000 to
0x46f5fffff (System RAM) has incorrect attribute Default (Most probably
Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x100000000 to 0x46f5fffff
(System RAM) is lacking attribute Write-Back.

Test 2 of 3: Validate the MTRR setup across all processors.
PASSED: Test 2, All processors have the a consistent MTRR setup.

Test 3 of 3: Test for AMD MtrrFixDramModEn being cleared by the BIOS.
SKIPPED: Test 3, CPU is not an AMD, cannot test.

================================================================================
1 passed, 22 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

acpiinfo: General ACPI information test.
--------------------------------------------------------------------------------
Test 1 of 3: Determine Kernel ACPI version.
Kernel ACPICA driver version: 20150619, supports ACPI 5.0

Test 2 of 3: Determine machine's ACPI version.
FACP ACPI Version: 5.0 

Test 3 of 3: Determine AML compiler.
Determine the compiler used to generate the ACPI AML in the DSDT and SSDT.
Table DSDT, OEM APPLE , created with INTL (Intel) compiler.
Table SSDT0, OEM APPLE , created with INTL (Intel) compiler.
Table SSDT1, OEM APPLE , created with INTL (Intel) compiler.
Table SSDT2, OEM APPLE , created with INTL (Intel) compiler.
Table SSDT3, OEM APPLE , created with INTL (Intel) compiler.
Table SSDT4, OEM APPLE , created with INTL (Intel) compiler.
Table SSDT5, OEM APPLE , created with INTL (Intel) compiler.
Table SSDT6, OEM APPLE , created with INTL (Intel) compiler.
Table SSDT7, OEM PmRef, created with INTL (Intel) compiler.
Table SSDT8, OEM PmRef, created with INTL (Intel) compiler.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 3 info only.
================================================================================

uefirtauthvar: Authenticated variable tests.
--------------------------------------------------------------------------------
Test 1 of 12: Create authenticated variable test.
FAILED [HIGH] UEFICreateAuthVar: Test 1, Failed to get authenticated variable
with UEFI runtime service.
Return status: EFI_BUFFER_TOO_SMALL. The buffer is not large enough to hold the
requested data. The required buffer size is returned in the appropriate
parameter when this error occurs.

Test 2 of 12: Authenticated variable test with the same authenticated variable.
SKIPPED: Test 2, The test variable, AuthVarCreate, doesn't exist, skip the test.

Test 3 of 12: Authenticated variable test with another valid authenticated
variable.
SKIPPED: Test 3, The test variable, AuthVarCreate, doesn't exist, skip the test.

Test 4 of 12: Append authenticated variable test.
SKIPPED: Test 4, The test variable, AuthVarCreate, doesn't exist, skip the test.

Test 5 of 12: Update authenticated variable test.
SKIPPED: Test 5, The test data, AuthVarAppend, doesn't exist, skip the test.

Test 6 of 12: Authenticated variable test with old authenticated variable.
SKIPPED: Test 6, The test variable, AuthVarUpdate, doesn't exist, skip the test.

Test 7 of 12: Delete authenticated variable test.
SKIPPED: Test 7, The test data, AuthVarCreate, doesn't exist, skip the test.

Test 8 of 12: Authenticated variable test with invalid modified data.
FAILED [HIGH] UEFISetAuthVarInvalidData: Test 8, Set authenticated variable
expected fail but success

Test 9 of 12: Authenticated variable test with invalid modified timestamp.
FAILED [HIGH] UEFISetAuthVarInvalidTime: Test 9, Set authenticated variable
expected fail but success

Test 10 of 12: Authenticated variable test with different guid.
FAILED [HIGH] UEFISetAuthVarDiffGuid: Test 10, Set authenticated variable
expected fail but success

Test 11 of 12: Authenticated variable test with invalid attributes.
FAILED [HIGH] UEFISetAuthVarInvalidAttr: Test 11, Set authenticated variable
expected fail but success

Test 12 of 12: Set and delete authenticated variable created by different key
test.
FAILED [HIGH] UEFISetAuthVarDiff: Test 12, Failed to get authenticated variable
with UEFI runtime service.
Return status: EFI_BUFFER_TOO_SMALL. The buffer is not large enough to hold the
requested data. The required buffer size is returned in the appropriate
parameter when this error occurs.

================================================================================
0 passed, 6 failed, 0 warning, 0 aborted, 6 skipped, 0 info only.
================================================================================

uefibootpath: Sanity check for UEFI Boot Path Boot####.
--------------------------------------------------------------------------------
Test 1 of 1: Test UEFI Boot Path Boot####.
Name: Boot0080
Info: Mac OS X
PASSED: Test 1, Check bootpath Boot0080 test passed.
Name: Boot0081
Info: Recovery OS
PASSED: Test 1, Check bootpath Boot0081 test passed.
Name: Boot0082
Info: 
PASSED: Test 1, Check bootpath Boot0082 test passed.
Name: BootFFFF
Info: 
PASSED: Test 1, Check bootpath BootFFFF test passed.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

securebootcert: UEFI secure boot test.
--------------------------------------------------------------------------------
Test 1 of 1: UEFI secure boot test.
FAILED [HIGH] SecureBootCertVariableNotFound: Test 1, The secure boot variable
SecureBoot not found.
FAILED [HIGH] SecureBootCertVariableNotFound: Test 1, The secure boot variable
SetupMode not found.
Not in readiness for secureboot, variable DB not found.
Not in readiness for secureboot, variable KEK not found.

================================================================================
0 passed, 2 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

uefirtmisc: UEFI miscellaneous runtime service interface tests.
--------------------------------------------------------------------------------
Test 1 of 3: Test for UEFI miscellaneous runtime service interfaces.
Testing UEFI runtime service GetNextHighMonotonicCount interface.
PASSED: Test 1, UEFI runtime service GetNextHighMonotonicCount interface test
passed.
Testing UEFI runtime service QueryCapsuleCapabilities interface.
SKIPPED: Test 1, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x0: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.

SKIPPED: Test 1, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x10000: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.

SKIPPED: Test 1, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x30000: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.

SKIPPED: Test 1, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x50000: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.

SKIPPED: Test 1, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x70000: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.


Test 2 of 3: Stress test for UEFI miscellaneous runtime service interfaces.
Stress testing for UEFI runtime service GetNextHighMonotonicCount interface.
PASSED: Test 2, UEFI runtime service GetNextHighMonotonicCount interface stress
test passed.
Stress testing UEFI runtime service QueryCapsuleCapabilities interface.
SKIPPED: Test 2, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x0: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.

SKIPPED: Test 2, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x10000: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.

SKIPPED: Test 2, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x30000: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.

SKIPPED: Test 2, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x50000: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.

SKIPPED: Test 2, Not support the UEFI QueryCapsuleCapabilities runtime interface
with flag value 0x70000: cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.


Test 3 of 3: Test GetNextHighMonotonicCount with invalid NULL parameter.
PASSED: Test 3, Test with invalid NULL parameter returned EFI_INVALID_PARAMETER
as expected.

================================================================================
3 passed, 0 failed, 0 warning, 0 aborted, 10 skipped, 0 info only.
================================================================================

uefirtvariable: UEFI Runtime service variable interface tests.
--------------------------------------------------------------------------------
Test 1 of 8: Test UEFI RT service get variable interface.
FAILED [HIGH] UEFIRuntimeGetVariableAttributes: Test 1, Failed to get variable
with right attributes, attributes we got is 2147483655, but it should be 7.

Test 2 of 8: Test UEFI RT service get next variable name interface.
The runtime service GetNextVariableName interface function test.
PASSED: Test 2, The runtime service GetNextVariableName interface function test
passed.
Check the GetNextVariableName returned value of VariableNameSize is equal to the
length of VariableName.
PASSED: Test 2, Check the GetNextVariableName returned value of VariableNameSize
is equal to the length of VariableName passed.
Test GetNextVariableName interface returns unique variables.
PASSED: Test 2, Test GetNextVariableName interface returns unique variables
passed.
The GetNextVariableName interface conformance tests.
FAILED [HIGH] UEFIRuntimeGetNextVariableName: Test 2, Expected
EFI_INVALID_PARAMETER with NULL VariableName.
Return status: EFI_NOT_FOUND. The item was not found.

Test 3 of 8: Test UEFI RT service set variable interface.
Testing SetVariable on two different GUIDs and the same variable name.
FAILED [HIGH] UEFIRuntimeSetVariableAttributes: Test 3, Failed to set variable
with right attributes, attributes we got is 2147483655, but it should both be 7.

Test 4 of 8: Test UEFI RT service query variable info interface.
SKIPPED: Test 4, Not support the QueryVariableInfo UEFI runtime interface:
cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.


Test 5 of 8: Test UEFI RT service variable interface stress test.
Testing GetVariable on getting the variable 1024 times.
FAILED [HIGH] UEFIRuntimeGetVariableAttributes: Test 5, Failed to get variable
with right attributes, attributes we got is 2147483655, but it should be 7.

Test 6 of 8: Test UEFI RT service set variable interface stress test.
Testing SetVariable on setting the variable with the same data 40 times.
PASSED: Test 6, SetVariable on setting the variable with the same data multiple
times passed.
Testing SetVariable on setting the variable with different data 40 times.
PASSED: Test 6, Testing SetVariable on setting the variable with different data
multiple times passed.
Testing SetVariable on setting the variable with different name 40 times.
PASSED: Test 6, Testing SetVariable on setting the variable with different name
multiple times passed.
Testing SetVariable on setting the variable with different name and data 40
times.
PASSED: Test 6, Testing SetVariable on setting the variable with different name
and data multiple times passed.

Test 7 of 8: Test UEFI RT service query variable info interface stress test.
Testing QueryVariableInfo on querying the variable 1024 times.
SKIPPED: Test 7, Not support the QueryVariableInfo UEFI runtime interface:
cannot test.

ADVICE: Firmware also needs to check if the revision of system table is correct
or not. Linux kernel returns EFI_UNSUPPORTED as well, if the FirmwareRevision of
system table is less than EFI_2_00_SYSTEM_TABLE_REVISION.


Test 8 of 8: Test UEFI RT service get variable interface, invalid parameters.
Testing GetVariable with NULL variable name.
PASSED: Test 8, GetVariable with NULL variable name returned error
EFI_INVALID_PARAMETER as expected.
Testing GetVariable with NULL vendor GUID.
PASSED: Test 8, GetVariable with NULL vendor GUID returned error
EFI_INVALID_PARAMETER as expected.
Testing GetVariable with NULL datasize.
PASSED: Test 8, GetVariable with NULL datasize returned error
EFI_INVALID_PARAMETER as expected.
Testing GetVariable with NULL data.
PASSED: Test 8, GetVariable with NULL data returned error EFI_INVALID_PARAMETER
as expected.
Testing GetVariable with NULL variable name, vendor GUID, datasize and data.
PASSED: Test 8, GetVariable with NULL variable name, vendor GUID, datasize and
data returned error EFI_INVALID_PARAMETER as expected.

================================================================================
12 passed, 4 failed, 0 warning, 0 aborted, 2 skipped, 0 info only.
================================================================================

uefirttime: UEFI Runtime service time interface tests.
--------------------------------------------------------------------------------
Test 1 of 35: Test UEFI RT service get time interface.
PASSED: Test 1, UEFI runtime service GetTime interface test passed.

Test 2 of 35: Test UEFI RT service get time interface, NULL time parameter.
PASSED: Test 2, UEFI runtime service GetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 3 of 35: Test UEFI RT service get time interface, NULL time and NULL
capabilties parameters.
PASSED: Test 3, UEFI runtime service GetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 4 of 35: Test UEFI RT service set time interface.
PASSED: Test 4, UEFI runtime service SetTime interface test passed.

Test 5 of 35: Test UEFI RT service set time interface, invalid year 1899.
PASSED: Test 5, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 6 of 35: Test UEFI RT service set time interface, invalid year 10000.
PASSED: Test 6, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 7 of 35: Test UEFI RT service set time interface, invalid month 0.
PASSED: Test 7, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 8 of 35: Test UEFI RT service set time interface, invalid month 13.
PASSED: Test 8, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 9 of 35: Test UEFI RT service set time interface, invalid day 0.
PASSED: Test 9, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 10 of 35: Test UEFI RT service set time interface, invalid day 32.
PASSED: Test 10, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 11 of 35: Test UEFI RT service set time interface, invalid hour 24.
PASSED: Test 11, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 12 of 35: Test UEFI RT service set time interface, invalid minute 60.
PASSED: Test 12, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 13 of 35: Test UEFI RT service set time interface, invalid second 60.
PASSED: Test 13, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 14 of 35: Test UEFI RT service set time interface, invalid nanosecond
1000000000.
PASSED: Test 14, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 15 of 35: Test UEFI RT service set time interface, invalid timezone -1441.
PASSED: Test 15, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 16 of 35: Test UEFI RT service set time interface, invalid timezone 1441.
PASSED: Test 16, UEFI runtime service SetTime interface test passed, returned
EFI_INVALID_PARAMETER as expected.

Test 17 of 35: Test UEFI RT service get wakeup time interface.
PASSED: Test 17, UEFI runtime service GetWakeupTime interface test passed.

Test 18 of 35: Test UEFI RT service get wakeup time interface, NULL enabled
parameter.
PASSED: Test 18, UEFI runtime service GetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER or EFI_UNSUPPORTED as expected.

Test 19 of 35: Test UEFI RT service get wakeup time interface, NULL pending
parameter.
PASSED: Test 19, UEFI runtime service GetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER or EFI_UNSUPPORTED as expected.

Test 20 of 35: Test UEFI RT service get wakeup time interface, NULL time
parameter.
PASSED: Test 20, UEFI runtime service GetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER or EFI_UNSUPPORTED as expected.

Test 21 of 35: Test UEFI RT service get wakeup time interface, NULL enabled,
pending and time parameters.
PASSED: Test 21, UEFI runtime service GetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER or EFI_UNSUPPORTED as expected.

Test 22 of 35: Test UEFI RT service set wakeup time interface.
PASSED: Test 22, UEFI runtime service SetWakeupTime interface test passed.

Test 23 of 35: Test UEFI RT service set wakeup time interface, NULL time
parameter.
PASSED: Test 23, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 24 of 35: Test UEFI RT service set wakeup time interface, invalid year
1899.
PASSED: Test 24, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 25 of 35: Test UEFI RT service set wakeup time interface, invalid year
10000.
PASSED: Test 25, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 26 of 35: Test UEFI RT service set wakeup time interface, invalid month 0.
PASSED: Test 26, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 27 of 35: Test UEFI RT service set wakeup time interface, invalid month 13.
PASSED: Test 27, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 28 of 35: Test UEFI RT service set wakeup time interface, invalid day 0.
PASSED: Test 28, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 29 of 35: Test UEFI RT service set wakeup time interface, invalid day 32.
PASSED: Test 29, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 30 of 35: Test UEFI RT service set wakeup time interface, invalid hour 24.
PASSED: Test 30, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 31 of 35: Test UEFI RT service set wakeup time interface, invalid minute
60.
PASSED: Test 31, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 32 of 35: Test UEFI RT service set wakeup time interface, invalid second
60.
PASSED: Test 32, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 33 of 35: Test UEFI RT service set wakeup time interface, invalid
nanosecond 1000000000.
PASSED: Test 33, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 34 of 35: Test UEFI RT service set wakeup time interface, invalid timezone
-1441.
PASSED: Test 34, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

Test 35 of 35: Test UEFI RT service set wakeup time interface, invalid timezone
1441.
PASSED: Test 35, UEFI runtime service SetTimeWakeupTime interface test passed,
returned EFI_INVALID_PARAMETER as expected.

================================================================================
35 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

csm: UEFI Compatibility Support Module test.
--------------------------------------------------------------------------------
Test 1 of 1: UEFI Compatibility Support Module test.
Checking for UEFI Compatibility Support Module (CSM)
No CSM: UEFI firmware seems to have no CSM support.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

maxreadreq: Test firmware has set PCI Express MaxReadReq to a higher value on
non-motherboard devices.
--------------------------------------------------------------------------------
Test 1 of 1: Test firmware settings MaxReadReq for PCI Express devices.
PASSED: Test 1, All devices have MaxReadReq set > 128.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

crs: Test PCI host bridge configuration using _CRS.
--------------------------------------------------------------------------------
Test 1 of 1: Test PCI host bridge configuration using _CRS.
PASSED: Test 1, The kernel has detected a BIOS newer than the end of 2007 (9/8
/2015) and has assumed that your BIOS can correctly specify the host bridge MMIO
aperture using _CRS. If this does not work correctly you can override this by
booting with "pci=nocrs".

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

aspm: PCIe ASPM test.
--------------------------------------------------------------------------------
Test 1 of 2: PCIe ASPM ACPI test.
PCIe ASPM is controlled by Linux kernel.

Test 2 of 2: PCIe ASPM registers test.
WARNING: Test 2, RP 00h:1Ch.01h L0s not enabled.
WARNING: Test 2, Device 02h:00h.00h L0s not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.

PASSED: Test 2, PCIe ASPM setting matched was matched.
PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 00h:1Ch.04h L0s not enabled.
WARNING: Test 2, RP 00h:1Ch.04h L1 not enabled.
WARNING: Test 2, Device 05h:00h.00h L0s not enabled.
WARNING: Test 2, Device 05h:00h.00h L1 not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.


ADVICE: The ASPM L1 low power Link state is optimized for maximum power savings
with longer entry and exit latencies. Disabling L1 of a PCIe device may
increases power consumption, and will impact the battery life of a mobile system
significantly.

PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 00h:1Ch.05h L0s not enabled.
WARNING: Test 2, Device 04h:00h.00h L0s not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.

PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 05h:00h.00h L0s not enabled.
WARNING: Test 2, RP 05h:00h.00h L1 not enabled.
WARNING: Test 2, Device 06h:00h.00h L0s not enabled.
WARNING: Test 2, Device 06h:00h.00h L1 not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.


ADVICE: The ASPM L1 low power Link state is optimized for maximum power savings
with longer entry and exit latencies. Disabling L1 of a PCIe device may
increases power consumption, and will impact the battery life of a mobile system
significantly.

PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 06h:00h.00h L0s not enabled.
WARNING: Test 2, RP 06h:00h.00h L1 not enabled.
WARNING: Test 2, Device 07h:00h.00h L0s not enabled.
WARNING: Test 2, Device 07h:00h.00h L1 not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.


ADVICE: The ASPM L1 low power Link state is optimized for maximum power savings
with longer entry and exit latencies. Disabling L1 of a PCIe device may
increases power consumption, and will impact the battery life of a mobile system
significantly.

PASSED: Test 2, PCIe ASPM setting matched was matched.

================================================================================
6 passed, 0 failed, 16 warnings, 0 aborted, 0 skipped, 0 info only.
================================================================================

dmicheck: DMI/SMBIOS table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Find and test SMBIOS Table Entry Points.
This test tries to find and sanity check the SMBIOS data structures.
PASSED: Test 1, Found SMBIOS Table Entry Point at 0x8ad15000
SMBIOS Entry Point Structure:
  Anchor String          : _SM_
  Checksum               : 0xab
  Entry Point Length     : 0x1f
  Major Version          : 0x02
  Minor Version          : 0x04
  Maximum Struct Size    : 0xd2
  Entry Point Revision   : 0x00
  Formatted Area         : 0x00 0x00 0x00 0x00 0x00
  Intermediate Anchor    : _DMI_
  Intermediate Checksum  : 0x9a
  Structure Table Length : 0x09db
  Structure Table Address: 0x8ad14000
  # of SMBIOS Structures : 0x002b
  SBMIOS BCD Revision    : 24

PASSED: Test 1, SMBIOS Table Entry Point Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Point Length is valid.
PASSED: Test 1, SMBIOS Table Entry Intermediate Anchor String _DMI_ is valid.
PASSED: Test 1, SMBIOS Table Entry Point Intermediate Checksum is valid.
FAILED [MEDIUM] SMBIOSIllegalTableEntry: Test 1, The size of a DMI entry 40 is
illegal, DMI data is either wrong or the SMBIOS Table Pointer is pointing to the
wrong memory region.

Test 2 of 3: Test DMI/SMBIOS tables for errors.
FAILED [LOW] DMISerialNumber: Test 2, String index 0x03 in table entry
'Processor Information (Type 4)' @ 0x8ad14000, field 'Serial Number', offset
0x20 has a default value 'To Be Filled By O.E.M.' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x05 in table entry
'Processor Information (Type 4)' @ 0x8ad14000, field 'Asset Tag', offset 0x21
has a default value 'To Be Filled By O.E.M.' and probably has not been updated
by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.5 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x8ad14095 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x8ad140aa 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x8ad140bf 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x8ad140d4 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x8ad140e9 'Physical Memory Array (Type 16)'
PASSED: Test 2, Entry @ 0x8ad140fa 'Unknown (Type 130)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x04 in table entry 'Memory
Device (Type 17)' @ 0x8ad141b6, field 'Serial Number', offset 0x18 has a default
value '0x00000000' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x05 in table entry 'Memory
Device (Type 17)' @ 0x8ad141b6, field 'Asset Tag', offset 0x19 has a default
value 'Unknown' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x8ad14220 'Unknown (Type 130)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x04 in table entry 'Memory
Device (Type 17)' @ 0x8ad142dc, field 'Serial Number', offset 0x18 has a default
value '0x00000000' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x05 in table entry 'Memory
Device (Type 17)' @ 0x8ad142dc, field 'Asset Tag', offset 0x19 has a default
value 'Unknown' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x8ad14346 'Memory Array Mapped Address (Type 19)'
PASSED: Test 2, Entry @ 0x8ad14357 'BIOS Information (Type 0)'
PASSED: Test 2, Entry @ 0x8ad143a5 'System Information (Type 1)'
FAILED [MEDIUM] DMIAssetTag: Test 2, String index 0x05 in table entry 'Base
Board Information (Type 2)' @ 0x8ad143fc, field 'Asset Tag', offset 0x08 has a
default value 'Base Board Asset Tag#' and probably has not been updated by the
BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless. Note that the kernel uses this field so it probably should be corrected
to ensure the kernel is using sane values.


ADVICE: It may be worth checking against section 7.3 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x8ad14473 'Chassis Information (Type 3)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0x8ad144b6, field 'Internal Reference
Designator', offset 0x04 has a default value 'None' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0x8ad144ca, field 'Internal Reference
Designator', offset 0x04 has a default value 'None' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0x8ad144de, field 'Internal Reference
Designator', offset 0x04 has a default value 'None' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0x8ad144fe, field 'Internal Reference
Designator', offset 0x04 has a default value 'None' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0x8ad14512, field 'Internal Reference
Designator', offset 0x04 has a default value 'None' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0x8ad1452c, field 'Internal Reference
Designator', offset 0x04 has a default value 'None' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0x8ad14543, field 'Internal Reference
Designator', offset 0x04 has a default value 'None' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0x8ad14563, field 'Internal Reference
Designator', offset 0x04 has a default value 'None' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x01 in table entry 'Port
Connector Information (Type 8)' @ 0x8ad14581, field 'Internal Reference
Designator', offset 0x04 has a default value 'None' and probably has not been
updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.9 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x8ad1459f 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x8ad145b5 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x8ad145d6 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x8ad145f7 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x8ad14618 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x8ad14639 'On Board Devices (Type 10)'
PASSED: Test 2, Entry @ 0x8ad1465c 'On Board Devices (Type 10)'
PASSED: Test 2, Entry @ 0x8ad14676 'On Board Devices (Type 10)'
PASSED: Test 2, Entry @ 0x8ad14682 'OEM Strings (Type 11)'
PASSED: Test 2, Entry @ 0x8ad1474d 'System Configuration Options (Type 12)'
FAILED [LOW] DMIStringIndexOutOfRange: Test 2, Out of range string index 0x01
while accessing entry 'BIOS Language Information (Type 13)' @ 0x8ad14754, field
'BIOS Language String 1', offset 0x04

ADVICE: DMI strings are stored in a manner that uses a special index to fetch
the Nth string from the data. For this particular DMI string the index given is
not in range which means this particular entry is broken. The Linux kernel does
not use this string, so this error will not cause any system errors.


ADVICE: It may be worth checking against section 7.14 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x8ad1476c 'System Boot Information (Type 32)'
PASSED: Test 2, Entry @ 0x8ad14782 'Unknown (Type 131)'
PASSED: Test 2, Entry @ 0x8ad1478a 'Unknown (Type 128)'
PASSED: Test 2, Entry @ 0x8ad147e4 'Unknown (Type 133)'
PASSED: Test 2, Entry @ 0x8ad147f2 'Unknown (Type 221)'
FAILED [HIGH] DMIInvalidEntryLength: Test 2, Invald header length of entry #40,
length was 0x00.

ADVICE: DMI entry header lengths must be 4 or more bytes long so this error
indicates that the DMI table is unreliable and DMI table checking has been
aborted at entry #40.

FAILED [MEDIUM] DMIBadTableLength: Test 2, DMI table length was 2523 bytes (as
specified by the SMBIOS header) but the DMI entries used 2112 bytes.
FAILED [MEDIUM] DMIStructCount: Test 2, DMI table was DMI 43 entries in size (as
specified by the SMBIOS header) but only 40 DMI entries were found.

Test 3 of 3: Test DMI/SMBIOS3 tables for errors.
SKIPPED: Test 3, Cannot find SMBIOS30 table entry, skip the test.

================================================================================
31 passed, 21 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

microcode: Test if system is using latest microcode.
--------------------------------------------------------------------------------
Test 1 of 1: Test for most recent microcode being loaded.
This test verifies if the firmware has put a recent revision of the microcode
into the processor at boot time. Recent microcode is important to have all the
required features and errata updates for the processor.
The kernel did not report that CPU 0 has had a microcode update. The current
firmware is revision 0x17 and probably has not been updated.
The kernel did not report that CPU 1 has had a microcode update. The current
firmware is revision 0x17 and probably has not been updated.
The kernel did not report that CPU 2 has had a microcode update. The current
firmware is revision 0x17 and probably has not been updated.
The kernel did not report that CPU 3 has had a microcode update. The current
firmware is revision 0x17 and probably has not been updated.
SKIPPED: Test 1, Could not determine from kernel log if latest microcode has
been loaded.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

msr: MSR register tests.
--------------------------------------------------------------------------------
Test 1 of 5: Test CPU generic MSRs.
PASSED: Test 1, MSR 0x00000001 P5_MC_TYPE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000006 MONITOR_FILTER_SIZE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000017 PLATFORM_ID is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000002a EBL_CR_POWERON is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000001b APIC_BASE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000003a FEATURE_CONTROL is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000008b BIOS_SIGN_ID is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000000fe MTRRCAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000174 SYSENTER_CS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000175 SYSENTER_ESP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000176 SYSENTER_EIP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000179 MCG_CAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000017a MCG_STATUS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000019a CLOCK_MODULATION is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000019b THERM_INTERRUPT is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000001a0 MISC_ENABLE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000001b2 PACKAGE_THERM_INTERRUPT is consistent across 4
CPUs.
PASSED: Test 1, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000200 MTRR_PHYSBASE0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000201 MTRR_PHYSMASK0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000202 MTRR_PHYSBASE1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000203 MTRR_PHYSMASK1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000204 MTRR_PHYSBASE2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000205 MTRR_PHYSMASK2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000206 MTRR_PHYSBASE3 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000207 MTRR_PHYSMASK3 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000208 MTRR_PHYSBASE4 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000209 MTRR_PHYSMASK4 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020a MTRR_PHYSBASE5 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020b MTRR_PHYSMASK5 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020c MTRR_PHYSBASE6 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020d MTRR_PHYSMASK6 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020e MTRR_PHYSBASE7 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020f MTRR_PHYSMASK7 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000210 MTRR_PHYSBASE8 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000211 MTRR_PHYSMASK8 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000212 MTRR_PHYSBASE9 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000213 MTRR_PHYSMASK9 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000250 MTRR_FIX64K_000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000258 MTRR_FIX16K_800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000259 MTRR_FIX16K_a00 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000268 MTRR_FIX4K_C000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000269 MTRR_FIX4K_C800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026a MTRR_FIX4K_D000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026b MTRR_FIX4K_D800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026c MTRR_FIX4K_E000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026d MTRR_FIX4K_E800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026e MTRR_FIX4K_F000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026f MTRR_FIX4K_F800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000277 PAT is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000280 MC0_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000281 MC1_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000282 MC2_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000283 MC3_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000284 MC4_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000285 MC5_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000286 MC6_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000002ff MTRR_DEF_TYPE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000003f1 PEBS_ENABLE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000480 VMX_BASIC is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000481 VMX_PINPASED_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000482 VMX_PROCBASED_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000483 VMX_EXIT_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000484 VMX_ENTRY_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000485 VMX_MISC is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000486 VMX_CR0_FIXED0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000487 VMX_CR0_FIXED1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000488 VMX_CR4_FIXED0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000489 VMX_CR4_FIXED1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048a VMX_VMX_VMCS_ENUM is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048b VMX_PROCBASED_CTLS2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048c VMX_EPT_VPID_CAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048d VMX_TRUE_PINBASED_CTLS is consistent across 4
CPUs.
PASSED: Test 1, MSR 0x0000048e VMX_TRUE_PROCBASED_CTLS is consistent across 4
CPUs.
PASSED: Test 1, MSR 0x0000048f VMX_TRUE_EXIT_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000490 VMX_TRUE_ENTRY_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000080 EFER is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000081 STAR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000082 LSTAR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000084 FMASK is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000102 KERNEL_GS_BASE is consistent across 4 CPUs.

Test 2 of 5: Test CPU specific model MSRs.
CPU family: 0x6, model: 0x45 (Haswell)
PASSED: Test 2, MSR 0x000000ce MSR_PLATFORM_INFO is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x0000003b IA32_TSC_ADJUST is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000186 IA32_PERFEVTSEL0 is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000187 IA32_PERFEVTSEL1 is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000188 IA32_PERFEVTSEL2 is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000189 IA32_PERFEVTSEL3 is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000648 MSR_CONFIG_TDP_NOMINAL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000649 MSR_CONFIG_TDP_LEVEL1 is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x0000064a MSR_CONFIG_TDP_LEVEL2 is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x0000064b MSR_CONFIG_TDP_CONTROL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x0000064c MSR_TURBO_ACTIVATION_RATIO is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000630 MSR_PKG_C8_RESIDENCY is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000630 MSR_PKG_C9_RESIDENCY is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000630 MSR_PKG_C10_RESIDENCY is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x000001ad MSR_TURBO_RATIO_LIMIT is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000391 MSR_UNC_PERF_GLOBAL_CTRL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000394 MSR_UNC_PERF_FIXED_CTRL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000396 MSR_UNC_CB0_CONFIG is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000391 MSR_UNC_PERF_GLOBAL_CTRL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000395 MSR_UNC_PERF_FIXED_CTR is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x000004e0 MSR_SMM_FEATURE_CONTROL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x000004e2 MSR_SMM_DELAYED is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x000004e3 MSR_SMM_BLOCKED is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000640 MSR_PP1_POWER_LIMIT is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000641 MSR_PP1_ENERGY_STATUS is consistent across 4
CPUs.

Test 3 of 5: Test all P State Ratios.
PASSED: Test 3, MSR 0x000000ce Minimum P-State is consistent across 4 CPUs.
PASSED: Test 3, MSR 0x000000ce Maximum P-State is consistent across 4 CPUs.

Test 4 of 5: Test C1 and C3 autodemotion.
PASSED: Test 4, MSR 0x000000e2 C1 and C3 Autodemotion is consistent across 4
CPUs.
C1 and C3 Autodemotion disabled.

Test 5 of 5: Test SMRR MSR registers.
PASSED: Test 5, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 4 CPUs.
PASSED: Test 5, MSR 0x000001f2 SMRR_TYPE is consistent across 4 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 4 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_VALID is consistent across 4 CPUs.

================================================================================
114 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

nx: Test if CPU NX is disabled by the BIOS.
--------------------------------------------------------------------------------
Test 1 of 3: Test CPU NX capability.
PASSED: Test 1, CPU has NX flags, BIOS is not disabling it.

Test 2 of 3: Test all CPUs have same BIOS set NX flag.
This test verifies that all CPUs have the same NX flag setting. Although rare,
BIOS may set the NX flag differently per CPU. 
PASSED: Test 2, All 4 CPUs have the same NX flag set.

Test 3 of 3: Test all CPUs have same msr setting in MSR 0x1a0.
This test verifies that all CPUs have the same NX flag setting by examining the
per CPU MSR register 0x1a0.
PASSED: Test 3, All 4 CPUs have the NX flag in MSR 0x1a0 set.

================================================================================
3 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

cpufreq: CPU frequency scaling tests.
--------------------------------------------------------------------------------
WARNING: Test 1, Cannot set CPU 0 governor to userspace.
Failed to intialise cpufreq to set CPU speed
Test 1 of 7: CPU frequency table consistency
PASSED: Test 1, CPU frequency tables are consistent

Test 2 of 7: CPU frequency table duplicates
PASSED: Test 2, No duplicates in CPU frequency table

Test 3 of 7: CPU frequency firmware limits
PASSED: Test 3, No BIOS limits imposed

Test 4 of 7: CPU frequency claimed maximum
WARNING: Test 4, cpu 0 has claimed frequency of 3100000, higher than max freq of
0
WARNING: Test 4, cpu 1 has claimed frequency of 3100000, higher than max freq of
0
WARNING: Test 4, cpu 2 has claimed frequency of 3100000, higher than max freq of
0
WARNING: Test 4, cpu 3 has claimed frequency of 3100000, higher than max freq of
0
FAILED [MEDIUM] CPUFreqClaimedMax: Test 4, CPU max frequency is unreachable

Test 5 of 7: CPU frequency SW_ANY control
SKIPPED: Test 5, Can't set CPU frequencies

Test 6 of 7: CPU frequency SW_ALL control
SKIPPED: Test 6, Can't set CPU frequencies

Test 7 of 7: CPU frequency performance tests.
FAILED [MEDIUM] CPUFreqSetFailed: Test 7, Can't set CPU frequencies

================================================================================
3 passed, 2 failed, 4 warnings, 0 aborted, 2 skipped, 0 info only.
================================================================================

maxfreq: Test max CPU frequencies against max scaling frequency.
--------------------------------------------------------------------------------
Test 1 of 1: Maximum CPU frequency test.
This test checks the maximum CPU frequency as detected by the kernel for each
CPU against maxiumum frequency as specified by the BIOS frequency scaling
settings.
PASSED: Test 1, 4 CPUs passed the maximum frequency check.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

virt: CPU Virtualisation Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: CPU Virtualisation Configuration test.
Check VT/VMX Virtualization extensions are set up correctly.
PASSED: Test 1, Virtualization extensions supported and enabled by BIOS.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pnp: BIOS Support Installation structure test.
--------------------------------------------------------------------------------
Test 1 of 1: PnP BIOS Support Installation structure test.
This test tries to find and sanity check the Plug and Play BIOS Support
Installation Check structure. 

Could not find PnP BIOS Support Installation Check structure. This is not
necessarily a failure.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pciirq: PCI IRQ Routing Table test.
--------------------------------------------------------------------------------
Test 1 of 1: PCI IRQ Routing Table test.
This test tries to find and sanity check the PCI IRQ Routing Table, as defined
by http://www.microsoft.com/taiwan/whdc/archive/pciirq.mspx and described in
pages 233-238 of PCI System Architecture, Fourth Edition, Mindshare, Inc.
(1999). NOTE: The PCI IRQ Routing Table only really knows about ISA IRQs and is
generally not used with APIC. 

Could not find PCI IRQ Routing Table. Since this table is for legacy BIOS
systems which don't have ACPI support this is generally not a problem.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mpcheck: MultiProcessor Tables tests.
--------------------------------------------------------------------------------
The kernel is using the ACPI MADT for SMP configuration information, so the
Multiprocessor Tables are not used by the kernel. Any errors in the tables will
not affect the operation of Linux unless it is booted with ACPI disabled.

NOTE: Since ACPI is being used in preference to the Multiprocessor Tables, any
errors found in the mpcheck tests will be tagged as LOW errors.

Failed to find the Multiprocessor Table data, skipping mpcheck test.
NOTE: Since the ACPI MADT is being used instead for SMP configuration, this is
not a problem.
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 9 skipped, 0 info only.
================================================================================

hda_audio: HDA Audio Pin Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: HDA Audio Pin Configuration test.
Checking 'hwC0D0':
Vendor Name    : Intel
Vendor ID      : 0x80862807
Subsystem ID   : 0x80860101
Revision ID    : 0x100000
BIOS pin configurations:
  Pin  Setting
  0x0005 0x18560010
  0x0006 0x18560010
  0x0007 0x18560010
PASSED: Test 1, Default BIOS pin configurations did not have software override.

Checking 'hwC1D0':
Vendor Name    : Cirrus Logic
Vendor ID      : 0x10134208
Subsystem ID   : 0x106b5d00
Revision ID    : 0x100300
BIOS pin configurations:
  Pin  Setting
  0x0010 0x002b4020
  0x0011 0x400000f0
  0x0012 0x90100110
  0x0013 0x90100112
  0x0014 0x400000f0
  0x0015 0x400000f0
  0x0016 0x400000f0
  0x0017 0x400000f0
  0x0018 0x00ab9040
  0x0019 0x400000f0
  0x001a 0x400000f0
  0x001b 0x400000f0
  0x001c 0x90a60100
  0x001d 0x400000f0
  0x001e 0x400000f0
  0x001f 0x400000f0
  0x0020 0x400000f0
  0x0021 0x004be030
  0x0022 0x400000f0
PASSED: Test 1, Default BIOS pin configurations did not have software override.


================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

ebda: Test EBDA region is mapped and reserved in memory map table.
--------------------------------------------------------------------------------
Machine is not using traditional BIOS firmware, skipping test.
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

bios32: BIOS32 Service Directory test.
--------------------------------------------------------------------------------
Machine is not using traditional BIOS firmware, skipping test.
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

apicedge: APIC edge/level test.
--------------------------------------------------------------------------------
Test 1 of 1: Legacy and PCI Interrupt Edge/Level trigger tests.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 0 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 8 is
incorrectly level triggered.

================================================================================
0 passed, 2 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

xenv: XENV Xen Environment Table tests.
--------------------------------------------------------------------------------
ACPI XENV table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

xsdt: XSDT Extended System Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: XSDT Extended System Description Table test.
PASSED: Test 1, No issues found in XSDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

wmi: Extract and analyse Windows Management Instrumentation (WMI).
--------------------------------------------------------------------------------
Test 1 of 1: Windows Management Instrumentation test.
No ACPI _WDG WMI data found.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

wdat: WDAT Microsoft Hardware Watchdog Action Table test.
--------------------------------------------------------------------------------
ACPI WDAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

wakealarm: ACPI Wakealarm tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test existence of RTC with alarm interface.
PASSED: Test 1, RTC with a RTC alarm ioctl() interface found.

Test 2 of 4: Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 1 seconds in the future.
PASSED: Test 2, RTC wakealarm was triggered successfully.

Test 3 of 4: Test if wakealarm is fired.
PASSED: Test 3, RTC wakealarm triggered and fired successfully.

Test 4 of 4: Multiple wakealarm firing tests.
Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 2 seconds in the future.
Trigger wakealarm for 3 seconds in the future.
Trigger wakealarm for 4 seconds in the future.
PASSED: Test 4, RTC wakealarm triggered and fired successfully.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

waet: WAET Windows ACPI Emulated Devices Table test.
--------------------------------------------------------------------------------
ACPI WAET table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

uefi: UEFI Data Table test.
--------------------------------------------------------------------------------
ACPI UEFI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

tpm2: TPM2 Trusted Platform Module 2 test.
--------------------------------------------------------------------------------
ACPI TPM2 table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

tcpa: TCPA Trusted Computing Platform Alliance Capabilities Table test.
--------------------------------------------------------------------------------
ACPI TCPA table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

syntaxcheck: Re-assemble DSDT and SSDTs to find syntax errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble and reassemble DSDT and SSDTs.

Checking ACPI table DSDT (#0)

FAILED [MEDIUM] AMLAsmASL_MSG_RETURN_TYPES: Test 1, Assembler warning in line
2295
Line | AML source
--------------------------------------------------------------------------------
02292|             Name (GUID, ToUUID ("") /* PCI Host Bridge Device */)
02293|             Name (SUPP, 0x00)
02294|             Name (CTRL, 0x00)
02295|             Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
     |                       ^
     | Warning 3115: Not all control paths return a value    (_OSC)
02296|             {
02297|                 Store (Arg3, Local0)
02298|                 CreateDWordField (Local0, 0x00, CDW1)
================================================================================

ADVICE: (for Warning #3115, ASL_MSG_RETURN_TYPES): Some of the execution paths
do not return a value. All control paths that return must return a value
otherwise unexpected behaviour may occur. This error occurs because a branch on
an conditional op-code returns a value and another does not, which is
inconsistent behaviour.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_RETURN_VALUE: Test 1, Assembler warning
in line 2295
Line | AML source
--------------------------------------------------------------------------------
02292|             Name (GUID, ToUUID ("") /* PCI Host Bridge Device */)
02293|             Name (SUPP, 0x00)
02294|             Name (CTRL, 0x00)
02295|             Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
     |                       ^
     | Warning 3107: Reserved method must return a value    (Buffer required for _OSC)
02296|             {
02297|                 Store (Arg3, Local0)
02298|                 CreateDWordField (Local0, 0x00, CDW1)
================================================================================

ADVICE: (for Warning #3107, ASL_MSG_RESERVED_RETURN_VALUE): A reserved method
was expected to return a value, however, it does not. This is unexpected
behaviour that does not conform the the ACPI specification.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
2590
Line | AML source
--------------------------------------------------------------------------------
02587|                     }
02588|                 }
02589| 
02590|                 Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
02591|                 {
02592|                     If (CondRefOf (IDAB)) {}
02593|                     Else
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4641
Line | AML source
--------------------------------------------------------------------------------
04638|                         {
04639|                             Name (RTLA, ResourceTemplate ()
04640|                             {
04641|                                 IRQ (Level, ActiveLow, Shared, _Y0E)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04642|                                     {}
04643|                             })
04644|                             CreateWordField (RTLA, \_SB.LNKA._CRS._Y0E._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4641
Line | AML source
--------------------------------------------------------------------------------
04638|                         {
04639|                             Name (RTLA, ResourceTemplate ()
04640|                             {
04641|                                 IRQ (Level, ActiveLow, Shared, _Y0E)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04642|                                     {}
04643|                             })
04644|                             CreateWordField (RTLA, \_SB.LNKA._CRS._Y0E._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4641
Line | AML source
--------------------------------------------------------------------------------
04638|                         {
04639|                             Name (RTLA, ResourceTemplate ()
04640|                             {
04641|                                 IRQ (Level, ActiveLow, Shared, _Y0E)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04642|                                     {}
04643|                             })
04644|                             CreateWordField (RTLA, \_SB.LNKA._CRS._Y0E._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4689
Line | AML source
--------------------------------------------------------------------------------
04686|                         {
04687|                             Name (RTLB, ResourceTemplate ()
04688|                             {
04689|                                 IRQ (Level, ActiveLow, Shared, _Y0F)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04690|                                     {}
04691|                             })
04692|                             CreateWordField (RTLB, \_SB.LNKB._CRS._Y0F._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4689
Line | AML source
--------------------------------------------------------------------------------
04686|                         {
04687|                             Name (RTLB, ResourceTemplate ()
04688|                             {
04689|                                 IRQ (Level, ActiveLow, Shared, _Y0F)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04690|                                     {}
04691|                             })
04692|                             CreateWordField (RTLB, \_SB.LNKB._CRS._Y0F._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4689
Line | AML source
--------------------------------------------------------------------------------
04686|                         {
04687|                             Name (RTLB, ResourceTemplate ()
04688|                             {
04689|                                 IRQ (Level, ActiveLow, Shared, _Y0F)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04690|                                     {}
04691|                             })
04692|                             CreateWordField (RTLB, \_SB.LNKB._CRS._Y0F._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4737
Line | AML source
--------------------------------------------------------------------------------
04734|                         {
04735|                             Name (RTLC, ResourceTemplate ()
04736|                             {
04737|                                 IRQ (Level, ActiveLow, Shared, _Y10)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04738|                                     {}
04739|                             })
04740|                             CreateWordField (RTLC, \_SB.LNKC._CRS._Y10._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4737
Line | AML source
--------------------------------------------------------------------------------
04734|                         {
04735|                             Name (RTLC, ResourceTemplate ()
04736|                             {
04737|                                 IRQ (Level, ActiveLow, Shared, _Y10)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04738|                                     {}
04739|                             })
04740|                             CreateWordField (RTLC, \_SB.LNKC._CRS._Y10._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4737
Line | AML source
--------------------------------------------------------------------------------
04734|                         {
04735|                             Name (RTLC, ResourceTemplate ()
04736|                             {
04737|                                 IRQ (Level, ActiveLow, Shared, _Y10)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04738|                                     {}
04739|                             })
04740|                             CreateWordField (RTLC, \_SB.LNKC._CRS._Y10._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4785
Line | AML source
--------------------------------------------------------------------------------
04782|                         {
04783|                             Name (RTLD, ResourceTemplate ()
04784|                             {
04785|                                 IRQ (Level, ActiveLow, Shared, _Y11)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04786|                                     {}
04787|                             })
04788|                             CreateWordField (RTLD, \_SB.LNKD._CRS._Y11._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4785
Line | AML source
--------------------------------------------------------------------------------
04782|                         {
04783|                             Name (RTLD, ResourceTemplate ()
04784|                             {
04785|                                 IRQ (Level, ActiveLow, Shared, _Y11)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04786|                                     {}
04787|                             })
04788|                             CreateWordField (RTLD, \_SB.LNKD._CRS._Y11._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4785
Line | AML source
--------------------------------------------------------------------------------
04782|                         {
04783|                             Name (RTLD, ResourceTemplate ()
04784|                             {
04785|                                 IRQ (Level, ActiveLow, Shared, _Y11)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04786|                                     {}
04787|                             })
04788|                             CreateWordField (RTLD, \_SB.LNKD._CRS._Y11._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4833
Line | AML source
--------------------------------------------------------------------------------
04830|                         {
04831|                             Name (RTLE, ResourceTemplate ()
04832|                             {
04833|                                 IRQ (Level, ActiveLow, Shared, _Y12)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04834|                                     {}
04835|                             })
04836|                             CreateWordField (RTLE, \_SB.LNKE._CRS._Y12._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4833
Line | AML source
--------------------------------------------------------------------------------
04830|                         {
04831|                             Name (RTLE, ResourceTemplate ()
04832|                             {
04833|                                 IRQ (Level, ActiveLow, Shared, _Y12)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04834|                                     {}
04835|                             })
04836|                             CreateWordField (RTLE, \_SB.LNKE._CRS._Y12._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4833
Line | AML source
--------------------------------------------------------------------------------
04830|                         {
04831|                             Name (RTLE, ResourceTemplate ()
04832|                             {
04833|                                 IRQ (Level, ActiveLow, Shared, _Y12)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04834|                                     {}
04835|                             })
04836|                             CreateWordField (RTLE, \_SB.LNKE._CRS._Y12._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4881
Line | AML source
--------------------------------------------------------------------------------
04878|                         {
04879|                             Name (RTLF, ResourceTemplate ()
04880|                             {
04881|                                 IRQ (Level, ActiveLow, Shared, _Y13)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04882|                                     {}
04883|                             })
04884|                             CreateWordField (RTLF, \_SB.LNKF._CRS._Y13._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4881
Line | AML source
--------------------------------------------------------------------------------
04878|                         {
04879|                             Name (RTLF, ResourceTemplate ()
04880|                             {
04881|                                 IRQ (Level, ActiveLow, Shared, _Y13)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04882|                                     {}
04883|                             })
04884|                             CreateWordField (RTLF, \_SB.LNKF._CRS._Y13._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4881
Line | AML source
--------------------------------------------------------------------------------
04878|                         {
04879|                             Name (RTLF, ResourceTemplate ()
04880|                             {
04881|                                 IRQ (Level, ActiveLow, Shared, _Y13)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04882|                                     {}
04883|                             })
04884|                             CreateWordField (RTLF, \_SB.LNKF._CRS._Y13._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4929
Line | AML source
--------------------------------------------------------------------------------
04926|                         {
04927|                             Name (RTLG, ResourceTemplate ()
04928|                             {
04929|                                 IRQ (Level, ActiveLow, Shared, _Y14)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04930|                                     {}
04931|                             })
04932|                             CreateWordField (RTLG, \_SB.LNKG._CRS._Y14._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4929
Line | AML source
--------------------------------------------------------------------------------
04926|                         {
04927|                             Name (RTLG, ResourceTemplate ()
04928|                             {
04929|                                 IRQ (Level, ActiveLow, Shared, _Y14)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04930|                                     {}
04931|                             })
04932|                             CreateWordField (RTLG, \_SB.LNKG._CRS._Y14._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4929
Line | AML source
--------------------------------------------------------------------------------
04926|                         {
04927|                             Name (RTLG, ResourceTemplate ()
04928|                             {
04929|                                 IRQ (Level, ActiveLow, Shared, _Y14)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04930|                                     {}
04931|                             })
04932|                             CreateWordField (RTLG, \_SB.LNKG._CRS._Y14._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4977
Line | AML source
--------------------------------------------------------------------------------
04974|                         {
04975|                             Name (RTLH, ResourceTemplate ()
04976|                             {
04977|                                 IRQ (Level, ActiveLow, Shared, _Y15)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04978|                                     {}
04979|                             })
04980|                             CreateWordField (RTLH, \_SB.LNKH._CRS._Y15._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4977
Line | AML source
--------------------------------------------------------------------------------
04974|                         {
04975|                             Name (RTLH, ResourceTemplate ()
04976|                             {
04977|                                 IRQ (Level, ActiveLow, Shared, _Y15)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04978|                                     {}
04979|                             })
04980|                             CreateWordField (RTLH, \_SB.LNKH._CRS._Y15._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4977
Line | AML source
--------------------------------------------------------------------------------
04974|                         {
04975|                             Name (RTLH, ResourceTemplate ()
04976|                             {
04977|                                 IRQ (Level, ActiveLow, Shared, _Y15)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04978|                                     {}
04979|                             })
04980|                             CreateWordField (RTLH, \_SB.LNKH._CRS._Y15._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 5678
Line | AML source
--------------------------------------------------------------------------------
05675|                                     Store (SBPC (0x03E8), Local0)
05676|                                     If (LNot (Local0))
05677|                                     {
05678|                                         Store (SBDW, Arg2)
     |                                                        ^
     | Remark 2146: Method Argument is never used    (Arg2)
05679|                                     }
05680|                                 }
05681| 
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 5694
Line | AML source
--------------------------------------------------------------------------------
05691|                             Store (Buffer (0x01)
05692|                                 {
05693|                                      0x00                                             /* . */
05694|                                 }, Local1)
     |                                        ^
     | Warning 3144: Method Local is set but never used    (Local1)
05695|                             If (LNot (Acquire (\_SB.PCI0.LPCB.EC.SMB0.SMTX, 0xFFFF)))
05696|                             {
05697|                                 If (LEqual (SPTR, 0x00))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 5705
Line | AML source
--------------------------------------------------------------------------------
05702|                                     Store (SBPC (0x03E8), Local0)
05703|                                     If (LNot (Local0))
05704|                                     {
05705|                                         Store (SBFR, Arg2)
     |                                                        ^
     | Remark 2146: Method Argument is never used    (Arg2)
05706|                                     }
05707|                                 }
05708| 
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 7414
Line | AML source
--------------------------------------------------------------------------------
07411|         {
07412|             \_SB.PCI0.RMCR ()
07413|             Store (0x07DC, OSYS) /* \OSYS */
07414|             If (CondRefOf (\_OSI, Local0))
     |                                       ^
     | Warning 3144: Method Local is set but never used    (Local0)
07415|             {
07416|                 If (_OSI ("Darwin"))
07417|                 {
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 7465
Line | AML source
--------------------------------------------------------------------------------
07462|         Method (PINI, 0, NotSerialized)
07463|         {
07464|             Store (0x07DC, OSYS) /* \OSYS */
07465|             If (CondRefOf (_OSI, Local0))
     |                                      ^
     | Warning 3144: Method Local is set but never used    (Local0)
07466|             {
07467|                 If (_OSI ("Darwin"))
07468|                 {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 7710
Line | AML source
--------------------------------------------------------------------------------
07707|         }
07708|     }
07709| 
07710|     Method (DTGP, 5, NotSerialized)
     |               ^
     | Remark 2146: Method Argument is never used    (Arg3)
07711|     {
07712|         If (LEqual (Arg0, ToUUID ("")))
07713|         {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 7735
Line | AML source
--------------------------------------------------------------------------------
07732|         Store (Buffer (0x01)
07733|             {
07734|                  0x00                                             /* . */
07735|             }, Arg4)
     |                  ^
     | Remark 2146: Method Argument is never used    (Arg4)
07736|         Return (Zero)
07737|     }
07738| 
================================================================================
Table DSDT (0) reassembly: Found 0 errors, 5 warnings, 29 remarks.


Checking ACPI table SSDT (#1)

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
32
Line | AML source
--------------------------------------------------------------------------------
00029|         Device (PRT0)
00030|         {
00031|             Name (_ADR, 0xFFFF)  // _ADR: Address
00032|             Method (_SDD, 1, NotSerialized)  // _SDD: Set Device Data
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00033|             {
00034|                 Name (GBU0, Buffer (0x07)
00035|                 {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 40
Line | AML source
--------------------------------------------------------------------------------
00037|                 })
00038|                 CreateByteField (GBU0, 0x00, GB00)
00039|                 CreateByteField (GBU0, 0x01, GB01)
00040|                 CreateByteField (GBU0, 0x02, GB02)
     |                                                ^
     | Remark 2089: Object is not referenced    (Name is within method [_SDD])
00041|                 CreateByteField (GBU0, 0x03, GB03)
00042|                 CreateByteField (GBU0, 0x04, GB04)
00043|                 CreateByteField (GBU0, 0x05, GB05)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 41
Line | AML source
--------------------------------------------------------------------------------
00038|                 CreateByteField (GBU0, 0x00, GB00)
00039|                 CreateByteField (GBU0, 0x01, GB01)
00040|                 CreateByteField (GBU0, 0x02, GB02)
00041|                 CreateByteField (GBU0, 0x03, GB03)
     |                                                ^
     | Remark 2089: Object is not referenced    (Name is within method [_SDD])
00042|                 CreateByteField (GBU0, 0x04, GB04)
00043|                 CreateByteField (GBU0, 0x05, GB05)
00044|                 CreateByteField (GBU0, 0x06, GB06)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 42
Line | AML source
--------------------------------------------------------------------------------
00039|                 CreateByteField (GBU0, 0x01, GB01)
00040|                 CreateByteField (GBU0, 0x02, GB02)
00041|                 CreateByteField (GBU0, 0x03, GB03)
00042|                 CreateByteField (GBU0, 0x04, GB04)
     |                                                ^
     | Remark 2089: Object is not referenced    (Name is within method [_SDD])
00043|                 CreateByteField (GBU0, 0x05, GB05)
00044|                 CreateByteField (GBU0, 0x06, GB06)
00045|                 If (LEqual (SizeOf (Arg0), 0x0200))
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 43
Line | AML source
--------------------------------------------------------------------------------
00040|                 CreateByteField (GBU0, 0x02, GB02)
00041|                 CreateByteField (GBU0, 0x03, GB03)
00042|                 CreateByteField (GBU0, 0x04, GB04)
00043|                 CreateByteField (GBU0, 0x05, GB05)
     |                                                ^
     | Remark 2089: Object is not referenced    (Name is within method [_SDD])
00044|                 CreateByteField (GBU0, 0x06, GB06)
00045|                 If (LEqual (SizeOf (Arg0), 0x0200))
00046|                 {
================================================================================
Table SSDT (1) reassembly: Found 0 errors, 0 warnings, 5 remarks.


Checking ACPI table SSDT (#2)

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 23
Line | AML source
--------------------------------------------------------------------------------
00020|  */
00021| DefinitionBlock ("/tmp/fwts_tmp_table_2305_SSDT_10.aml", "SSDT", 1, "APPLE ", "SmcDppt", 0x00001000)
00022| {
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] SyntaxCheckIASLCompilerAborted: Test 1, Compilation aborted early
due to a parser detected syntax error.

ADVICE: Some subsequent errors may not be detected because the compiler had to
terminate prematurely. If the compiler did not abort early then potentially
correct code may parse incorrectly producing some or many false positive errors.

Table SSDT (2) reassembly: Found 1 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#3)

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 618
Line | AML source
--------------------------------------------------------------------------------
00615|                     })
00616|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00617|                     {
00618|                         0x81, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 0, Buffer required)
00619|                         0x00, 
00620|                         0x00, 
00621|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 619
Line | AML source
--------------------------------------------------------------------------------
00616|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00617|                     {
00618|                         0x81, 
00619|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 1, Buffer required)
00620|                         0x00, 
00621|                         0x00, 
00622|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 620
Line | AML source
--------------------------------------------------------------------------------
00617|                     {
00618|                         0x81, 
00619|                         0x00, 
00620|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 2, Buffer required)
00621|                         0x00, 
00622|                         0x00, 
00623|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 621
Line | AML source
--------------------------------------------------------------------------------
00618|                         0x81, 
00619|                         0x00, 
00620|                         0x00, 
00621|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 3, Buffer required)
00622|                         0x00, 
00623|                         0x00, 
00624|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 622
Line | AML source
--------------------------------------------------------------------------------
00619|                         0x00, 
00620|                         0x00, 
00621|                         0x00, 
00622|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 4, Buffer required)
00623|                         0x00, 
00624|                         0x00, 
00625|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 623
Line | AML source
--------------------------------------------------------------------------------
00620|                         0x00, 
00621|                         0x00, 
00622|                         0x00, 
00623|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 5, Buffer required)
00624|                         0x00, 
00625|                         0x00, 
00626|                         0x31, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 624
Line | AML source
--------------------------------------------------------------------------------
00621|                         0x00, 
00622|                         0x00, 
00623|                         0x00, 
00624|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 6, Buffer required)
00625|                         0x00, 
00626|                         0x31, 
00627|                         0x1C, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 625
Line | AML source
--------------------------------------------------------------------------------
00622|                         0x00, 
00623|                         0x00, 
00624|                         0x00, 
00625|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 7, Buffer required)
00626|                         0x31, 
00627|                         0x1C, 
00628|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 626
Line | AML source
--------------------------------------------------------------------------------
00623|                         0x00, 
00624|                         0x00, 
00625|                         0x00, 
00626|                         0x31, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 8, Buffer required)
00627|                         0x1C, 
00628|                         0x00, 
00629|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 627
Line | AML source
--------------------------------------------------------------------------------
00624|                         0x00, 
00625|                         0x00, 
00626|                         0x31, 
00627|                         0x1C, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 9, Buffer required)
00628|                         0x00, 
00629|                         0x00, 
00630|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 628
Line | AML source
--------------------------------------------------------------------------------
00625|                         0x00, 
00626|                         0x31, 
00627|                         0x1C, 
00628|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 10, Buffer required)
00629|                         0x00, 
00630|                         0x00, 
00631|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 629
Line | AML source
--------------------------------------------------------------------------------
00626|                         0x31, 
00627|                         0x1C, 
00628|                         0x00, 
00629|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 11, Buffer required)
00630|                         0x00, 
00631|                         0x00, 
00632|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 630
Line | AML source
--------------------------------------------------------------------------------
00627|                         0x1C, 
00628|                         0x00, 
00629|                         0x00, 
00630|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 12, Buffer required)
00631|                         0x00, 
00632|                         0x00, 
00633|                         0x00
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 631
Line | AML source
--------------------------------------------------------------------------------
00628|                         0x00, 
00629|                         0x00, 
00630|                         0x00, 
00631|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 13, Buffer required)
00632|                         0x00, 
00633|                         0x00
00634|                     })
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 632
Line | AML source
--------------------------------------------------------------------------------
00629|                         0x00, 
00630|                         0x00, 
00631|                         0x00, 
00632|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 14, Buffer required)
00633|                         0x00
00634|                     })
00635|                     Name (MUXS, "EHCA")
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 633
Line | AML source
--------------------------------------------------------------------------------
00630|                         0x00, 
00631|                         0x00, 
00632|                         0x00, 
00633|                         0x00
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 15, Buffer required)
00634|                     })
00635|                     Name (MUXS, "EHCA")
00636|                 }
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 650
Line | AML source
--------------------------------------------------------------------------------
00647|                     })
00648|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00649|                     {
00650|                         0x81, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 0, Buffer required)
00651|                         0x00, 
00652|                         0x00, 
00653|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 651
Line | AML source
--------------------------------------------------------------------------------
00648|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00649|                     {
00650|                         0x81, 
00651|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 1, Buffer required)
00652|                         0x00, 
00653|                         0x00, 
00654|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 652
Line | AML source
--------------------------------------------------------------------------------
00649|                     {
00650|                         0x81, 
00651|                         0x00, 
00652|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 2, Buffer required)
00653|                         0x00, 
00654|                         0x00, 
00655|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 653
Line | AML source
--------------------------------------------------------------------------------
00650|                         0x81, 
00651|                         0x00, 
00652|                         0x00, 
00653|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 3, Buffer required)
00654|                         0x00, 
00655|                         0x00, 
00656|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 654
Line | AML source
--------------------------------------------------------------------------------
00651|                         0x00, 
00652|                         0x00, 
00653|                         0x00, 
00654|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 4, Buffer required)
00655|                         0x00, 
00656|                         0x00, 
00657|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 655
Line | AML source
--------------------------------------------------------------------------------
00652|                         0x00, 
00653|                         0x00, 
00654|                         0x00, 
00655|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 5, Buffer required)
00656|                         0x00, 
00657|                         0x00, 
00658|                         0x31, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 656
Line | AML source
--------------------------------------------------------------------------------
00653|                         0x00, 
00654|                         0x00, 
00655|                         0x00, 
00656|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 6, Buffer required)
00657|                         0x00, 
00658|                         0x31, 
00659|                         0x1C, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 657
Line | AML source
--------------------------------------------------------------------------------
00654|                         0x00, 
00655|                         0x00, 
00656|                         0x00, 
00657|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 7, Buffer required)
00658|                         0x31, 
00659|                         0x1C, 
00660|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 658
Line | AML source
--------------------------------------------------------------------------------
00655|                         0x00, 
00656|                         0x00, 
00657|                         0x00, 
00658|                         0x31, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 8, Buffer required)
00659|                         0x1C, 
00660|                         0x00, 
00661|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 659
Line | AML source
--------------------------------------------------------------------------------
00656|                         0x00, 
00657|                         0x00, 
00658|                         0x31, 
00659|                         0x1C, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 9, Buffer required)
00660|                         0x00, 
00661|                         0x00, 
00662|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 660
Line | AML source
--------------------------------------------------------------------------------
00657|                         0x00, 
00658|                         0x31, 
00659|                         0x1C, 
00660|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 10, Buffer required)
00661|                         0x00, 
00662|                         0x00, 
00663|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 661
Line | AML source
--------------------------------------------------------------------------------
00658|                         0x31, 
00659|                         0x1C, 
00660|                         0x00, 
00661|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 11, Buffer required)
00662|                         0x00, 
00663|                         0x00, 
00664|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 662
Line | AML source
--------------------------------------------------------------------------------
00659|                         0x1C, 
00660|                         0x00, 
00661|                         0x00, 
00662|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 12, Buffer required)
00663|                         0x00, 
00664|                         0x00, 
00665|                         0x00
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 663
Line | AML source
--------------------------------------------------------------------------------
00660|                         0x00, 
00661|                         0x00, 
00662|                         0x00, 
00663|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 13, Buffer required)
00664|                         0x00, 
00665|                         0x00
00666|                     })
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 664
Line | AML source
--------------------------------------------------------------------------------
00661|                         0x00, 
00662|                         0x00, 
00663|                         0x00, 
00664|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 14, Buffer required)
00665|                         0x00
00666|                     })
00667|                     Name (MUXS, "EHCB")
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 665
Line | AML source
--------------------------------------------------------------------------------
00662|                         0x00, 
00663|                         0x00, 
00664|                         0x00, 
00665|                         0x00
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 15, Buffer required)
00666|                     })
00667|                     Name (MUXS, "EHCB")
00668|                 }
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 682
Line | AML source
--------------------------------------------------------------------------------
00679|                     })
00680|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00681|                     {
00682|                         0x81, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 0, Buffer required)
00683|                         0x00, 
00684|                         0x00, 
00685|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 683
Line | AML source
--------------------------------------------------------------------------------
00680|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00681|                     {
00682|                         0x81, 
00683|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 1, Buffer required)
00684|                         0x00, 
00685|                         0x00, 
00686|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 684
Line | AML source
--------------------------------------------------------------------------------
00681|                     {
00682|                         0x81, 
00683|                         0x00, 
00684|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 2, Buffer required)
00685|                         0x00, 
00686|                         0x00, 
00687|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 685
Line | AML source
--------------------------------------------------------------------------------
00682|                         0x81, 
00683|                         0x00, 
00684|                         0x00, 
00685|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 3, Buffer required)
00686|                         0x00, 
00687|                         0x00, 
00688|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 686
Line | AML source
--------------------------------------------------------------------------------
00683|                         0x00, 
00684|                         0x00, 
00685|                         0x00, 
00686|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 4, Buffer required)
00687|                         0x00, 
00688|                         0x00, 
00689|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 687
Line | AML source
--------------------------------------------------------------------------------
00684|                         0x00, 
00685|                         0x00, 
00686|                         0x00, 
00687|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 5, Buffer required)
00688|                         0x00, 
00689|                         0x00, 
00690|                         0x30, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 688
Line | AML source
--------------------------------------------------------------------------------
00685|                         0x00, 
00686|                         0x00, 
00687|                         0x00, 
00688|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 6, Buffer required)
00689|                         0x00, 
00690|                         0x30, 
00691|                         0x1C, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 689
Line | AML source
--------------------------------------------------------------------------------
00686|                         0x00, 
00687|                         0x00, 
00688|                         0x00, 
00689|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 7, Buffer required)
00690|                         0x30, 
00691|                         0x1C, 
00692|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 690
Line | AML source
--------------------------------------------------------------------------------
00687|                         0x00, 
00688|                         0x00, 
00689|                         0x00, 
00690|                         0x30, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 8, Buffer required)
00691|                         0x1C, 
00692|                         0x00, 
00693|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 691
Line | AML source
--------------------------------------------------------------------------------
00688|                         0x00, 
00689|                         0x00, 
00690|                         0x30, 
00691|                         0x1C, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 9, Buffer required)
00692|                         0x00, 
00693|                         0x00, 
00694|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 692
Line | AML source
--------------------------------------------------------------------------------
00689|                         0x00, 
00690|                         0x30, 
00691|                         0x1C, 
00692|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 10, Buffer required)
00693|                         0x00, 
00694|                         0x00, 
00695|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 693
Line | AML source
--------------------------------------------------------------------------------
00690|                         0x30, 
00691|                         0x1C, 
00692|                         0x00, 
00693|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 11, Buffer required)
00694|                         0x00, 
00695|                         0x00, 
00696|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 694
Line | AML source
--------------------------------------------------------------------------------
00691|                         0x1C, 
00692|                         0x00, 
00693|                         0x00, 
00694|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 12, Buffer required)
00695|                         0x00, 
00696|                         0x00, 
00697|                         0x00
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 695
Line | AML source
--------------------------------------------------------------------------------
00692|                         0x00, 
00693|                         0x00, 
00694|                         0x00, 
00695|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 13, Buffer required)
00696|                         0x00, 
00697|                         0x00
00698|                     })
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 696
Line | AML source
--------------------------------------------------------------------------------
00693|                         0x00, 
00694|                         0x00, 
00695|                         0x00, 
00696|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 14, Buffer required)
00697|                         0x00
00698|                     })
00699|                 }
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 697
Line | AML source
--------------------------------------------------------------------------------
00694|                         0x00, 
00695|                         0x00, 
00696|                         0x00, 
00697|                         0x00
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 15, Buffer required)
00698|                     })
00699|                 }
00700| 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 713
Line | AML source
--------------------------------------------------------------------------------
00710|                     })
00711|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00712|                     {
00713|                         0x81, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 0, Buffer required)
00714|                         0x00, 
00715|                         0x00, 
00716|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 714
Line | AML source
--------------------------------------------------------------------------------
00711|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00712|                     {
00713|                         0x81, 
00714|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 1, Buffer required)
00715|                         0x00, 
00716|                         0x00, 
00717|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 715
Line | AML source
--------------------------------------------------------------------------------
00712|                     {
00713|                         0x81, 
00714|                         0x00, 
00715|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 2, Buffer required)
00716|                         0x00, 
00717|                         0x00, 
00718|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 716
Line | AML source
--------------------------------------------------------------------------------
00713|                         0x81, 
00714|                         0x00, 
00715|                         0x00, 
00716|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 3, Buffer required)
00717|                         0x00, 
00718|                         0x00, 
00719|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 717
Line | AML source
--------------------------------------------------------------------------------
00714|                         0x00, 
00715|                         0x00, 
00716|                         0x00, 
00717|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 4, Buffer required)
00718|                         0x00, 
00719|                         0x00, 
00720|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 718
Line | AML source
--------------------------------------------------------------------------------
00715|                         0x00, 
00716|                         0x00, 
00717|                         0x00, 
00718|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 5, Buffer required)
00719|                         0x00, 
00720|                         0x00, 
00721|                         0x30, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 719
Line | AML source
--------------------------------------------------------------------------------
00716|                         0x00, 
00717|                         0x00, 
00718|                         0x00, 
00719|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 6, Buffer required)
00720|                         0x00, 
00721|                         0x30, 
00722|                         0x1C, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 720
Line | AML source
--------------------------------------------------------------------------------
00717|                         0x00, 
00718|                         0x00, 
00719|                         0x00, 
00720|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 7, Buffer required)
00721|                         0x30, 
00722|                         0x1C, 
00723|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 721
Line | AML source
--------------------------------------------------------------------------------
00718|                         0x00, 
00719|                         0x00, 
00720|                         0x00, 
00721|                         0x30, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 8, Buffer required)
00722|                         0x1C, 
00723|                         0x00, 
00724|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 722
Line | AML source
--------------------------------------------------------------------------------
00719|                         0x00, 
00720|                         0x00, 
00721|                         0x30, 
00722|                         0x1C, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 9, Buffer required)
00723|                         0x00, 
00724|                         0x00, 
00725|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 723
Line | AML source
--------------------------------------------------------------------------------
00720|                         0x00, 
00721|                         0x30, 
00722|                         0x1C, 
00723|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 10, Buffer required)
00724|                         0x00, 
00725|                         0x00, 
00726|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 724
Line | AML source
--------------------------------------------------------------------------------
00721|                         0x30, 
00722|                         0x1C, 
00723|                         0x00, 
00724|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 11, Buffer required)
00725|                         0x00, 
00726|                         0x00, 
00727|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 725
Line | AML source
--------------------------------------------------------------------------------
00722|                         0x1C, 
00723|                         0x00, 
00724|                         0x00, 
00725|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 12, Buffer required)
00726|                         0x00, 
00727|                         0x00, 
00728|                         0x00
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 726
Line | AML source
--------------------------------------------------------------------------------
00723|                         0x00, 
00724|                         0x00, 
00725|                         0x00, 
00726|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 13, Buffer required)
00727|                         0x00, 
00728|                         0x00
00729|                     })
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 727
Line | AML source
--------------------------------------------------------------------------------
00724|                         0x00, 
00725|                         0x00, 
00726|                         0x00, 
00727|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 14, Buffer required)
00728|                         0x00
00729|                     })
00730|                 }
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 728
Line | AML source
--------------------------------------------------------------------------------
00725|                         0x00, 
00726|                         0x00, 
00727|                         0x00, 
00728|                         0x00
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 15, Buffer required)
00729|                     })
00730|                 }
00731| 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 744
Line | AML source
--------------------------------------------------------------------------------
00741|                     })
00742|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00743|                     {
00744|                         0x81, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 0, Buffer required)
00745|                         0x00, 
00746|                         0x00, 
00747|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 745
Line | AML source
--------------------------------------------------------------------------------
00742|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00743|                     {
00744|                         0x81, 
00745|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 1, Buffer required)
00746|                         0x00, 
00747|                         0x00, 
00748|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 746
Line | AML source
--------------------------------------------------------------------------------
00743|                     {
00744|                         0x81, 
00745|                         0x00, 
00746|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 2, Buffer required)
00747|                         0x00, 
00748|                         0x00, 
00749|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 747
Line | AML source
--------------------------------------------------------------------------------
00744|                         0x81, 
00745|                         0x00, 
00746|                         0x00, 
00747|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 3, Buffer required)
00748|                         0x00, 
00749|                         0x00, 
00750|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 748
Line | AML source
--------------------------------------------------------------------------------
00745|                         0x00, 
00746|                         0x00, 
00747|                         0x00, 
00748|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 4, Buffer required)
00749|                         0x00, 
00750|                         0x00, 
00751|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 749
Line | AML source
--------------------------------------------------------------------------------
00746|                         0x00, 
00747|                         0x00, 
00748|                         0x00, 
00749|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 5, Buffer required)
00750|                         0x00, 
00751|                         0x00, 
00752|                         0x31, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 750
Line | AML source
--------------------------------------------------------------------------------
00747|                         0x00, 
00748|                         0x00, 
00749|                         0x00, 
00750|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 6, Buffer required)
00751|                         0x00, 
00752|                         0x31, 
00753|                         0x1C, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 751
Line | AML source
--------------------------------------------------------------------------------
00748|                         0x00, 
00749|                         0x00, 
00750|                         0x00, 
00751|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 7, Buffer required)
00752|                         0x31, 
00753|                         0x1C, 
00754|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 752
Line | AML source
--------------------------------------------------------------------------------
00749|                         0x00, 
00750|                         0x00, 
00751|                         0x00, 
00752|                         0x31, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 8, Buffer required)
00753|                         0x1C, 
00754|                         0x00, 
00755|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 753
Line | AML source
--------------------------------------------------------------------------------
00750|                         0x00, 
00751|                         0x00, 
00752|                         0x31, 
00753|                         0x1C, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 9, Buffer required)
00754|                         0x00, 
00755|                         0x00, 
00756|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 754
Line | AML source
--------------------------------------------------------------------------------
00751|                         0x00, 
00752|                         0x31, 
00753|                         0x1C, 
00754|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 10, Buffer required)
00755|                         0x00, 
00756|                         0x00, 
00757|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 755
Line | AML source
--------------------------------------------------------------------------------
00752|                         0x31, 
00753|                         0x1C, 
00754|                         0x00, 
00755|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 11, Buffer required)
00756|                         0x00, 
00757|                         0x00, 
00758|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 756
Line | AML source
--------------------------------------------------------------------------------
00753|                         0x1C, 
00754|                         0x00, 
00755|                         0x00, 
00756|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 12, Buffer required)
00757|                         0x00, 
00758|                         0x00, 
00759|                         0x00
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 757
Line | AML source
--------------------------------------------------------------------------------
00754|                         0x00, 
00755|                         0x00, 
00756|                         0x00, 
00757|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 13, Buffer required)
00758|                         0x00, 
00759|                         0x00
00760|                     })
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 758
Line | AML source
--------------------------------------------------------------------------------
00755|                         0x00, 
00756|                         0x00, 
00757|                         0x00, 
00758|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 14, Buffer required)
00759|                         0x00
00760|                     })
00761|                 }
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 759
Line | AML source
--------------------------------------------------------------------------------
00756|                         0x00, 
00757|                         0x00, 
00758|                         0x00, 
00759|                         0x00
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 15, Buffer required)
00760|                     })
00761|                 }
00762| 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 775
Line | AML source
--------------------------------------------------------------------------------
00772|                     })
00773|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00774|                     {
00775|                         0x81, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 0, Buffer required)
00776|                         0x00, 
00777|                         0x00, 
00778|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 776
Line | AML source
--------------------------------------------------------------------------------
00773|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00774|                     {
00775|                         0x81, 
00776|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 1, Buffer required)
00777|                         0x00, 
00778|                         0x00, 
00779|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 777
Line | AML source
--------------------------------------------------------------------------------
00774|                     {
00775|                         0x81, 
00776|                         0x00, 
00777|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 2, Buffer required)
00778|                         0x00, 
00779|                         0x00, 
00780|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 778
Line | AML source
--------------------------------------------------------------------------------
00775|                         0x81, 
00776|                         0x00, 
00777|                         0x00, 
00778|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 3, Buffer required)
00779|                         0x00, 
00780|                         0x00, 
00781|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 779
Line | AML source
--------------------------------------------------------------------------------
00776|                         0x00, 
00777|                         0x00, 
00778|                         0x00, 
00779|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 4, Buffer required)
00780|                         0x00, 
00781|                         0x00, 
00782|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 780
Line | AML source
--------------------------------------------------------------------------------
00777|                         0x00, 
00778|                         0x00, 
00779|                         0x00, 
00780|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 5, Buffer required)
00781|                         0x00, 
00782|                         0x00, 
00783|                         0x31, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 781
Line | AML source
--------------------------------------------------------------------------------
00778|                         0x00, 
00779|                         0x00, 
00780|                         0x00, 
00781|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 6, Buffer required)
00782|                         0x00, 
00783|                         0x31, 
00784|                         0x1C, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 782
Line | AML source
--------------------------------------------------------------------------------
00779|                         0x00, 
00780|                         0x00, 
00781|                         0x00, 
00782|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 7, Buffer required)
00783|                         0x31, 
00784|                         0x1C, 
00785|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 783
Line | AML source
--------------------------------------------------------------------------------
00780|                         0x00, 
00781|                         0x00, 
00782|                         0x00, 
00783|                         0x31, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 8, Buffer required)
00784|                         0x1C, 
00785|                         0x00, 
00786|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 784
Line | AML source
--------------------------------------------------------------------------------
00781|                         0x00, 
00782|                         0x00, 
00783|                         0x31, 
00784|                         0x1C, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 9, Buffer required)
00785|                         0x00, 
00786|                         0x00, 
00787|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 785
Line | AML source
--------------------------------------------------------------------------------
00782|                         0x00, 
00783|                         0x31, 
00784|                         0x1C, 
00785|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 10, Buffer required)
00786|                         0x00, 
00787|                         0x00, 
00788|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 786
Line | AML source
--------------------------------------------------------------------------------
00783|                         0x31, 
00784|                         0x1C, 
00785|                         0x00, 
00786|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 11, Buffer required)
00787|                         0x00, 
00788|                         0x00, 
00789|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 787
Line | AML source
--------------------------------------------------------------------------------
00784|                         0x1C, 
00785|                         0x00, 
00786|                         0x00, 
00787|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 12, Buffer required)
00788|                         0x00, 
00789|                         0x00, 
00790|                         0x00
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 788
Line | AML source
--------------------------------------------------------------------------------
00785|                         0x00, 
00786|                         0x00, 
00787|                         0x00, 
00788|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 13, Buffer required)
00789|                         0x00, 
00790|                         0x00
00791|                     })
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 789
Line | AML source
--------------------------------------------------------------------------------
00786|                         0x00, 
00787|                         0x00, 
00788|                         0x00, 
00789|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 14, Buffer required)
00790|                         0x00
00791|                     })
00792|                 }
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 790
Line | AML source
--------------------------------------------------------------------------------
00787|                         0x00, 
00788|                         0x00, 
00789|                         0x00, 
00790|                         0x00
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 15, Buffer required)
00791|                     })
00792|                 }
00793| 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 806
Line | AML source
--------------------------------------------------------------------------------
00803|                     })
00804|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00805|                     {
00806|                         0x81, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 0, Buffer required)
00807|                         0x00, 
00808|                         0x00, 
00809|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 807
Line | AML source
--------------------------------------------------------------------------------
00804|                     Name (_PLD, Package (0x10)  // _PLD: Physical Location of Device
00805|                     {
00806|                         0x81, 
00807|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 1, Buffer required)
00808|                         0x00, 
00809|                         0x00, 
00810|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 808
Line | AML source
--------------------------------------------------------------------------------
00805|                     {
00806|                         0x81, 
00807|                         0x00, 
00808|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 2, Buffer required)
00809|                         0x00, 
00810|                         0x00, 
00811|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 809
Line | AML source
--------------------------------------------------------------------------------
00806|                         0x81, 
00807|                         0x00, 
00808|                         0x00, 
00809|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 3, Buffer required)
00810|                         0x00, 
00811|                         0x00, 
00812|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 810
Line | AML source
--------------------------------------------------------------------------------
00807|                         0x00, 
00808|                         0x00, 
00809|                         0x00, 
00810|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 4, Buffer required)
00811|                         0x00, 
00812|                         0x00, 
00813|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 811
Line | AML source
--------------------------------------------------------------------------------
00808|                         0x00, 
00809|                         0x00, 
00810|                         0x00, 
00811|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 5, Buffer required)
00812|                         0x00, 
00813|                         0x00, 
00814|                         0x31, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 812
Line | AML source
--------------------------------------------------------------------------------
00809|                         0x00, 
00810|                         0x00, 
00811|                         0x00, 
00812|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 6, Buffer required)
00813|                         0x00, 
00814|                         0x31, 
00815|                         0x1C, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 813
Line | AML source
--------------------------------------------------------------------------------
00810|                         0x00, 
00811|                         0x00, 
00812|                         0x00, 
00813|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 7, Buffer required)
00814|                         0x31, 
00815|                         0x1C, 
00816|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 814
Line | AML source
--------------------------------------------------------------------------------
00811|                         0x00, 
00812|                         0x00, 
00813|                         0x00, 
00814|                         0x31, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 8, Buffer required)
00815|                         0x1C, 
00816|                         0x00, 
00817|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 815
Line | AML source
--------------------------------------------------------------------------------
00812|                         0x00, 
00813|                         0x00, 
00814|                         0x31, 
00815|                         0x1C, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 9, Buffer required)
00816|                         0x00, 
00817|                         0x00, 
00818|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 816
Line | AML source
--------------------------------------------------------------------------------
00813|                         0x00, 
00814|                         0x31, 
00815|                         0x1C, 
00816|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 10, Buffer required)
00817|                         0x00, 
00818|                         0x00, 
00819|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 817
Line | AML source
--------------------------------------------------------------------------------
00814|                         0x31, 
00815|                         0x1C, 
00816|                         0x00, 
00817|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 11, Buffer required)
00818|                         0x00, 
00819|                         0x00, 
00820|                         0x00, 
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 818
Line | AML source
--------------------------------------------------------------------------------
00815|                         0x1C, 
00816|                         0x00, 
00817|                         0x00, 
00818|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 12, Buffer required)
00819|                         0x00, 
00820|                         0x00, 
00821|                         0x00
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 819
Line | AML source
--------------------------------------------------------------------------------
00816|                         0x00, 
00817|                         0x00, 
00818|                         0x00, 
00819|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 13, Buffer required)
00820|                         0x00, 
00821|                         0x00
00822|                     })
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 820
Line | AML source
--------------------------------------------------------------------------------
00817|                         0x00, 
00818|                         0x00, 
00819|                         0x00, 
00820|                         0x00, 
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 14, Buffer required)
00821|                         0x00
00822|                     })
00823|                     Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 821
Line | AML source
--------------------------------------------------------------------------------
00818|                         0x00, 
00819|                         0x00, 
00820|                         0x00, 
00821|                         0x00
     |                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Integer at index 15, Buffer required)
00822|                     })
00823|                     Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
00824|                     {
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

Table SSDT (3) reassembly: Found 112 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#4)

PASSED: Test 1, SSDT (4) reassembly, Found 0 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#5)

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 128
Line | AML source
--------------------------------------------------------------------------------
00125|             Store (0x00, GD47) /* External reference */
00126|         }
00127| 
00128|         Method (UTLK, 2, Serialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
00129|         {
00130|             Store (0x00, Local0)
00131|             If (LAnd (LEqual (GP47, 0x00), LEqual (GD47, 0x00)))
================================================================================
FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 143
Line | AML source
--------------------------------------------------------------------------------
00140| 
00141|                     Store (0x01, GD47) /* External reference */
00142|                     Store (0x00, Local1)
00143|                     Add (Timer, 0x00989680, Local2)
     |                              ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)
00144|                     While (LLessEqual (Timer, Local2))
00145|                     {
00146|                         If (LEqual (\_SB.PCI0.RP05.LACR, 0x00))
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 144
Line | AML source
--------------------------------------------------------------------------------
00141|                     Store (0x01, GD47) /* External reference */
00142|                     Store (0x00, Local1)
00143|                     Add (Timer, 0x00989680, Local2)
00144|                     While (LLessEqual (Timer, Local2))
     |                                            ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00145|                     {
00146|                         If (LEqual (\_SB.PCI0.RP05.LACR, 0x00))
00147|                         {
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 162
Line | AML source
--------------------------------------------------------------------------------
00159|                     }
00160| 
00161|                     Sleep (Arg1)
00162|                     While (LLessEqual (Timer, Local2))
     |                                            ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00163|                     {
00164|                         If (LNotEqual (\_SB.PCI0.RP05.UPSB.AVND, 0xFFFFFFFF))
00165|                         {
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 432
Line | AML source
--------------------------------------------------------------------------------
00429|                                 If (LEqual (And (Local0, 0x7F), 0x05)) {}
00430|                                 Store (0x03, \_SB.PCI0.RP05.PSTA)
00431|                                 Store (0x01, \_SB.PCI0.RP05.LDIS)
00432|                                 Add (Timer, 0x00989680, Local0)
     |                                          ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00433|                                 While (LLessEqual (Timer, Local0))
00434|                                 {
00435|                                     If (LEqual (\_SB.PCI0.RP05.LACR, 0x01))
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 433
Line | AML source
--------------------------------------------------------------------------------
00430|                                 Store (0x03, \_SB.PCI0.RP05.PSTA)
00431|                                 Store (0x01, \_SB.PCI0.RP05.LDIS)
00432|                                 Add (Timer, 0x00989680, Local0)
00433|                                 While (LLessEqual (Timer, Local0))
     |                                                        ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00434|                                 {
00435|                                     If (LEqual (\_SB.PCI0.RP05.LACR, 0x01))
00436|                                     {
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 482
Line | AML source
--------------------------------------------------------------------------------
00479|                                     {
00480|                                         Store (0x03, \_SB.PCI0.RP05.PSTA)
00481|                                         Store (0x01, \_SB.PCI0.RP05.LDIS)
00482|                                         Add (Timer, 0x00989680, Local0)
     |                                                  ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00483|                                         While (LLessEqual (Timer, Local0))
00484|                                         {
00485|                                             If (LEqual (\_SB.PCI0.RP05.LACR, 0x01))
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 483
Line | AML source
--------------------------------------------------------------------------------
00480|                                         Store (0x03, \_SB.PCI0.RP05.PSTA)
00481|                                         Store (0x01, \_SB.PCI0.RP05.LDIS)
00482|                                         Add (Timer, 0x00989680, Local0)
00483|                                         While (LLessEqual (Timer, Local0))
     |                                                                ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00484|                                         {
00485|                                             If (LEqual (\_SB.PCI0.RP05.LACR, 0x01))
00486|                                             {
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 518
Line | AML source
--------------------------------------------------------------------------------
00515| 
00516|                                                 Store (0x01, GD47) /* External reference */
00517|                                                 Store (0x00, Local1)
00518|                                                 Add (Timer, 0x00989680, Local2)
     |                                                          ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00519|                                                 While (LLessEqual (Timer, Local2))
00520|                                                 {
00521|                                                     If (LEqual (\_SB.PCI0.RP05.LACR, 0x00))
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 519
Line | AML source
--------------------------------------------------------------------------------
00516|                                                 Store (0x01, GD47) /* External reference */
00517|                                                 Store (0x00, Local1)
00518|                                                 Add (Timer, 0x00989680, Local2)
00519|                                                 While (LLessEqual (Timer, Local2))
     |                                                                        ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00520|                                                 {
00521|                                                     If (LEqual (\_SB.PCI0.RP05.LACR, 0x00))
00522|                                                     {
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 537
Line | AML source
--------------------------------------------------------------------------------
00534|                                                 }
00535| 
00536|                                                 Sleep (Arg1)
00537|                                                 While (LLessEqual (Timer, Local2))
     |                                                                        ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00538|                                                 {
00539|                                                     If (LNotEqual (\_SB.PCI0.RP05.UPSB.AVND, 0xFFFFFFFF))
00540|                                                     {
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 582
Line | AML source
--------------------------------------------------------------------------------
00579|                                                         }
00580| 
00581|                                                         Store (0x01, \_SB.PCI0.RP05.LRTN)
00582|                                                         Add (Timer, 0x00989680, Local2)
     |                                                                  ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00583|                                                         While (LLessEqual (Timer, Local2))
00584|                                                         {
00585|                                                             If (LEqual (\_SB.PCI0.RP05.LACR, 0x00))
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

FAILED [LOW] AMLAsmASL_MSG_TRUNCATION: Test 1, Assembler remark in line 583
Line | AML source
--------------------------------------------------------------------------------
00580| 
00581|                                                         Store (0x01, \_SB.PCI0.RP05.LRTN)
00582|                                                         Add (Timer, 0x00989680, Local2)
00583|                                                         While (LLessEqual (Timer, Local2))
     |                                                                                ^
     | Remark 2132: 64-bit return value will be truncated to 32 bits (DSDT version < 2)  
00584|                                                         {
00585|                                                             If (LEqual (\_SB.PCI0.RP05.LACR, 0x00))
00586|                                                             {
================================================================================

ADVICE: (for Remark #2132, ASL_MSG_TRUNCATION): A truncation on a integer value
has occurred. For example, a 32 bit value for a 16 bit timeout has been used.

Table SSDT (5) reassembly: Found 0 errors, 0 warnings, 13 remarks.


Checking ACPI table SSDT (#6)

PASSED: Test 1, SSDT (6) reassembly, Found 0 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#7)

PASSED: Test 1, SSDT (7) reassembly, Found 0 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#8)

PASSED: Test 1, SSDT (8) reassembly, Found 0 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#9)

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 123
Line | AML source
--------------------------------------------------------------------------------
00120| 
00121|             Store (CPDC (Arg0), Local0)
00122|             GCAP (Local0)
00123|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00124|         }
00125| 
00126|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
133
Line | AML source
--------------------------------------------------------------------------------
00130|             Return (Local0)
00131|         }
00132| 
00133|         Method (CPDC, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00134|         {
00135|             CreateDWordField (Arg0, 0x00, REVS)
00136|             CreateDWordField (Arg0, 0x04, SIZE)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 148
Line | AML source
--------------------------------------------------------------------------------
00145|             Return (COSC (ToUUID (""), REVS, SIZE, Local2))
00146|         }
00147| 
00148|         Method (COSC, 4, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg2)
00149|         {
00150|             CreateDWordField (Arg3, 0x00, STS0)
00151|             CreateDWordField (Arg3, 0x04, CAP0)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
148
Line | AML source
--------------------------------------------------------------------------------
00145|             Return (COSC (ToUUID (""), REVS, SIZE, Local2))
00146|         }
00147| 
00148|         Method (COSC, 4, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00149|         {
00150|             CreateDWordField (Arg3, 0x00, STS0)
00151|             CreateDWordField (Arg3, 0x04, CAP0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 151
Line | AML source
--------------------------------------------------------------------------------
00148|         Method (COSC, 4, NotSerialized)
00149|         {
00150|             CreateDWordField (Arg3, 0x00, STS0)
00151|             CreateDWordField (Arg3, 0x04, CAP0)
     |                                             ^
     | Remark 2089: Object is not referenced    (Name is within method [COSC])
00152|             CreateDWordField (Arg0, 0x00, IID0)
00153|             CreateDWordField (Arg0, 0x04, IID1)
00154|             CreateDWordField (Arg0, 0x08, IID2)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
177
Line | AML source
--------------------------------------------------------------------------------
00174|             Return (Arg3)
00175|         }
00176| 
00177|         Method (GCAP, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00178|         {
00179|             CreateDWordField (Arg0, 0x00, STS0)
00180|             CreateDWordField (Arg0, 0x04, CAP0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 207
Line | AML source
--------------------------------------------------------------------------------
00204|             Return (Zero)
00205|         }
00206| 
00207|         Method (DTGP, 5, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg3)
00208|         {
00209|             If (LEqual (Arg0, ToUUID ("")))
00210|             {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 232
Line | AML source
--------------------------------------------------------------------------------
00229|             Store (Buffer (0x01)
00230|                 {
00231|                      0x00                                             /* . */
00232|                 }, Arg4)
     |                      ^
     | Remark 2146: Method Argument is never used    (Arg4)
00233|             Return (Zero)
00234|         }
00235| 
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 257
Line | AML source
--------------------------------------------------------------------------------
00254|         {
00255|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00256|             GCAP (Local0)
00257|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00258|         }
00259| 
00260|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
297
Line | AML source
--------------------------------------------------------------------------------
00294|             Return (Zero)
00295|         }
00296| 
00297|         Method (APCT, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00298|         {
00299|             If (LAnd (And (CFGD, 0x7A), LNot (And (SDTL, 0x20))))
00300|             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
307
Line | AML source
--------------------------------------------------------------------------------
00304|             }
00305|         }
00306| 
00307|         Method (APPT, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00308|         {
00309|             If (LAnd (And (CFGD, 0x01), LNot (And (SDTL, 0x10))))
00310|             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 324
Line | AML source
--------------------------------------------------------------------------------
00321|         {
00322|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00323|             GCAP (Local0)
00324|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00325|         }
00326| 
00327|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 371
Line | AML source
--------------------------------------------------------------------------------
00368|         {
00369|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00370|             GCAP (Local0)
00371|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00372|         }
00373| 
00374|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 418
Line | AML source
--------------------------------------------------------------------------------
00415|         {
00416|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00417|             GCAP (Local0)
00418|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00419|         }
00420| 
00421|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 465
Line | AML source
--------------------------------------------------------------------------------
00462|         {
00463|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00464|             GCAP (Local0)
00465|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00466|         }
00467| 
00468|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 512
Line | AML source
--------------------------------------------------------------------------------
00509|         {
00510|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00511|             GCAP (Local0)
00512|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00513|         }
00514| 
00515|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 559
Line | AML source
--------------------------------------------------------------------------------
00556|         {
00557|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00558|             GCAP (Local0)
00559|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00560|         }
00561| 
00562|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

Table SSDT (9) reassembly: Found 0 errors, 8 warnings, 9 remarks.


================================================================================
4 passed, 183 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

stao: STAO Status Override Table test.
--------------------------------------------------------------------------------
ACPI STAO table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

srat: SRAT System Resource Affinity Table test.
--------------------------------------------------------------------------------
ACPI SRAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spmi: SPMI Service Processor Management Interface Description Table test.
--------------------------------------------------------------------------------
ACPI SPMI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spcr: SPCR Serial Port Console Redirection Table test.
--------------------------------------------------------------------------------
ACPI SPCR table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slit: SLIT System Locality Distance Information test.
--------------------------------------------------------------------------------
ACPI SLIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slic: SLIC Software Licensing Description Table test.
--------------------------------------------------------------------------------
ACPI SLIC table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

sbst: SBST Smart Battery Specification Table test.
--------------------------------------------------------------------------------
Test 1 of 1: SBST Smart Battery Specificiation Table test.
PASSED: Test 1, No issues found in SBST table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

rsdt: RSDT Root System Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDT Root System Description Table test.
PASSED: Test 1, No issues found in RSDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

rsdp: RSDP Root System Description Pointer test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDP Root System Description Pointer test.
PASSED: Test 1, No issues found in RSDP table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pcc: Processor Clocking Control (PCC) test.
--------------------------------------------------------------------------------
Test 1 of 1: Processor Clocking Control (PCC) test.
This test checks the sanity of the Processor Clocking Control as found on some
HP ProLiant machines. Most computers do not use this interface to control the
CPU clock frequency, so this test will be skipped.

This machine does not use Processor Clocking Control (PCC).

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

osilinux: Disassemble DSDT to check for _OSI("Linux").
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble DSDT to check for _OSI("Linux").
This is not strictly a failure mode, it just alerts one that this has been
defined in the DSDT and probably should be avoided since the Linux ACPI driver
matches onto the Windows _OSI strings
                {
                    Store (0x2710, OSYS) /* \OSYS */
                }
                If (\_OSI ("Linux"))
                {
                    Store (0x03E8, OSYS) /* \OSYS */
                }
                If (\_OSI ("Windows 2009"))
                {
                    Store (0x07D9, OSYS) /* \OSYS */
                }
                If (\_OSI ("Windows 2012"))
                {
                    Store (0x07DC, OSYS) /* \OSYS */
                }
            }
WARNING: Test 1, DSDT implements a deprecated _OSI("Linux") test.
                {
                    Store (0x2710, OSYS) /* \OSYS */
                }
                ElseIf (_OSI ("Linux"))
                {
                    Store (0x03E8, OSYS) /* \OSYS */
                }
                ElseIf (_OSI ("Windows 2009"))
                {
                    Store (0x07D9, OSYS) /* \OSYS */
                }
                ElseIf (_OSI ("Windows 2012"))
                {
                    Store (0x07DC, OSYS) /* \OSYS */
                }
            }
WARNING: Test 1, DSDT implements a deprecated _OSI("Linux") test.

================================================================================
0 passed, 0 failed, 2 warnings, 0 aborted, 0 skipped, 0 info only.
================================================================================

method: ACPI DSDT Method Semantic tests.
--------------------------------------------------------------------------------
Test 1 of 191: Test Method Names.
Found 2505 Objects 
PASSED: Test 1, Method names contain legal characters.

Test 2 of 191: Test _AEI.
SKIPPED: Test 2, Skipping test for non-existant object _AEI.

Test 3 of 191: Test _EVT (Event Method).
SKIPPED: Test 3, Skipping test for non-existant object _EVT.

Test 4 of 191: Test _DLM (Device Lock Mutex).
SKIPPED: Test 4, Skipping test for non-existant object _DLM.

Test 5 of 191: Test _PIC (Inform AML of Interrupt Model).
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.

Test 6 of 191: Test _CID (Compatible ID).
PASSED: Test 6, \_SB_.PCI0._CID returned an integer 0x030ad041 (EISA ID
PNP0A03).
FAILED [MEDIUM] MethodCIDInvalidString: Test 6, \_SB_.PCI0.SBUS.BUS0._CID
returned a string 'SMBUS' but it was not a valid PNP ID or a valid ACPI ID.
FAILED [MEDIUM] MethodCIDInvalidString: Test 6, \_SB_.PCI0.SBUS.BUS1._CID
returned a string 'SMBUS' but it was not a valid PNP ID or a valid ACPI ID.
PASSED: Test 6, \_SB_.PCI0.LPCB.HPET._CID returned an integer 0x010cd041 (EISA
ID PNP0C01).
FAILED [MEDIUM] MethodCIDInvalidString: Test 6, \_SB_.PCI0.LPCB.SMC_._CID
returned a string 'SMC-HURONRIVER' but it was not a valid PNP ID or a valid ACPI
ID.
FAILED [MEDIUM] MethodCIDInvalidString: Test 6, \_SB_.PCI0.LPCB.ALS0._CID
returned a string 'SMC-ALS' but it was not a valid PNP ID or a valid ACPI ID.
FAILED [MEDIUM] MethodCIDInvalidString: Test 6, \_SB_.PNLF._CID returned a
string 'BACKLIGHT' but it was not a valid PNP ID or a valid ACPI ID.

Test 7 of 191: Test _DDN (DOS Device Name).
SKIPPED: Test 7, Skipping test for non-existant object _DDN.

Test 8 of 191: Test _HID (Hardware ID).
PASSED: Test 8, \_SB_.PCI0._HID returned an integer 0x080ad041 (EISA ID
PNP0A08).
PASSED: Test 8, \_SB_.PCI0.LPCB.DMAC._HID returned an integer 0x0002d041 (EISA
ID PNP0200).
PASSED: Test 8, \_SB_.PCI0.LPCB.FWHD._HID returned an integer 0x0008d425 (EISA
ID INT0800).
PASSED: Test 8, \_SB_.PCI0.LPCB.HPET._HID returned an integer 0x0301d041 (EISA
ID PNP0103).
PASSED: Test 8, \_SB_.PCI0.LPCB.IPIC._HID returned an integer 0x0000d041 (EISA
ID PNP0000).
PASSED: Test 8, \_SB_.PCI0.LPCB.MATH._HID returned an integer 0x040cd041 (EISA
ID PNP0C04).
PASSED: Test 8, \_SB_.PCI0.LPCB.LDRC._HID returned an integer 0x020cd041 (EISA
ID PNP0C02).
PASSED: Test 8, \_SB_.PCI0.LPCB.RTC_._HID returned an integer 0x000bd041 (EISA
ID PNP0B00).
PASSED: Test 8, \_SB_.PCI0.LPCB.TIMR._HID returned an integer 0x0001d041 (EISA
ID PNP0100).
PASSED: Test 8, \_SB_.PCI0.LPCB.SMC_._HID returned an integer 0x01001006 (EISA
ID APP0001).
PASSED: Test 8, \_SB_.PCI0.LPCB.ALS0._HID returned a string 'ACPI0008' as
expected.
PASSED: Test 8, \_SB_.PCI0.LPCB.EC__._HID returned an integer 0x090cd041 (EISA
ID PNP0C09).
PASSED: Test 8, \_SB_.PCI0.LPCB.EC__.SMB0._HID returned a string 'ACPI0001' as
expected.
PASSED: Test 8, \_SB_.PCI0.LPCB.EC__.SMB0.SBS0._HID returned a string 'ACPI0002'
as expected.
PASSED: Test 8, \_SB_.PCI0.PDRC._HID returned an integer 0x020cd041 (EISA ID
PNP0C02).
PASSED: Test 8, \_SB_.MEM2._HID returned an integer 0x010cd041 (EISA ID
PNP0C01).
PASSED: Test 8, \_SB_.LNKA._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKB._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKC._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKD._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKE._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKF._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKG._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKH._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.BAT0._HID returned an integer 0x0a0cd041 (EISA ID
PNP0C0A).
PASSED: Test 8, \_SB_.ADP1._HID returned a string 'ACPI0003' as expected.
PASSED: Test 8, \_SB_.LID0._HID returned an integer 0x0d0cd041 (EISA ID
PNP0C0D).
PASSED: Test 8, \_SB_.PWRB._HID returned an integer 0x0c0cd041 (EISA ID
PNP0C0C).
PASSED: Test 8, \_SB_.PNLF._HID returned an integer 0x02001006 (EISA ID
APP0002).
PASSED: Test 8, \_SB_.SLPB._HID returned an integer 0x0e0cd041 (EISA ID
PNP0C0E).

Test 9 of 191: Test _HRV (Hardware Revision Number).
SKIPPED: Test 9, Skipping test for non-existant object _HRV.

Test 10 of 191: Test _MLS (Multiple Language String).
SKIPPED: Test 10, Skipping test for non-existant object _MLS.

Test 11 of 191: Test _PLD (Physical Device Location).
PASSED: Test 11, \_SB_.PCI0.XHC1.RHUB.HS01._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHC1.RHUB.HS02._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHC1.RHUB.HS03._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHC1.RHUB.HS05._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHC1.RHUB.SSP1._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHC1.RHUB.SSP2._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHC1.RHUB.SSP3._PLD correctly returned a sane
looking package.

Test 12 of 191: Test _SUB (Subsystem ID).
SKIPPED: Test 12, Skipping test for non-existant object _SUB.

Test 13 of 191: Test _SUN (Slot User Number).
PASSED: Test 13, \_SB_.PCI0.RP05.UPSB.DSB1._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.RP05.UPSB.DSB2._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.RP05.UPSB.DSB3._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.RP05.UPSB.DSB4._SUN correctly returned an integer.

Test 14 of 191: Test _STR (String).
PASSED: Test 14, \_SB_.PCI0.RP05.UPSB.DSB0.NHI0._STR correctly returned a buffer
of 24 elements.

Test 15 of 191: Test _UID (Unique ID).
PASSED: Test 15, \_SB_.PCI0._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPCB.LDRC._UID correctly returned sane looking value
0x00000002.
PASSED: Test 15, \_SB_.PCI0.LPCB.EC__._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.PDRC._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.MEM2._UID correctly returned sane looking value
0x00000002.
PASSED: Test 15, \_SB_.LNKA._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.LNKB._UID correctly returned sane looking value
0x00000002.
PASSED: Test 15, \_SB_.LNKC._UID correctly returned sane looking value
0x00000003.
PASSED: Test 15, \_SB_.LNKD._UID correctly returned sane looking value
0x00000004.
PASSED: Test 15, \_SB_.LNKE._UID correctly returned sane looking value
0x00000005.
PASSED: Test 15, \_SB_.LNKF._UID correctly returned sane looking value
0x00000006.
PASSED: Test 15, \_SB_.LNKG._UID correctly returned sane looking value
0x00000007.
PASSED: Test 15, \_SB_.LNKH._UID correctly returned sane looking value
0x00000008.
PASSED: Test 15, \_SB_.BAT0._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PNLF._UID correctly returned sane looking value
0x0000000f.

Test 16 of 191: Test _CDM (Clock Domain).
SKIPPED: Test 16, Skipping test for non-existant object _CDM.

Test 17 of 191: Test _CRS (Current Resource Settings).
PASSED: Test 17, \_SB_.PCI0._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.DMAC._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.FWHD._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.HPET._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.IPIC._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.MATH._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.LDRC._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.RTC_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.TIMR._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.SMC_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.EC__._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.PDRC._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.MEM2._CRS (32-bit Fixed Location Memory Range Descriptor)
looks sane.
PASSED: Test 17, \_SB_.LNKA._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKB._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKC._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKD._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKE._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKF._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKG._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKH._CRS (IRQ Descriptor) looks sane.

Test 18 of 191: Test _DSD (Device Specific Data).
SKIPPED: Test 18, Skipping test for non-existant object _DSD.

Test 19 of 191: Test _DIS (Disable).
PASSED: Test 19, \_SB_.LNKA._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKB._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKC._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKD._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKE._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKF._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKG._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKH._DIS returned no values as expected.

Test 20 of 191: Test _DMA (Direct Memory Access).
SKIPPED: Test 20, Skipping test for non-existant object _DMA.

Test 21 of 191: Test _FIX (Fixed Register Resource Provider).
SKIPPED: Test 21, Skipping test for non-existant object _FIX.

Test 22 of 191: Test _GSB (Global System Interrupt Base).
SKIPPED: Test 22, Skipping test for non-existant object _GSB.

Test 23 of 191: Test _HPP (Hot Plug Parameters).
SKIPPED: Test 23, Skipping test for non-existant object _HPP.

Test 24 of 191: Test _PRS (Possible Resource Settings).
PASSED: Test 24, \_SB_.LNKA._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKB._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKC._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKD._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKE._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKF._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKG._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKH._PRS (IRQ Descriptor) looks sane.

Test 25 of 191: Test _PXM (Proximity).
SKIPPED: Test 25, Skipping test for non-existant object _PXM.

Test 26 of 191: Test _CCA (Cache Coherency Attribute).
SKIPPED: Test 26, Skipping test for non-existant object _CCA.

Test 27 of 191: Test _EDL (Eject Device List).
SKIPPED: Test 27, Skipping test for non-existant object _EDL.

Test 28 of 191: Test _EJD (Ejection Dependent Device).
SKIPPED: Test 28, Skipping test for non-existant object _EJD.

Test 29 of 191: Test _EJ0 (Eject).
PASSED: Test 29, \_SB_.PCI0.RP05.UPSB.DSB0.NHI0._EJ0 returned no values as
expected.

Test 30 of 191: Test _EJ1 (Eject).
SKIPPED: Test 30, Skipping test for non-existant object _EJ1.

Test 31 of 191: Test _EJ2 (Eject).
SKIPPED: Test 31, Skipping test for non-existant object _EJ2.

Test 32 of 191: Test _EJ3 (Eject).
SKIPPED: Test 32, Skipping test for non-existant object _EJ3.

Test 33 of 191: Test _EJ4 (Eject).
SKIPPED: Test 33, Skipping test for non-existant object _EJ4.

Test 34 of 191: Test _LCK (Lock).
SKIPPED: Test 34, Skipping test for non-existant object _LCK.

Test 35 of 191: Test _RMV (Remove).
PASSED: Test 35, \_SB_.PCI0.RP03.ARPT._RMV correctly returned sane looking value
0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05._RMV correctly returned sane looking value
0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB._RMV correctly returned sane looking value
0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB0._RMV correctly returned sane looking
value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1._RMV correctly returned sane looking
value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0._RMV correctly returned sane
looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB0._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB0.DEV0._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB5._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB6._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB5._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB6._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB5._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB6._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2._RMV correctly returned sane looking
value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0._RMV correctly returned sane
looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB0._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB0.DEV0._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB3._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB3.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB4._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB4.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB5._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB6._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB0.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB3._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB3.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB4._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB4.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB5._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB6._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB5._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB6._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3._RMV correctly returned sane looking
value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0._RMV correctly returned sane
looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB0._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB0.DEV0._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB3._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB3.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB4._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB4.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB5._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB6._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB0.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB3._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB3.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB4._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB4.DEV0._RMV
correctly returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB5._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB6._RMV correctly
returned sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB5._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB6._RMV correctly returned
sane looking value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP05.UPSB.DSB4._RMV correctly returned sane looking
value 0x00000000.
PASSED: Test 35, \_SB_.PCI0.RP06.SSD0._RMV correctly returned sane looking value
0x00000000.
PASSED: Test 35, \_SB_.PCI0.XHC1.RHUB.SSP3._RMV correctly returned sane looking
value 0x00000000.

Test 36 of 191: Test _STA (Status).
PASSED: Test 36, \_SB_.PCI0.LPCB.HPET._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPCB.SMC_._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.PCI0.LPCB.ALS0._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPCB.EC__.SMB0._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.RP02._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP03._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP03.ARPT._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB0._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB0._STA correctly returned
sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB0.DEV0._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3._STA correctly returned
sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB0._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB0.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB5._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB6._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4._STA correctly returned
sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB5._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB6._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB5._STA correctly returned
sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB6._STA correctly returned
sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB0._STA correctly returned
sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB0.DEV0._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3._STA correctly returned
sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB0._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB0.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB3._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB3.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB4._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB4.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB5._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB6._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4._STA correctly returned
sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB0._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB0.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB3._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB3.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB4._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB4.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB5._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB6._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB5._STA correctly returned
sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB6._STA correctly returned
sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB0._STA correctly returned
sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB0.DEV0._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3._STA correctly returned
sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB0._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB0.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB3._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB3.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB4._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB4.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB5._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB6._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4._STA correctly returned
sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB0._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB0.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB3._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB3.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB4._STA correctly
returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB4.DEV0._STA
correctly returned sane looking value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB5._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB6._STA correctly
returned sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB5._STA correctly returned
sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB6._STA correctly returned
sane looking value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.RP05.UPSB.DSB4._STA correctly returned sane looking
value 0x00000009.
PASSED: Test 36, \_SB_.PCI0.HDAU._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.LNKA._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKB._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKC._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKD._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKE._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKF._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKG._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKH._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.BAT0._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PNLF._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.SLPB._STA correctly returned sane looking value
0x0000000b.

Test 37 of 191: Test _DEP (Operational Region Dependencies).
SKIPPED: Test 37, Skipping test for non-existant object _DEP.

Test 38 of 191: Test _BDN (BIOS Dock Name).
SKIPPED: Test 38, Skipping test for non-existant object _BDN.

Test 39 of 191: Test _BBN (Base Bus Number).
PASSED: Test 39, \_SB_.PCI0._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP02._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP03._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB0._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB0._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB0._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB5._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB6._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB5._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB6._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB5._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB6._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB0._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB0._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB3._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB4._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB5._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB6._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB0._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB3._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB4._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB5._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB6._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB5._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB6._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB0._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB0._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB3._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB4._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB5._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB6._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB0._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB3._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB4._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB5._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB6._BBN correctly
returned an integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB5._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB6._BBN correctly returned an
integer.
PASSED: Test 39, \_SB_.PCI0.RP05.UPSB.DSB4._BBN correctly returned an integer.

Test 40 of 191: Test _DCK (Dock).
SKIPPED: Test 40, Skipping test for non-existant object _DCK.

Test 41 of 191: Test _INI (Initialize).
PASSED: Test 41, \_SB_.PCI0._INI returned no values as expected.
PASSED: Test 41, \_SB_._INI returned no values as expected.

Test 42 of 191: Test _GLK (Global Lock).
SKIPPED: Test 42, Skipping test for non-existant object _GLK.

Test 43 of 191: Test _SEG (Segment).
SKIPPED: Test 43, Skipping test for non-existant object _SEG.

Test 44 of 191: Test _OFF (Set resource off).
SKIPPED: Test 44, Skipping test for non-existant object _OFF.

Test 45 of 191: Test _ON (Set resource on).
SKIPPED: Test 45, Skipping test for non-existant object _ON.

Test 46 of 191: Test _DSW (Device Sleep Wake).
SKIPPED: Test 46, Skipping test for non-existant object _DSW.

Test 47 of 191: Test _IRC (In Rush Current).
SKIPPED: Test 47, Skipping test for non-existant object _IRC.

Test 48 of 191: Test _PRE (Power Resources for Enumeration).
SKIPPED: Test 48, Skipping test for non-existant object _PRE.

Test 49 of 191: Test _PR0 (Power Resources for D0).
SKIPPED: Test 49, Skipping test for non-existant object _PR0.

Test 50 of 191: Test _PR1 (Power Resources for D1).
SKIPPED: Test 50, Skipping test for non-existant object _PR1.

Test 51 of 191: Test _PR2 (Power Resources for D2).
SKIPPED: Test 51, Skipping test for non-existant object _PR2.

Test 52 of 191: Test _PR3 (Power Resources for D3).
SKIPPED: Test 52, Skipping test for non-existant object _PR3.

Test 53 of 191: Test _PRW (Power Resources for Wake).
PASSED: Test 53, \_SB_.PCI0.P0P2._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.LPCB.EC__._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.HDEF._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP01._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP02._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP03._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP03.ARPT._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.RP05._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP06._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.XHC1._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.ADP1._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.LID0._PRW correctly returned a sane looking package.

Test 54 of 191: Test _PS0 (Power State 0).
PASSED: Test 54, \_SB_.PCI0.HDEF._PS0 returned no values as expected.
PASSED: Test 54, \_SB_.PCI0.RP03._PS0 returned no values as expected.
PASSED: Test 54, \_SB_.PCI0.RP06._PS0 returned no values as expected.
PASSED: Test 54, \_SB_.PCI0.XHC1._PS0 returned no values as expected.

Test 55 of 191: Test _PS1 (Power State 1).
SKIPPED: Test 55, Skipping test for non-existant object _PS1.

Test 56 of 191: Test _PS2 (Power State 2).
SKIPPED: Test 56, Skipping test for non-existant object _PS2.

Test 57 of 191: Test _PS3 (Power State 3).
PASSED: Test 57, \_SB_.PCI0.HDEF._PS3 returned no values as expected.
PASSED: Test 57, \_SB_.PCI0.RP03._PS3 returned no values as expected.
PASSED: Test 57, \_SB_.PCI0.RP06._PS3 returned no values as expected.
PASSED: Test 57, \_SB_.PCI0.XHC1._PS3 returned no values as expected.

Test 58 of 191: Test _PSC (Power State Current).
SKIPPED: Test 58, Skipping test for non-existant object _PSC.

Test 59 of 191: Test _PSE (Power State for Enumeration).
SKIPPED: Test 59, Skipping test for non-existant object _PSE.

Test 60 of 191: Test _PSW (Power State Wake).
PASSED: Test 60, \_SB_.ADP1._PSW returned no values as expected.
PASSED: Test 60, \_SB_.LID0._PSW returned no values as expected.

Test 61 of 191: Test _S1D (S1 Device State).
SKIPPED: Test 61, Skipping test for non-existant object _S1D.

Test 62 of 191: Test _S2D (S2 Device State).
SKIPPED: Test 62, Skipping test for non-existant object _S2D.

Test 63 of 191: Test _S3D (S3 Device State).
SKIPPED: Test 63, Skipping test for non-existant object _S3D.

Test 64 of 191: Test _S4D (S4 Device State).
SKIPPED: Test 64, Skipping test for non-existant object _S4D.

Test 65 of 191: Test _S0W (S0 Device Wake State).
SKIPPED: Test 65, Skipping test for non-existant object _S0W.

Test 66 of 191: Test _S1W (S1 Device Wake State).
SKIPPED: Test 66, Skipping test for non-existant object _S1W.

Test 67 of 191: Test _S2W (S2 Device Wake State).
SKIPPED: Test 67, Skipping test for non-existant object _S2W.

Test 68 of 191: Test _S3W (S3 Device Wake State).
SKIPPED: Test 68, Skipping test for non-existant object _S3W.

Test 69 of 191: Test _S4W (S4 Device Wake State).
SKIPPED: Test 69, Skipping test for non-existant object _S4W.

Test 70 of 191: Test _RST (Device Reset).
SKIPPED: Test 70, Skipping test for non-existant object _RST.

Test 71 of 191: Test _PRR (Power Resource for Reset).
SKIPPED: Test 71, Skipping test for non-existant object _PRR.

Test 72 of 191: Test _S0_ (S0 System State).
\_S0_ PM1a_CNT.SLP_TYP value: 0x00000000
\_S0_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 72, \_S0_ correctly returned a sane looking package.

Test 73 of 191: Test _S1_ (S1 System State).
SKIPPED: Test 73, Skipping test for non-existant object _S1_.

Test 74 of 191: Test _S2_ (S2 System State).
SKIPPED: Test 74, Skipping test for non-existant object _S2_.

Test 75 of 191: Test _S3_ (S3 System State).
\_S3_ PM1a_CNT.SLP_TYP value: 0x00000005
\_S3_ PM1b_CNT.SLP_TYP value: 0x00000005
PASSED: Test 75, \_S3_ correctly returned a sane looking package.

Test 76 of 191: Test _S4_ (S4 System State).
\_S4_ PM1a_CNT.SLP_TYP value: 0x00000006
\_S4_ PM1b_CNT.SLP_TYP value: 0x00000006
PASSED: Test 76, \_S4_ correctly returned a sane looking package.

Test 77 of 191: Test _S5_ (S5 System State).
\_S5_ PM1a_CNT.SLP_TYP value: 0x00000007
\_S5_ PM1b_CNT.SLP_TYP value: 0x00000007
PASSED: Test 77, \_S5_ correctly returned a sane looking package.

Test 78 of 191: Test _SWS (System Wake Source).
SKIPPED: Test 78, Skipping test for non-existant object _SWS.

Test 79 of 191: Test _PSS (Performance Supported States).
\_PR_.CPU0._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      2601    28000    10        10
   1      2600    28000    10        10
   2      2500    26574    10        10
   3      2200    22459    10        10
   4      2000    19853    10        10
   5      1800    17601    10        10
   6      1500    14027    10        10
   7      1300    12007    10        10
   8      1100     9839    10        10
   9       900     7769    10        10
  10       754     5792    10        10
PASSED: Test 79, \_PR_.CPU0._PSS correctly returned a sane looking package.

Test 80 of 191: Test _CPC (Continuous Performance Control).
SKIPPED: Test 80, Skipping test for non-existant object _CPC.

Test 81 of 191: Test _CSD (C State Dependencies).
SKIPPED: Test 81, Skipping test for non-existant object _CSD.

Test 82 of 191: Test _CST (C States).
SKIPPED: Test 82, Skipping test for non-existant object _CST.

Test 83 of 191: Test _PCT (Performance Control).
PASSED: Test 83, \_PR_.CPU0._PCT correctly returned a sane looking package.

Test 84 of 191: Test _PDL (P-State Depth Limit).
SKIPPED: Test 84, Skipping test for non-existant object _PDL.

Test 85 of 191: Test _PPC (Performance Present Capabilities).
PASSED: Test 85, \_PR_.CPU0._PPC correctly returned an integer.

Test 86 of 191: Test _PPE (Polling for Platform Error).
SKIPPED: Test 86, Skipping test for non-existant object _PPE.

Test 87 of 191: Test _PSD (Power State Dependencies).
PASSED: Test 87, \_PR_.CPU0._PSD correctly returned a sane looking package.

Test 88 of 191: Test _PTC (Processor Throttling Control).
SKIPPED: Test 88, Skipping test for non-existant object _PTC.

Test 89 of 191: Test _TDL (T-State Depth Limit).
SKIPPED: Test 89, Skipping test for non-existant object _TDL.

Test 90 of 191: Test _TPC (Throttling Present Capabilities).
SKIPPED: Test 90, Skipping test for non-existant object _TPC.

Test 91 of 191: Test _TSD (Throttling State Dependencies).
SKIPPED: Test 91, Skipping test for non-existant object _TSD.

Test 92 of 191: Test _TSS (Throttling Supported States).
SKIPPED: Test 92, Skipping test for non-existant object _TSS.

Test 93 of 191: Test _PUR (Processor Utilization Request).
SKIPPED: Test 93, Skipping test for non-existant object _PUR.

Test 94 of 191: Test _MSG (Message).
SKIPPED: Test 94, Skipping test for non-existant object _MSG.

Test 95 of 191: Test _SST (System Status).
SKIPPED: Test 95, Skipping test for non-existant object _SST.

Test 96 of 191: Test _ALC (Ambient Light Colour Chromaticity).
SKIPPED: Test 96, Skipping test for non-existant object _ALC.

Test 97 of 191: Test _ALI (Ambient Light Illuminance).
PASSED: Test 97, \_SB_.PCI0.LPCB.ALS0._ALI correctly returned an integer.

Test 98 of 191: Test _ALT (Ambient Light Temperature).
SKIPPED: Test 98, Skipping test for non-existant object _ALT.

Test 99 of 191: Test _ALP (Ambient Light Polling).
SKIPPED: Test 99, Skipping test for non-existant object _ALP.

Test 100 of 191: Test _ALR (Ambient Light Response).
PASSED: Test 100, \_SB_.PCI0.LPCB.ALS0._ALR correctly returned a sane looking
package.

Test 101 of 191: Test _LID (Lid Status).
PASSED: Test 101, \_SB_.LID0._LID correctly returned sane looking value
0x00000000.

Test 102 of 191: Test _GTF (Get Task File).
FAILED [MEDIUM] Method_GTFBadBufferSize: Test 102,
\_SB_.PCI0.RP06.SSD0.PRT0._GTF should return a buffer with size of multiple of
7.

Test 103 of 191: Test _GTM (Get Timing Mode).
SKIPPED: Test 103, Skipping test for non-existant object _GTM.

Test 104 of 191: Test _MBM (Memory Bandwidth Monitoring Data).
SKIPPED: Test 104, Skipping test for non-existant object _MBM.

Test 105 of 191: Test _UPC (USB Port Capabilities).
PASSED: Test 105, \_SB_.PCI0.XHC1.RHUB.HS01._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHC1.RHUB.HS02._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHC1.RHUB.HS03._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHC1.RHUB.HS05._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHC1.RHUB.SSP1._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHC1.RHUB.SSP2._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHC1.RHUB.SSP3._UPC correctly returned a sane
looking package.

Test 106 of 191: Test _UPD (User Presence Detect).
SKIPPED: Test 106, Skipping test for non-existant object _UPD.

Test 107 of 191: Test _UPP (User Presence Polling).
SKIPPED: Test 107, Skipping test for non-existant object _UPP.

Test 108 of 191: Test _GCP (Get Capabilities).
SKIPPED: Test 108, Skipping test for non-existant object _GCP.

Test 109 of 191: Test _GRT (Get Real Time).
SKIPPED: Test 109, Skipping test for non-existant object _GRT.

Test 110 of 191: Test _GWS (Get Wake Status).
SKIPPED: Test 110, Skipping test for non-existant object _GWS.

Test 111 of 191: Test _CWS (Clear Wake Status).
SKIPPED: Test 111, Skipping test for non-existant object _CWS.

Test 112 of 191: Test _STP (Set Expired Timer Wake Policy).
SKIPPED: Test 112, Skipping test for non-existant object _STP.

Test 113 of 191: Test _STV (Set Timer Value).
SKIPPED: Test 113, Skipping test for non-existant object _STV.

Test 114 of 191: Test _TIP (Expired Timer Wake Policy).
SKIPPED: Test 114, Skipping test for non-existant object _TIP.

Test 115 of 191: Test _TIV (Timer Values).
SKIPPED: Test 115, Skipping test for non-existant object _TIV.

Test 116 of 191: Test _SBS (Smart Battery Subsystem).
PASSED: Test 116, \_SB_.PCI0.LPCB.EC__.SMB0.SBS0._SBS correctly returned value 1
Maximum 1 Smart Battery, system manager/selector present

Test 117 of 191: Test _BCT (Battery Charge Time).
SKIPPED: Test 117, Skipping test for non-existant object _BCT.

Test 118 of 191: Test _BIF (Battery Information).
PASSED: Test 118, \_SB_.BAT0._BIF correctly returned a sane looking package.

Test 119 of 191: Test _BIX (Battery Information Extended).
SKIPPED: Test 119, Skipping test for non-existant object _BIX.

Test 120 of 191: Test _BMA (Battery Measurement Averaging).
SKIPPED: Test 120, Skipping test for non-existant object _BMA.

Test 121 of 191: Test _BMC (Battery Maintenance Control).
SKIPPED: Test 121, Skipping test for non-existant object _BMC.

Test 122 of 191: Test _BMD (Battery Maintenance Data).
SKIPPED: Test 122, Skipping test for non-existant object _BMD.

Test 123 of 191: Test _BMS (Battery Measurement Sampling Time).
SKIPPED: Test 123, Skipping test for non-existant object _BMS.

Test 124 of 191: Test _BST (Battery Status).
PASSED: Test 124, \_SB_.BAT0._BST correctly returned a sane looking package.

Test 125 of 191: Test _BTP (Battery Trip Point).
SKIPPED: Test 125, Skipping test for non-existant object _BTP.

Test 126 of 191: Test _BTH (Battery Throttle Limit).
SKIPPED: Test 126, Skipping test for non-existant object _BTH.

Test 127 of 191: Test _BTM (Battery Time).
SKIPPED: Test 127, Skipping test for non-existant object _BTM.

Test 128 of 191: Test _PCL (Power Consumer List).
PASSED: Test 128, \_SB_.BAT0._PCL returned a sane package of 1 references.
FAILED [CRITICAL] AETtype: Test 128, Detected error 'Type' when evaluating
'\_SB_.ADP1._PCL'.

ADVICE: The type of an object is incorrect and does not match the expected type.
ACPI will generally abort execution of the AML op-code that causes this error.


Test 129 of 191: Test _PIF (Power Source Information).
SKIPPED: Test 129, Skipping test for non-existant object _PIF.

Test 130 of 191: Test _PRL (Power Source Redundancy List).
SKIPPED: Test 130, Skipping test for non-existant object _PRL.

Test 131 of 191: Test _PSR (Power Source).
PASSED: Test 131, \_SB_.ADP1._PSR correctly returned sane looking value
0x00000000.

Test 132 of 191: Test _GAI (Get Averaging Level).
SKIPPED: Test 132, Skipping test for non-existant object _GAI.

Test 133 of 191: Test _GHL (Get Harware Limit).
SKIPPED: Test 133, Skipping test for non-existant object _GHL.

Test 134 of 191: Test _PMD (Power Meter Devices).
SKIPPED: Test 134, Skipping test for non-existant object _PMD.

Test 135 of 191: Test _PMM (Power Meter Measurement).
SKIPPED: Test 135, Skipping test for non-existant object _PMM.

Test 136 of 191: Test _FIF (Fan Information).
SKIPPED: Test 136, Skipping test for non-existant object _FIF.

Test 137 of 191: Test _FPS (Fan Performance States).
SKIPPED: Test 137, Skipping test for non-existant object _FPS.

Test 138 of 191: Test _FSL (Fan Set Level).
SKIPPED: Test 138, Skipping test for non-existant object _FSL.

Test 139 of 191: Test _FST (Fan Status).
SKIPPED: Test 139, Skipping test for non-existant object _FST.

Test 140 of 191: Test _ACx (Active Cooling).
SKIPPED: Test 140, Skipping test for non-existant object _AC0.

SKIPPED: Test 140, Skipping test for non-existant object _AC1.

SKIPPED: Test 140, Skipping test for non-existant object _AC2.

SKIPPED: Test 140, Skipping test for non-existant object _AC3.

SKIPPED: Test 140, Skipping test for non-existant object _AC4.

SKIPPED: Test 140, Skipping test for non-existant object _AC5.

SKIPPED: Test 140, Skipping test for non-existant object _AC6.

SKIPPED: Test 140, Skipping test for non-existant object _AC7.

SKIPPED: Test 140, Skipping test for non-existant object _AC8.

SKIPPED: Test 140, Skipping test for non-existant object _AC9.


Test 141 of 191: Test _ART (Active Cooling Relationship Table).
SKIPPED: Test 141, Skipping test for non-existant object _ART.

Test 142 of 191: Test _CRT (Critical Trip Point).
SKIPPED: Test 142, Skipping test for non-existant object _CRT.

Test 143 of 191: Test _CR3 (Warm/Standby Temperature).
SKIPPED: Test 143, Skipping test for non-existant object _CR3.

Test 144 of 191: Test _DTI (Device Temperature Indication).
SKIPPED: Test 144, Skipping test for non-existant object _DTI.

Test 145 of 191: Test _HOT (Hot Temperature).
SKIPPED: Test 145, Skipping test for non-existant object _HOT.

Test 146 of 191: Test _MTL (Minimum Throttle Limit).
SKIPPED: Test 146, Skipping test for non-existant object _MTL.

Test 147 of 191: Test _NTT (Notification Temp Threshold).
SKIPPED: Test 147, Skipping test for non-existant object _NTT.

Test 148 of 191: Test _PSL (Passive List).
SKIPPED: Test 148, Skipping test for non-existant object _PSL.

Test 149 of 191: Test _PSV (Passive Temp).
SKIPPED: Test 149, Skipping test for non-existant object _PSV.

Test 150 of 191: Test _RTV (Relative Temp Values).
SKIPPED: Test 150, Skipping test for non-existant object _RTV.

Test 151 of 191: Test _SCP (Set Cooling Policy).
SKIPPED: Test 151, Skipping test for non-existant object _DTI.

Test 152 of 191: Test _TC1 (Thermal Constant 1).
SKIPPED: Test 152, Skipping test for non-existant object _TC1.

Test 153 of 191: Test _TC2 (Thermal Constant 2).
SKIPPED: Test 153, Skipping test for non-existant object _TC2.

Test 154 of 191: Test _TFP (Thermal fast Sampling Period).
SKIPPED: Test 154, Skipping test for non-existant object _TFP.

Test 155 of 191: Test _TMP (Thermal Zone Current Temp).
SKIPPED: Test 155, Skipping test for non-existant object _TMP.

Test 156 of 191: Test _TPT (Trip Point Temperature).
SKIPPED: Test 156, Skipping test for non-existant object _TPT.

Test 157 of 191: Test _TRT (Thermal Relationship Table).
SKIPPED: Test 157, Skipping test for non-existant object _TRT.

Test 158 of 191: Test _TSN (Thermal Sensor Device).
SKIPPED: Test 158, Skipping test for non-existant object _TSN.

Test 159 of 191: Test _TSP (Thermal Sampling Period).
SKIPPED: Test 159, Skipping test for non-existant object _TSP.

Test 160 of 191: Test _TST (Temperature Sensor Threshold).
SKIPPED: Test 160, Skipping test for non-existant object _TST.

Test 161 of 191: Test _TZD (Thermal Zone Devices).
SKIPPED: Test 161, Skipping test for non-existant object _TZD.

Test 162 of 191: Test _TZM (Thermal Zone member).
SKIPPED: Test 162, Skipping test for non-existant object _TZM.

Test 163 of 191: Test _TZP (Thermal Zone Polling).
SKIPPED: Test 163, Skipping test for non-existant object _TZP.

Test 164 of 191: Test _GPE (General Purpose Events).
PASSED: Test 164, \_SB_.PCI0.LPCB.EC__._GPE returned an integer 0x0000004e
PASSED: Test 164, \_SB_.PCI0.RP03.ARPT._GPE returned an integer 0x0000005b
PASSED: Test 164, \_SB_.PCI0.RP05.UPSB.DSB0.NHI0._GPE returned an integer
0x0000004d
PASSED: Test 164, \_SB_.PCI0.XHC1._GPE returned an integer 0x0000006d
PASSED: Test 164, \_SB_.PCI0.XHC1.RHUB.SSP3._GPE returned an integer 0x0000003b

Test 165 of 191: Test _EC (EC Offset Query).
SKIPPED: Test 165, Skipping test for non-existant object _EC.

Test 166 of 191: Test _PTS (Prepare to Sleep).
Test _PTS(1).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(2).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(3).
ACPICA Exception AE_AML_INFINITE_LOOP during execution of method CMPE
WARNING: Test 166, Detected an infinite loop when evaluating method '\_PTS'. 

ADVICE: This may occur because we are emulating the execution in this test
environment and cannot handshake with the embedded controller or jump to the
BIOS via SMIs. However, the fact that AML code spins forever means that lockup
conditions are not being checked for in the AML bytecode.


Test _PTS(4).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(5).
PASSED: Test 166, \_PTS returned no values as expected.


Test 167 of 191: Test _TTS (Transition to State).
Test _TTS(1) Transition To State S1.
PASSED: Test 167, \_TTS returned no values as expected.

Test _TTS(2) Transition To State S2.
PASSED: Test 167, \_TTS returned no values as expected.

Test _TTS(3) Transition To State S3.
PASSED: Test 167, \_TTS returned no values as expected.

Test _TTS(4) Transition To State S4.
PASSED: Test 167, \_TTS returned no values as expected.

Test _TTS(5) Transition To State S5.
PASSED: Test 167, \_TTS returned no values as expected.


Test 168 of 191: Test _S0 (System S0 State).
SKIPPED: Test 168, Skipping test for non-existant object _S0.

Test 169 of 191: Test _S1 (System S1 State).
SKIPPED: Test 169, Skipping test for non-existant object _S1.

Test 170 of 191: Test _S2 (System S2 State).
SKIPPED: Test 170, Skipping test for non-existant object _S2.

Test 171 of 191: Test _S3 (System S3 State).
SKIPPED: Test 171, Skipping test for non-existant object _S3.

Test 172 of 191: Test _S4 (System S4 State).
SKIPPED: Test 172, Skipping test for non-existant object _S4.

Test 173 of 191: Test _S5 (System S5 State).
SKIPPED: Test 173, Skipping test for non-existant object _S5.

Test 174 of 191: Test _WAK (System Wake).
Test _WAK(1) System Wake, State S1.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(2) System Wake, State S2.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(3) System Wake, State S3.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(4) System Wake, State S4.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(5) System Wake, State S5.
PASSED: Test 174, \_WAK correctly returned a sane looking package.


Test 175 of 191: Test _ADR (Return Unique ID for Device).
PASSED: Test 175, \_SB_.PCI0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.MCHC._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.P0P2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU.DD01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU.DD02._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU.DD03._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU.DD04._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU.DD05._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU.DD06._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU.DD07._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU.DD08._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IGPU.DD1F._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SBUS._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SBUS.BUS0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SBUS.BUS1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.LPCB._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.HDEF._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP02._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP02.CMRA._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP03._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP03.ARPT._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB0.NHI0._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB0._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB0.DEV0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB0.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB3.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB4.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB5._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB3.UPS0.DSB6._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB0.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB3.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB4.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB5._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB4.UPS0.DSB6._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB5._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB1.UPS0.DSB6._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB0._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB0.DEV0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB0.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB3._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB3.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB4._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB4.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB5._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB3.UPS0.DSB6._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB0.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB3._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB3.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB4._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB4.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB5._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB4.UPS0.DSB6._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB5._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB2.UPS0.DSB6._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB0._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB0.DEV0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB0.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB3._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB3.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB4._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB4.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB5._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB3.UPS0.DSB6._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB0._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB0.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB3._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB3.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB4._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB4.DEV0._ADR
correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB5._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB4.UPS0.DSB6._ADR correctly
returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB5._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB3.UPS0.DSB6._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.RP05.UPSB.DSB4._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP06._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP06.SSD0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP06.SSD0.PRT0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHC1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHC1.RHUB._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHC1.RHUB.HS01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHC1.RHUB.HS02._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHC1.RHUB.HS03._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHC1.RHUB.HS05._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHC1.RHUB.SSP1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHC1.RHUB.SSP2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHC1.RHUB.SSP3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.HDAU._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PNLF._ADR correctly returned an integer.

Test 176 of 191: Test _BCL (Query List of Brightness Control Levels Supported).
Brightness levels for \_SB_.PCI0.IGPU.DD01._BCL:
  Level on full power   : 87
  Level on battery power: 53
  Brightness Levels     : 0, 7, 13, 20, 27, 33, 40, 47, 53, 60, 67, 73, 80, 87, 93, 100
PASSED: Test 176, \_SB_.PCI0.IGPU.DD01._BCL returned a sane package of 18
integers.

Test 177 of 191: Test _BCM (Set Brightness Level).
FAILED [MEDIUM] MethodShouldReturnNothing: Test 177, \_SB_.PCI0.IGPU.DD01._BCM
returned values, but was expected to return nothing.
Object returned:
  INTEGER: 0x00000000

ADVICE: This probably won't cause any errors, but it should be fixed as the AML
code is not conforming to the expected behaviour as described in the ACPI
specification.


Test 178 of 191: Test _BQC (Brightness Query Current Level).
PASSED: Test 178, \_SB_.PCI0.IGPU.DD01._BQC correctly returned an integer.

Test 179 of 191: Test _DCS (Return the Status of Output Device).
PASSED: Test 179, \_SB_.PCI0.IGPU.DD01._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.IGPU.DD02._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.IGPU.DD03._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.IGPU.DD04._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.IGPU.DD05._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.IGPU.DD06._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.IGPU.DD07._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.IGPU.DD08._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.IGPU.DD1F._DCS correctly returned an integer.

Test 180 of 191: Test _DDC (Return the EDID for this Device).
SKIPPED: Test 180, Skipping test for non-existant object _DDC.

Test 181 of 191: Test _DSS (Device Set State).
PASSED: Test 181, \_SB_.PCI0.IGPU.DD01._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.IGPU.DD02._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.IGPU.DD03._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.IGPU.DD04._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.IGPU.DD05._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.IGPU.DD06._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.IGPU.DD07._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.IGPU.DD08._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.IGPU.DD1F._DSS returned no values as expected.

Test 182 of 191: Test _DGS (Query Graphics State).
PASSED: Test 182, \_SB_.PCI0.IGPU.DD01._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.IGPU.DD02._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.IGPU.DD03._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.IGPU.DD04._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.IGPU.DD05._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.IGPU.DD06._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.IGPU.DD07._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.IGPU.DD08._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.IGPU.DD1F._DGS correctly returned an integer.

Test 183 of 191: Test _DOD (Enumerate All Devices Attached to Display Adapter).
Device 0:
  Instance:                0
  Display port attachment: 0
  Type of display:         4 (Internal/Integrated Digital Flat Panel)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
PASSED: Test 183, \_SB_.PCI0.IGPU._DOD correctly returned a sane looking
package.

Test 184 of 191: Test _DOS (Enable/Disable Output Switching).
PASSED: Test 184, \_SB_.PCI0.IGPU._DOS returned no values as expected.

Test 185 of 191: Test _GPD (Get POST Device).
SKIPPED: Test 185, Skipping test for non-existant object _GPD.

Test 186 of 191: Test _ROM (Get ROM Data).
SKIPPED: Test 186, Skipping test for non-existant object _ROM.

Test 187 of 191: Test _SPD (Set POST Device).
SKIPPED: Test 187, Skipping test for non-existant object _SPD.

Test 188 of 191: Test _VPO (Video POST Options).
SKIPPED: Test 188, Skipping test for non-existant object _VPO.

Test 189 of 191: Test _CBA (Configuration Base Address).
SKIPPED: Test 189, Skipping test for non-existant object _CBA.

Test 190 of 191: Test _IFT (IPMI Interface Type).
SKIPPED: Test 190, Skipping test for non-existant object _IFT.

Test 191 of 191: Test _SRV (IPMI Interface Revision).
SKIPPED: Test 191, Skipping test for non-existant object _SRV.

================================================================================
539 passed, 8 failed, 1 warning, 0 aborted, 149 skipped, 0 info only.
================================================================================

msdm: MSDM Microsoft Data Management Table test.
--------------------------------------------------------------------------------
ACPI MSDM table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

mchi: MCHI Management Controller Host Interface Table test.
--------------------------------------------------------------------------------
ACPI MCHI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

mcfg: MCFG PCI Express* memory mapped config space test.
--------------------------------------------------------------------------------
Test 1 of 2: Validate MCFG table.
This test tries to validate the MCFG table by comparing the first 16 bytes in
the MMIO mapped config space with the 'traditional' config space of the first
PCI device (root bridge). The MCFG data is only trusted if it is marked reserved
in the UEFI run-time service memory map

Memory Map Layout
-----------------
0x0000000000000000 - 0x0000000000057fff (System RAM)
0x0000000000058000 - 0x0000000000058fff (reserved)
0x0000000000059000 - 0x000000000008efff (System RAM)
0x000000000008f000 - 0x000000000008ffff (reserved)
0x0000000000090000 - 0x000000000009ffff (System RAM)
0x00000000000a0000 - 0x00000000000bffff (reserved)
0x0000000000100000 - 0x000000008ad13fff (System RAM)
0x000000008ad14000 - 0x000000008ad52fff (ACPI Non-volatile Storage)
0x000000008ad53000 - 0x000000008ad61fff (System RAM)
0x000000008ad62000 - 0x000000008ad8efff (ACPI Non-volatile Storage)
0x000000008ad8f000 - 0x000000008ae38fff (System RAM)
0x000000008ae39000 - 0x000000008ae8efff (reserved)
0x000000008ae8f000 - 0x000000008aecffff (System RAM)
0x000000008aed0000 - 0x000000008aefefff (reserved)
0x000000008aeff000 - 0x000000008af7bfff (System RAM)
0x000000008af7c000 - 0x000000008afe4fff (reserved)
0x000000008afe5000 - 0x000000008affffff (System RAM)
0x000000008b000000 - 0x000000008f9fffff (reserved)
0x00000000e00f8000 - 0x00000000e00f8fff (reserved)
0x00000000fed1c000 - 0x00000000fed1ffff (reserved)
0x00000000ffe10000 - 0x00000000ffe3ffff (reserved)
0x0000000100000000 - 0x000000046f5fffff (System RAM)

MCFG table found, size is 16 bytes (excluding header) (1 entries).
Configuration Entry #0:
  Base Address  : 0xe0000000
  Segment       : 0
  Start bus     : 0
  End bus       : 155
FAILED [LOW] MCFGMMIONotReserved: Test 1, MCFG MMIO config space at 0xe0000000
is not reserved in the memory map table

ADVICE: The PCI Express specification states that the PCI Express configuration
space should be defined in the MCFG table and *maybe* optionally defined in the
UEFI run-time service memory map if ACPI MCFG is present. Linux checks if the
region is reserved in the memory map table and will reject the MMCONFIG if there
is a discrepency between MCFG and the memory map table for the PCI Express
region. [See arch/x86/pci/mmconfig-shared.c pci_mmcfg_reject_broken()]. It is
recommended that this is defined in the UEFI run-time service memory map table
for Linux.


Test 2 of 2: Validate MCFG PCI config space.
PASSED: Test 2, PCI config space verified.

================================================================================
1 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

madt: MADT Multiple APIC Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: MADT Multiple APIC Description Table test.
PASSED: Test 1, No issues found in MADT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

lpit: LPIT Low Power Idle Table test.
--------------------------------------------------------------------------------
ACPI LPIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

iort: IORT IO Remapping Table test.
--------------------------------------------------------------------------------
ACPI IORT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

hpet: HPET IA-PC High Precision Event Timer Table tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test HPET base in kernel log.
This test checks the HPET PCI BAR for each timer block in the timer. The base
address is passed by the firmware via an ACPI table. IRQ routing and
initialization is also verified by the test.
PASSED: Test 1, Found HPET base 0xfed00000 in kernel log.

Test 2 of 4: Test HPET base in HPET table.
Hardware ID of Event Block:
  PCI Vendor ID              : 0x8086
  Legacy IRQ Routing Capable : 1
  COUNT_SIZE_CAP counter size: 1
  Number of comparitors      : 2
  Hardwre Revision ID        : 0x1
Lower 32 bit base Address    : 0xfed00000
  Address Space ID           : 0x0
  Register Bit Width         : 0x40
  Register Bit Offset        : 0x0
  Address Width              : 0x0
HPET sequence number         : 0x0
Minimum clock tick           : 0x80
Page Protection              : 0x0 (No guaranteed protection)
OEM attributes               : 0x0
PASSED: Test 2, HPET looks sane.

Test 3 of 4: Test HPET base in DSDT and/or SSDT.
PASSED: Test 3, HPET base matches that between DSDT and the kernel (0xfed00000).

Test 4 of 4: Test HPET configuration.
PASSED: Test 4, Vendor ID looks sane: 0x8086.
PASSED: Test 4, Valid clock period 69841279.

================================================================================
5 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

hest: HEST Hardware Error Source Table test.
--------------------------------------------------------------------------------
ACPI HEST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

gtdt: GTDT Generic Timer Description Table test.
--------------------------------------------------------------------------------
ACPI GTDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

fpdt: FPDT Firmware Performance Data Table test.
--------------------------------------------------------------------------------
ACPI FPDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

fan: Simple fan tests.
--------------------------------------------------------------------------------
Test 1 of 2: Test fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
PASSED: Test 1, Fan cooling_device0 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device1 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device2 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device3 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device4 of type LCD has max cooling state 100 and
current cooling state 0.
FAILED [MEDIUM] NoFanCurState: Test 1, Fan present but has no cur_state present.

Test 2 of 2: Load system, check CPU fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
Loading CPUs for 20 seconds to try and get fan speeds to change.
Fan cooling_device0 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device1 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device2 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device3 current state did not change from value 0 while CPUs were
busy.

ADVICE: Did not detect any change in the CPU related thermal cooling device
states. It could be that the devices are returning static information back to
the driver and/or the fan speed is automatically being controlled by firmware
using System Management Mode in which case the kernel interfaces being examined
may not work anyway.


================================================================================
5 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

fadt: FADT Fixed ACPI Description Table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Test FADT ACPI Description Table tests.
PASSED: Test 1, No issues found in FADT table.

Test 2 of 3: Test FADT SCI_EN bit is enabled.
FADT Preferred PM Profile: 2 (Mobile) 
FADT is greater than ACPI version 1.0
PASSED: Test 2, SCI_EN bit in PM1a Control Register Block is enabled.

Test 3 of 3: Test FADT reset register.
PASSED: Test 3, FADT reset register width is 8 bits wide as expected.
PASSED: Test 3, FADT register bit offset is 0 as expected.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

facs: FACS Firmware ACPI Control Structure test.
--------------------------------------------------------------------------------
Test 1 of 1: FACS Firmware ACPI Control Structure test.
FACS Firmware ACPI Control Structure:
  Signature:                'FACS'
  Length:                   0x00000040
  Hardware Signature:       0x00000000
  Firmware Waking Vector:   0x00000000
  Global Lock:              0x00000000
  Flags:                    0x00000000
  X-Firmware Waking Vector: 0x0000000000000000
  Version:                  0x01
  Reserved:                 0x00 0x00 0x00
  OSPM Flags:               0x00000000
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
PASSED: Test 1, No issues found in FACS table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

erst: ERST Error Record Serialization Table test.
--------------------------------------------------------------------------------
ACPI ERST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

ecdt: ECDT Embedded Controller Boot Resources Table test.
--------------------------------------------------------------------------------
Test 1 of 1: ECDT Embedded Controller Boot Resources Table test.
ECDT Embedded Controller Boot Resources Table:
  EC_CONTROL:
    Address Space ID:       0x01
    Register Bit Width      0x08
    Register Bit Offset     0x00
    Access Size             0x00
    Address                 0x0000000000000066
  EC_DATA:
    Address Space ID:       0x01
    Register Bit Width      0x08
    Register Bit Offset     0x00
    Access Size             0x00
    Address                 0x0000000000000062
  UID:                      0x00000000
  GPE_BIT:                  0x4e
  EC_ID:                    '\_SB.PCI0.LPCB.EC'

PASSED: Test 1, Found and evaluated \_SB.PCI0.LPCB.EC._UID, returns expected
value 0x0
PASSED: Test 1, No issues found in ECDT table.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

dmar: DMA Remapping (VT-d) test.
--------------------------------------------------------------------------------
Test 1 of 1: DMA Remapping test.
PASSED: Test 1, DMAR ACPI table has passed test.
PASSED: Test 1, Found no DMAR errors in kernel log.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

dbg2: DBG2 (Debug Port Table 2) test.
--------------------------------------------------------------------------------
ACPI DBG2 table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

dbgp: DBGP (Debug Port) Table test.
--------------------------------------------------------------------------------
ACPI DBGP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cstates: Processor C state support test.
--------------------------------------------------------------------------------
Test 1 of 1: Test all CPUs C-states.
This test checks if all processors have the same number of C-states, if the
C-state counter works and if C-state transitions happen.
PASSED: Test 1, Processor 0 has reached all C-states: C1 C3 C6 C7 C8 C9 C10 
Processor 1 has not reached C1 C6 C7 during tests. This is not a failure,
however it is not a complete and thorough test.
PASSED: Test 1, Processor 1 has the same number of C-states as processor 0
Processor 2 has not reached C1 during tests. This is not a failure, however it
is not a complete and thorough test.
PASSED: Test 1, Processor 2 has the same number of C-states as processor 0
Processor 3 has not reached C3 C7 during tests. This is not a failure, however
it is not a complete and thorough test.
PASSED: Test 1, Processor 3 has the same number of C-states as processor 0

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

csrt: CSRT Core System Resource Table test.
--------------------------------------------------------------------------------
ACPI CSRT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cpep: CPEP Corrected Platform Error Polling Table test.
--------------------------------------------------------------------------------
ACPI CPEP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

checksum: ACPI table checksum test.
--------------------------------------------------------------------------------
Test 1 of 1: ACPI table checksum test.
PASSED: Test 1, Table RSDP has correct checksum 0x0f.
PASSED: Test 1, Table RSDP has correct extended checksum 0xd9.
PASSED: Test 1, Table XSDT has correct checksum 0xdf
PASSED: Test 1, Table DSDT has correct checksum 0x14
PASSED: Test 1, Table FACP has correct checksum 0xc0
PASSED: Test 1, Table HPET has correct checksum 0x8c
PASSED: Test 1, Table APIC has correct checksum 0x5f
PASSED: Test 1, Table SBST has correct checksum 0x84
PASSED: Test 1, Table ECDT has correct checksum 0x02
PASSED: Test 1, Table SSDT has correct checksum 0x6b
PASSED: Test 1, Table SSDT has correct checksum 0xbb
PASSED: Test 1, Table SSDT has correct checksum 0xbe
PASSED: Test 1, Table SSDT has correct checksum 0xb3
PASSED: Test 1, Table SSDT has correct checksum 0x3c
PASSED: Test 1, Table SSDT has correct checksum 0x25
PASSED: Test 1, Table SSDT has correct checksum 0x4c
PASSED: Test 1, Table SSDT has correct checksum 0xf0
PASSED: Test 1, Table SSDT has correct checksum 0x51
PASSED: Test 1, Table MCFG has correct checksum 0x58
PASSED: Test 1, Table DMAR has correct checksum 0xdc
PASSED: Test 1, Table RSDT has correct checksum 0x25

================================================================================
21 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

autobrightness: Automated LCD brightness test.
--------------------------------------------------------------------------------
Test 1 of 2: Test for maximum and actual brightness.
PASSED: Test 1, Maximum brightness for intel_backlight is 1388 which is sane.
PASSED: Test 1, Actual brightness for intel_backlight is 1388 which is in range
0..1388.
PASSED: Test 1, Maximum brightness for acpi_video0 is 100 which is sane.
PASSED: Test 1, Actual brightness for acpi_video0 is 100 which is in range
0..100.

Test 2 of 2: Change actual brightness.
PASSED: Test 2, Actual brightness matches the brightnesss level for all 1388
levels for backlight intel_backlight.
PASSED: Test 2, Actual brightness matches the brightnesss level for all 100
levels for backlight acpi_video0.

================================================================================
6 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

boot: BOOT Table test.
--------------------------------------------------------------------------------
ACPI BOOT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

bgrt: BGRT Boot Graphics Resource Table test.
--------------------------------------------------------------------------------
ACPI BGRT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

bert: BERT Boot Error Record Table test.
--------------------------------------------------------------------------------
ACPI BERT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

aspt: ASPT Table test.
--------------------------------------------------------------------------------
ACPI ASPT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

asf: ASF! Alert Standard Format Table test.
--------------------------------------------------------------------------------
ACPI ASF! table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

apicinstance: Test for single instance of APIC/MADT table.
--------------------------------------------------------------------------------
Test 1 of 1: Test for single instance of APIC/MADT table.
Found APIC/MADT table APIC @ 8ad8a000, length 0x188 
PASSED: Test 1, Found 1 APIC/MADT table(s), as expected.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

acpitables: ACPI table headers sanity tests.
--------------------------------------------------------------------------------
Test 1 of 1: Test ACPI headers.
PASSED: Test 1, Table XSDT has valid signature and ID strings.
PASSED: Test 1, Table DSDT has valid signature and ID strings.
PASSED: Test 1, Table FACP has valid signature and ID strings.
PASSED: Test 1, Table HPET has valid signature and ID strings.
PASSED: Test 1, Table APIC has valid signature and ID strings.
PASSED: Test 1, Table SBST has valid signature and ID strings.
PASSED: Test 1, Table ECDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
WARNING: Test 1, ACPI Table SSDT is empty and just contains a table header.
Further header checks will be omitted.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table MCFG has valid signature and ID strings.
PASSED: Test 1, Table DMAR has valid signature and ID strings.
PASSED: Test 1, Table RSDT has valid signature and ID strings.

================================================================================
18 passed, 0 failed, 1 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================


843 passed, 252 failed, 24 warnings, 3 aborted, 209 skipped, 10 info only.

Test Failure Summary
================================================================================

Critical failures: 1
 method: Detected error 'Type' when evaluating '\_SB_.ADP1._PCL'.

High failures: 122
 uefirtauthvar: Failed to get authenticated variable with UEFI runtime service.
 uefirtauthvar: Set authenticated variable expected fail but success
 securebootcert: The secure boot variable SecureBoot not found.
 securebootcert: The secure boot variable SetupMode not found.
 uefirtvariable: Failed to get variable with right attributes, attributes we got is 2147483655, but it should be 7.
 uefirtvariable: Expected EFI_INVALID_PARAMETER with NULL VariableName.
 uefirtvariable: Failed to set variable with right attributes, attributes we got is 2147483655, but it should both be 7.
 dmicheck: Invald header length of entry #40, length was 0x00.
 syntaxcheck: Assembler error in line 23
 syntaxcheck: Compilation aborted early due to a parser detected syntax error.
 syntaxcheck: Assembler error in line 618
 syntaxcheck: Assembler error in line 619
 syntaxcheck: Assembler error in line 620
 syntaxcheck: Assembler error in line 621
 syntaxcheck: Assembler error in line 622
 syntaxcheck: Assembler error in line 623
 syntaxcheck: Assembler error in line 624
 syntaxcheck: Assembler error in line 625
 syntaxcheck: Assembler error in line 626
 syntaxcheck: Assembler error in line 627
 syntaxcheck: Assembler error in line 628
 syntaxcheck: Assembler error in line 629
 syntaxcheck: Assembler error in line 630
 syntaxcheck: Assembler error in line 631
 syntaxcheck: Assembler error in line 632
 syntaxcheck: Assembler error in line 633
 syntaxcheck: Assembler error in line 650
 syntaxcheck: Assembler error in line 651
 syntaxcheck: Assembler error in line 652
 syntaxcheck: Assembler error in line 653
 syntaxcheck: Assembler error in line 654
 syntaxcheck: Assembler error in line 655
 syntaxcheck: Assembler error in line 656
 syntaxcheck: Assembler error in line 657
 syntaxcheck: Assembler error in line 658
 syntaxcheck: Assembler error in line 659
 syntaxcheck: Assembler error in line 660
 syntaxcheck: Assembler error in line 661
 syntaxcheck: Assembler error in line 662
 syntaxcheck: Assembler error in line 663
 syntaxcheck: Assembler error in line 664
 syntaxcheck: Assembler error in line 665
 syntaxcheck: Assembler error in line 682
 syntaxcheck: Assembler error in line 683
 syntaxcheck: Assembler error in line 684
 syntaxcheck: Assembler error in line 685
 syntaxcheck: Assembler error in line 686
 syntaxcheck: Assembler error in line 687
 syntaxcheck: Assembler error in line 688
 syntaxcheck: Assembler error in line 689
 syntaxcheck: Assembler error in line 690
 syntaxcheck: Assembler error in line 691
 syntaxcheck: Assembler error in line 692
 syntaxcheck: Assembler error in line 693
 syntaxcheck: Assembler error in line 694
 syntaxcheck: Assembler error in line 695
 syntaxcheck: Assembler error in line 696
 syntaxcheck: Assembler error in line 697
 syntaxcheck: Assembler error in line 713
 syntaxcheck: Assembler error in line 714
 syntaxcheck: Assembler error in line 715
 syntaxcheck: Assembler error in line 716
 syntaxcheck: Assembler error in line 717
 syntaxcheck: Assembler error in line 718
 syntaxcheck: Assembler error in line 719
 syntaxcheck: Assembler error in line 720
 syntaxcheck: Assembler error in line 721
 syntaxcheck: Assembler error in line 722
 syntaxcheck: Assembler error in line 723
 syntaxcheck: Assembler error in line 724
 syntaxcheck: Assembler error in line 725
 syntaxcheck: Assembler error in line 726
 syntaxcheck: Assembler error in line 727
 syntaxcheck: Assembler error in line 728
 syntaxcheck: Assembler error in line 744
 syntaxcheck: Assembler error in line 745
 syntaxcheck: Assembler error in line 746
 syntaxcheck: Assembler error in line 747
 syntaxcheck: Assembler error in line 748
 syntaxcheck: Assembler error in line 749
 syntaxcheck: Assembler error in line 750
 syntaxcheck: Assembler error in line 751
 syntaxcheck: Assembler error in line 752
 syntaxcheck: Assembler error in line 753
 syntaxcheck: Assembler error in line 754
 syntaxcheck: Assembler error in line 755
 syntaxcheck: Assembler error in line 756
 syntaxcheck: Assembler error in line 757
 syntaxcheck: Assembler error in line 758
 syntaxcheck: Assembler error in line 759
 syntaxcheck: Assembler error in line 775
 syntaxcheck: Assembler error in line 776
 syntaxcheck: Assembler error in line 777
 syntaxcheck: Assembler error in line 778
 syntaxcheck: Assembler error in line 779
 syntaxcheck: Assembler error in line 780
 syntaxcheck: Assembler error in line 781
 syntaxcheck: Assembler error in line 782
 syntaxcheck: Assembler error in line 783
 syntaxcheck: Assembler error in line 784
 syntaxcheck: Assembler error in line 785
 syntaxcheck: Assembler error in line 786
 syntaxcheck: Assembler error in line 787
 syntaxcheck: Assembler error in line 788
 syntaxcheck: Assembler error in line 789
 syntaxcheck: Assembler error in line 790
 syntaxcheck: Assembler error in line 806
 syntaxcheck: Assembler error in line 807
 syntaxcheck: Assembler error in line 808
 syntaxcheck: Assembler error in line 809
 syntaxcheck: Assembler error in line 810
 syntaxcheck: Assembler error in line 811
 syntaxcheck: Assembler error in line 812
 syntaxcheck: Assembler error in line 813
 syntaxcheck: Assembler error in line 814
 syntaxcheck: Assembler error in line 815
 syntaxcheck: Assembler error in line 816
 syntaxcheck: Assembler error in line 817
 syntaxcheck: Assembler error in line 818
 syntaxcheck: Assembler error in line 819
 syntaxcheck: Assembler error in line 820
 syntaxcheck: Assembler error in line 821

Medium failures: 50
 mtrr: Memory range 0x1000 to 0x57fff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x1000 to 0x57fff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x59000 to 0x8efff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x59000 to 0x8efff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x90000 to 0x9ffff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x90000 to 0x9ffff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x100000 to 0x8ad13fff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x100000 to 0x8ad13fff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x8ad53000 to 0x8ad61fff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x8ad53000 to 0x8ad61fff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x8ad8f000 to 0x8ae38fff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x8ad8f000 to 0x8ae38fff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x8ae8f000 to 0x8aecffff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x8ae8f000 to 0x8aecffff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x8aeff000 to 0x8af7bfff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x8aeff000 to 0x8af7bfff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x8afe5000 to 0x8affffff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x8afe5000 to 0x8affffff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x90000000 to 0x9fffffff (0000:02:00.0) has incorrect attribute Uncached.
 mtrr: Memory range 0xa0000000 to 0xafffffff (0000:00:02.0) has incorrect attribute Uncached.
 mtrr: Memory range 0x100000000 to 0x46f5fffff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x100000000 to 0x46f5fffff (System RAM) is lacking attribute Write-Back.
 dmicheck: The size of a DMI entry 40 is illegal, DMI data is either wrong or the SMBIOS Table Pointer is pointing to the wrong memory region.
 dmicheck: String index 0x05 in table entry 'Base Board Information (Type 2)' @ 0x8ad143fc, field 'Asset Tag', offset 0x08 has a default value 'Base Board Asset Tag#' and probably has not been updated by the BIOS vendor.
 dmicheck: DMI table length was 2523 bytes (as specified by the SMBIOS header) but the DMI entries used 2112 bytes.
 dmicheck: DMI table was DMI 43 entries in size (as specified by the SMBIOS header) but only 40 DMI entries were found.
 cpufreq: CPU max frequency is unreachable
 cpufreq: Can't set CPU frequencies
 apicedge: Non-Legacy interrupt 0 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 8 is incorrectly level triggered.
 syntaxcheck: Assembler warning in line 2295
 syntaxcheck: Assembler warning in line 5694
 syntaxcheck: Assembler warning in line 7414
 syntaxcheck: Assembler warning in line 7465
 syntaxcheck: Assembler warning in line 123
 syntaxcheck: Assembler warning in line 257
 syntaxcheck: Assembler warning in line 324
 syntaxcheck: Assembler warning in line 371
 syntaxcheck: Assembler warning in line 418
 syntaxcheck: Assembler warning in line 465
 syntaxcheck: Assembler warning in line 512
 syntaxcheck: Assembler warning in line 559
 method: \_SB_.PCI0.SBUS.BUS0._CID returned a string 'SMBUS' but it was not a valid PNP ID or a valid ACPI ID.
 method: \_SB_.PCI0.SBUS.BUS1._CID returned a string 'SMBUS' but it was not a valid PNP ID or a valid ACPI ID.
 method: \_SB_.PCI0.LPCB.SMC_._CID returned a string 'SMC-HURONRIVER' but it was not a valid PNP ID or a valid ACPI ID.
 method: \_SB_.PCI0.LPCB.ALS0._CID returned a string 'SMC-ALS' but it was not a valid PNP ID or a valid ACPI ID.
 method: \_SB_.PNLF._CID returned a string 'BACKLIGHT' but it was not a valid PNP ID or a valid ACPI ID.
 method: \_SB_.PCI0.RP06.SSD0.PRT0._GTF should return a buffer with size of multiple of 7.
 method: \_SB_.PCI0.IGPU.DD01._BCM returned values, but was expected to return nothing.
 fan: Fan present but has no cur_state present.

Low failures: 56
 dmicheck: String index 0x03 in table entry 'Processor Information (Type 4)' @ 0x8ad14000, field 'Serial Number', offset 0x20 has a default value 'To Be Filled By O.E.M.' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x05 in table entry 'Processor Information (Type 4)' @ 0x8ad14000, field 'Asset Tag', offset 0x21 has a default value 'To Be Filled By O.E.M.' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x04 in table entry 'Memory Device (Type 17)' @ 0x8ad141b6, field 'Serial Number', offset 0x18 has a default value '0x00000000' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x05 in table entry 'Memory Device (Type 17)' @ 0x8ad141b6, field 'Asset Tag', offset 0x19 has a default value 'Unknown' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x04 in table entry 'Memory Device (Type 17)' @ 0x8ad142dc, field 'Serial Number', offset 0x18 has a default value '0x00000000' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x05 in table entry 'Memory Device (Type 17)' @ 0x8ad142dc, field 'Asset Tag', offset 0x19 has a default value 'Unknown' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0x8ad144b6, field 'Internal Reference Designator', offset 0x04 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0x8ad144ca, field 'Internal Reference Designator', offset 0x04 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0x8ad144de, field 'Internal Reference Designator', offset 0x04 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0x8ad144fe, field 'Internal Reference Designator', offset 0x04 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0x8ad14512, field 'Internal Reference Designator', offset 0x04 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0x8ad1452c, field 'Internal Reference Designator', offset 0x04 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0x8ad14543, field 'Internal Reference Designator', offset 0x04 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0x8ad14563, field 'Internal Reference Designator', offset 0x04 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x01 in table entry 'Port Connector Information (Type 8)' @ 0x8ad14581, field 'Internal Reference Designator', offset 0x04 has a default value 'None' and probably has not been updated by the BIOS vendor.
 dmicheck: Out of range string index 0x01 while accessing entry 'BIOS Language Information (Type 13)' @ 0x8ad14754, field 'BIOS Language String 1', offset 0x04
 syntaxcheck: Assembler remark in line 2590
 syntaxcheck: Assembler remark in line 4641
 syntaxcheck: Assembler remark in line 4689
 syntaxcheck: Assembler remark in line 4737
 syntaxcheck: Assembler remark in line 4785
 syntaxcheck: Assembler remark in line 4833
 syntaxcheck: Assembler remark in line 4881
 syntaxcheck: Assembler remark in line 4929
 syntaxcheck: Assembler remark in line 4977
 syntaxcheck: Assembler remark in line 5678
 syntaxcheck: Assembler remark in line 5705
 syntaxcheck: Assembler remark in line 7710
 syntaxcheck: Assembler remark in line 7735
 syntaxcheck: Assembler remark in line 32
 syntaxcheck: Assembler remark in line 40
 syntaxcheck: Assembler remark in line 41
 syntaxcheck: Assembler remark in line 42
 syntaxcheck: Assembler remark in line 43
 syntaxcheck: Assembler remark in line 128
 syntaxcheck: Assembler remark in line 143
 syntaxcheck: Assembler remark in line 144
 syntaxcheck: Assembler remark in line 162
 syntaxcheck: Assembler remark in line 432
 syntaxcheck: Assembler remark in line 433
 syntaxcheck: Assembler remark in line 482
 syntaxcheck: Assembler remark in line 483
 syntaxcheck: Assembler remark in line 518
 syntaxcheck: Assembler remark in line 519
 syntaxcheck: Assembler remark in line 537
 syntaxcheck: Assembler remark in line 582
 syntaxcheck: Assembler remark in line 583
 syntaxcheck: Assembler remark in line 133
 syntaxcheck: Assembler remark in line 148
 syntaxcheck: Assembler remark in line 151
 syntaxcheck: Assembler remark in line 177
 syntaxcheck: Assembler remark in line 207
 syntaxcheck: Assembler remark in line 232
 syntaxcheck: Assembler remark in line 297
 syntaxcheck: Assembler remark in line 307
 mcfg: MCFG MMIO config space at 0xe0000000 is not reserved in the memory map table

Other failures: NONE

Test           |Pass |Fail |Abort|Warn |Skip |Info |
---------------+-----+-----+-----+-----+-----+-----+
acpiinfo       |     |     |     |     |     |    3|
acpitables     |   18|     |     |    1|     |     |
apicedge       |     |    2|     |     |     |     |
apicinstance   |    1|     |     |     |     |     |
asf            |     |     |     |     |    1|     |
aspm           |    6|     |     |   16|     |     |
aspt           |     |     |     |     |    1|     |
autobrightness |    6|     |     |     |     |     |
bert           |     |     |     |     |    1|     |
bgrt           |     |     |     |     |    1|     |
bios32         |     |     |     |     |    1|     |
bios_info      |     |     |     |     |     |    1|
boot           |     |     |     |     |    1|     |
checksum       |   21|     |     |     |     |     |
cpep           |     |     |     |     |    1|     |
cpufreq        |    3|    2|     |    4|    2|     |
crs            |    1|     |     |     |     |     |
csm            |     |     |     |     |     |    1|
csrt           |     |     |     |     |    1|     |
cstates        |    4|     |     |     |     |     |
dbg2           |     |     |     |     |    1|     |
dbgp           |     |     |     |     |    1|     |
dmar           |    2|     |     |     |     |     |
dmicheck       |   31|   21|     |     |    1|     |
ebda           |     |     |     |     |    1|     |
ecdt           |    2|     |     |     |     |     |
erst           |     |     |     |     |    1|     |
facs           |    1|     |     |     |     |     |
fadt           |    4|     |     |     |     |     |
fan            |    5|    1|     |     |     |     |
fpdt           |     |     |     |     |    1|     |
gtdt           |     |     |     |     |    1|     |
hda_audio      |    2|     |     |     |     |     |
hest           |     |     |     |     |    1|     |
hpet           |    5|     |     |     |     |     |
iort           |     |     |     |     |    1|     |
klog           |    1|     |     |     |     |     |
lpit           |     |     |     |     |    1|     |
madt           |    1|     |     |     |     |     |
maxfreq        |    1|     |     |     |     |     |
maxreadreq     |    1|     |     |     |     |     |
mcfg           |    1|    1|     |     |     |     |
mchi           |     |     |     |     |    1|     |
method         |  539|    8|     |    1|  149|     |
microcode      |     |     |     |     |    1|     |
mpcheck        |     |     |     |     |    9|     |
msdm           |     |     |     |     |    1|     |
msr            |  114|     |     |     |     |     |
mtrr           |    1|   22|     |     |    1|     |
nx             |    3|     |     |     |     |     |
oops           |    2|     |     |     |     |     |
osilinux       |     |     |     |    2|     |     |
pcc            |     |     |     |     |     |    1|
pciirq         |     |     |     |     |     |     |
pnp            |     |     |     |     |     |     |
rsdp           |    1|     |     |     |     |     |
rsdt           |    1|     |     |     |     |     |
sbst           |    1|     |     |     |     |     |
securebootcert |     |    2|     |     |     |     |
slic           |     |     |     |     |    1|     |
slit           |     |     |     |     |    1|     |
spcr           |     |     |     |     |    1|     |
spmi           |     |     |     |     |    1|     |
srat           |     |     |     |     |    1|     |
stao           |     |     |     |     |    1|     |
syntaxcheck    |    4|  183|     |     |     |     |
tcpa           |     |     |    1|     |     |     |
tpm2           |     |     |    1|     |     |     |
uefi           |     |     |     |     |    1|     |
uefibootpath   |    4|     |     |     |     |     |
uefirtauthvar  |     |    6|     |     |    6|     |
uefirtmisc     |    3|     |     |     |   10|     |
uefirttime     |   35|     |     |     |     |     |
uefirtvariable |   12|    4|     |     |    2|     |
version        |     |     |     |     |     |    4|
virt           |    1|     |     |     |     |     |
waet           |     |     |     |     |    1|     |
wakealarm      |    4|     |     |     |     |     |
wdat           |     |     |     |     |    1|     |
wmi            |     |     |     |     |     |     |
xenv           |     |     |    1|     |     |     |
xsdt           |    1|     |     |     |     |     |
---------------+-----+-----+-----+-----+-----+-----+
Total:         |  843|  252|    3|   24|  209|   10|
---------------+-----+-----+-----+-----+-----+-----+
