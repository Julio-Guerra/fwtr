Results generated by fwts: Version V16.01.00 (2016-01-13 08:23:12).

Some of this work - Copyright (c) 1999 - 2016, Intel Corp. All rights reserved.
Some of this work - Copyright (c) 2010 - 2016, Canonical.

This test run on 24/02/16 at 09:30:55 on host Linux fwts-live 4.2.0-18-generic
#22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC 2015 x86_64.

Command: "fwts --force-clean --skip-test=s3 --batch --uefitests
--show-progress-dialog --log-type plaintext".
Running tests: version bios_info oops klog mtrr acpiinfo uefirtauthvar
uefibootpath securebootcert uefirtmisc uefirtvariable uefirttime csm maxreadreq
crs aspm dmicheck microcode msr nx cpufreq maxfreq virt pnp pciirq mpcheck
hda_audio ebda bios32 apicedge xenv xsdt wmi wdat wakealarm waet uefi tpm2 tcpa
syntaxcheck stao srat spmi spcr slit slic sbst rsdt rsdp pcc osilinux method
msdm mchi mcfg madt lpit iort hpet hest gtdt fpdt fan fadt facs erst ecdt dmar
dbg2 dbgp cstates csrt cpep checksum autobrightness boot bgrt bert aspt asf
apicinstance acpitables.

version: Gather kernel system information.
--------------------------------------------------------------------------------
Test 1 of 4: Gather kernel signature.
Signature: Ubuntu 4.2.0-18.22~14.04.1-generic 4.2.3

Test 2 of 4: Gather kernel system information.
Kernel Version: Linux version 4.2.0-18-generic (buildd@lgw01-55) (gcc version
4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC
2015

Test 3 of 4: Gather kernel boot command line.
Kernel boot command line: initrd=/casper/initrd.lz boot=casper config
ip=frommedia persistent noprompt splash quiet FWTS_AUTO_SHUTDOWN=1
username=ubuntu hostname=fwts-live quiet BOOT_IMAGE=/casper/vmlinuz

Test 4 of 4: Gather ACPI driver version.
ACPI Version: 20150619

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 4 info only.
================================================================================

bios_info: Gather BIOS DMI information.
--------------------------------------------------------------------------------
Test 1 of 1: Gather BIOS DMI information
BIOS Vendor       : Dell Inc.
BIOS Version      : A06
BIOS Release Date : 01/19/2015
Board Name        : 0K240Y
Board Serial #    : removed
Board Version     : A02
Board Asset Tag   : 
Chassis Serial #  : removed
Chassis Type      : 7
Chassis Vendor    : Dell Inc.
Chassis Version   : 
Chassic Asset Tag : 
Product Name      : Precision Tower 5810
Product Serial #  : removed
Product UUID      : removed
Product Version   : 01
System Vendor     : Dell Inc.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

oops: Scan kernel log for Oopses.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log oops check.
PASSED: Test 1, Found no oopses in kernel log.
PASSED: Test 1, Found no WARN_ON warnings in kernel log.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

klog: Scan kernel log for errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log error check.
Kernel message: [ 0.132921] [Firmware Bug]: ACPI: BIOS _OSI(Linux) query ignored

ADVICE: This is not exactly a failure mode but a warning from the kernel. The
_OSI() method has implemented a match to the 'Linux' query in the DSDT and this
is redundant because the ACPI driver matches onto the Windows _OSI strings by
default.

Kernel message: [ 0.134523] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S1_] (20150619/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S1 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means that the kernel does not know how to
enter the S1 sleep state, however, it should not be a problem if the S1 sleep
state isn't supported intentionally.

Kernel message: [ 0.134526] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S2_] (20150619/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S2 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means that the kernel does not know how to
enter the S2 sleep state, however, it should not be a problem if the S2 sleep
state isn't supported intentionally.

FAILED [HIGH] KlogAcpiFirmwareError: Test 1, HIGH Kernel message: [ 0.152115]
pci 0000:ff:1e.3: [Firmware Bug]: reg 0x10: invalid BAR (can't size)

ADVICE: The kernel has detected a Firmware bug in the BIOS or ACPI which needs
investigating and fixing.

Found 1 unique errors in kernel log.

================================================================================
0 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mtrr: MTRR tests.
--------------------------------------------------------------------------------
MTRR overview
-------------
Reg 0: 0x0000000080000000 - 0x0000000100000000 (  2048 MB)   Uncached
Reg 1: 0x0000000040000000 - 0x0000000080000000 (  1024 MB)   Uncached
Reg 2: 0x0000030000000000 - 0x0000034000000000 (262144 MB)   Uncached
Reg 3: 0x000000003e000000 - 0x0000000040000000 (    32 MB)   Uncached
Reg 4: 0x00000000e0000000 - 0x00000000f0000000 (   256 MB)   Write-Through
Reg 5: 0x00000000f0000000 - 0x00000000f2000000 (    32 MB)   Write-Through

Test 1 of 3: Validate the kernel MTRR IOMEM setup.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x1000 to 0x953ff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x1000 to 0x953ff (System
RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x100000 to 0x398cbfff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x100000 to 0x398cbfff
(System RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x3b3f3000 to 0x3b3f3fff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x3b3f3000 to 0x3b3f3fff
(System RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x3b402000 to 0x3cffffff
(System RAM) has incorrect attribute Default (Most probably Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x3b402000 to 0x3cffffff
(System RAM) is lacking attribute Write-Back.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0xe0000000 to 0xefffffff
(0000:02:00.0) has incorrect attribute Uncached.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0xf0000000 to 0xf1ffffff
(0000:02:00.0) has incorrect attribute Uncached.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x100000000 to
0x2bfffffff (System RAM) has incorrect attribute Default (Most probably
Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x100000000 to 0x2bfffffff
(System RAM) is lacking attribute Write-Back.

Test 2 of 3: Validate the MTRR setup across all processors.
PASSED: Test 2, All processors have the a consistent MTRR setup.

Test 3 of 3: Test for AMD MtrrFixDramModEn being cleared by the BIOS.
SKIPPED: Test 3, CPU is not an AMD, cannot test.

================================================================================
1 passed, 12 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

acpiinfo: General ACPI information test.
--------------------------------------------------------------------------------
Test 1 of 3: Determine Kernel ACPI version.
Kernel ACPICA driver version: 20150619, supports ACPI 5.0

Test 2 of 3: Determine machine's ACPI version.
FADT X_FIRMWARE_CTRL 64 bit pointer was zero, falling back to using
FIRMWARE_CTRL 32 bit pointer.
FACP ACPI Version: 5.0 

Test 3 of 3: Determine AML compiler.
Determine the compiler used to generate the ACPI AML in the DSDT and SSDT.
Table DSDT, OEM DELL , created with INTL (Intel) compiler.
Table SSDT0, OEM DELL , created with INTL (Intel) compiler.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 3 info only.
================================================================================

uefirtauthvar: Authenticated variable tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 12 aborted, 0 skipped, 0 info only.
================================================================================

uefibootpath: Sanity check for UEFI Boot Path Boot####.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

securebootcert: UEFI secure boot test.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

uefirtmisc: UEFI miscellaneous runtime service interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 3 aborted, 0 skipped, 0 info only.
================================================================================

uefirtvariable: UEFI Runtime service variable interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 8 aborted, 0 skipped, 0 info only.
================================================================================

uefirttime: UEFI Runtime service time interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 35 aborted, 0 skipped, 0 info only.
================================================================================

csm: UEFI Compatibility Support Module test.
--------------------------------------------------------------------------------
Test 1 of 1: UEFI Compatibility Support Module test.
Checking for UEFI Compatibility Support Module (CSM)
Int 10h jumps to 0xc197a in option ROM at: 0xc0000..0xcec00
No CSM: Legacy BIOS firmware has video option ROM with Int 10h support.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

maxreadreq: Test firmware has set PCI Express MaxReadReq to a higher value on
non-motherboard devices.
--------------------------------------------------------------------------------
Test 1 of 1: Test firmware settings MaxReadReq for PCI Express devices.
MaxReadReq for 0000:00:05.4 is low (128).
MaxReadReq for 0000:00:11.0 is low (128).
FAILED [LOW] LowMaxReadReq: Test 1, 2 devices have low MaxReadReq settings.
Firmware may have configured these too low.

ADVICE: The MaxReadRequest size is set too low and will affect performance. It
will provide excellent bus sharing at the cost of bus data transfer rates.
Although not a critical issue, it may be worth considering setting the
MaxReadRequest size to 256 or 512 to increase throughput on the PCI Express bus.
Some drivers (for example the Brocade Fibre Channel driver) allow one to
override the firmware settings. Where possible, this BIOS configuration setting
is worth increasing it a little more for better performance at a small reduction
of bus sharing.


================================================================================
0 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

crs: Test PCI host bridge configuration using _CRS.
--------------------------------------------------------------------------------
Test 1 of 1: Test PCI host bridge configuration using _CRS.
PASSED: Test 1, The kernel has detected a BIOS newer than the end of 2007 (1/19
/2015) and has assumed that your BIOS can correctly specify the host bridge MMIO
aperture using _CRS. If this does not work correctly you can override this by
booting with "pci=nocrs".

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

aspm: PCIe ASPM test.
--------------------------------------------------------------------------------
Test 1 of 2: PCIe ASPM ACPI test.
PCIe ASPM is not controlled by Linux kernel.

ADVICE: BIOS reports that Linux kernel should not modify ASPM settings that BIOS
configured. It can be intentional because hardware vendors identified some
capability bugs between the motherboard and the add-on cards.


Test 2 of 2: PCIe ASPM registers test.
WARNING: Test 2, RP 00h:02h.00h L1 not enabled.
WARNING: Test 2, Device 02h:00h.00h L0s not enabled.
WARNING: Test 2, Device 02h:00h.00h L1 not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.


ADVICE: The ASPM L1 low power Link state is optimized for maximum power savings
with longer entry and exit latencies. Disabling L1 of a PCIe device may
increases power consumption, and will impact the battery life of a mobile system
significantly.

PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, Device 08h:00h.00h L0s not enabled.
WARNING: Test 2, Device 08h:00h.00h L1 not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.


ADVICE: The ASPM L1 low power Link state is optimized for maximum power savings
with longer entry and exit latencies. Disabling L1 of a PCIe device may
increases power consumption, and will impact the battery life of a mobile system
significantly.

PASSED: Test 2, PCIe ASPM setting matched was matched.

================================================================================
2 passed, 0 failed, 5 warnings, 0 aborted, 0 skipped, 0 info only.
================================================================================

dmicheck: DMI/SMBIOS table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Find and test SMBIOS Table Entry Points.
This test tries to find and sanity check the SMBIOS data structures.
PASSED: Test 1, Found SMBIOS Table Entry Point at 0xf0570
SMBIOS Entry Point Structure:
  Anchor String          : _SM_
  Checksum               : 0x7c
  Entry Point Length     : 0x1f
  Major Version          : 0x02
  Minor Version          : 0x08
  Maximum Struct Size    : 0xfd
  Entry Point Revision   : 0x00
  Formatted Area         : 0x00 0x00 0x00 0x00 0x00
  Intermediate Anchor    : _DMI_
  Intermediate Checksum  : 0xb5
  Structure Table Length : 0x101a
  Structure Table Address: 0x000eb250
  # of SMBIOS Structures : 0x0052
  SBMIOS BCD Revision    : 27

PASSED: Test 1, SMBIOS Table Entry Point Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Point Length is valid.
PASSED: Test 1, SMBIOS Table Entry Intermediate Anchor String _DMI_ is valid.
PASSED: Test 1, SMBIOS Table Entry Point Intermediate Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Structure Table Address and Length looks
valid.

Test 2 of 3: Test DMI/SMBIOS tables for errors.
PASSED: Test 2, Entry @ 0x000eb250 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000eb34d 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000eb44a 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000eb547 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000eb644 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000eb741 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000eb772 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000eb7e5 'BIOS Information (Type 0)'
PASSED: Test 2, Entry @ 0x000eb817 'System Information (Type 1)'
PASSED: Test 2, Entry @ 0x000eb85d 'Base Board Information (Type 2)'
FAILED [HIGH] DMIValueOutOfRange: Test 2, Out of range value 0x00 (range allowed
0x01..0x0d) while accessing entry 'Chassis Information (Type 3)' @ 0x000eb89b,
field 'Base Board Type 0', offset 0x15

ADVICE: It may be worth checking against section 7.4 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x000eb8cd 'Processor Information (Type 4)'
PASSED: Test 2, Entry @ 0x000eb931 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000eb955 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000eb979 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000eb99d 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eb9b5 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eb9cd 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eb9e3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eb9fc 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eba15 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eba2e 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eba47 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eba5b 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eba73 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000eba8b 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebaa3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebabb 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebad3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebaeb 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb00 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb15 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb2c 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb42 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb51 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb60 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb6f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb7e 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb8d 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebb9c 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebbaf 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebbc2 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000ebbd5 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ebbed 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ebc05 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ebc1d 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ebc35 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ebc4d 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000ebc65 'On Board Devices (Type 10)'
PASSED: Test 2, Entry @ 0x000ebc80 'OEM Strings (Type 11)'
PASSED: Test 2, Entry @ 0x000ebcbe 'BIOS Language Information (Type 13)'
PASSED: Test 2, Entry @ 0x000ebce5 'Physical Memory Array (Type 16)'
PASSED: Test 2, Entry @ 0x000ebcfe 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000ebd5b 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000ebdc5 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000ebe2f 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000ebe99 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000ebef6 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000ebf60 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000ebfca 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000ec034 'Memory Array Mapped Address (Type 19)'
PASSED: Test 2, Entry @ 0x000ec055 'Memory Device Mapped Address (Type 20)'
PASSED: Test 2, Entry @ 0x000ec07a 'Memory Device Mapped Address (Type 20)'
PASSED: Test 2, Entry @ 0x000ec09f 'System Power Controls (Type 25)'
PASSED: Test 2, Entry @ 0x000ec0aa 'Cooling Device (Type 27)'
PASSED: Test 2, Entry @ 0x000ec0c4 'Cooling Device (Type 27)'
PASSED: Test 2, Entry @ 0x000ec0e5 'Cooling Device (Type 27)'
PASSED: Test 2, Entry @ 0x000ec105 'Cooling Device (Type 27)'
PASSED: Test 2, Entry @ 0x000ec11d 'System Boot Information (Type 32)'
PASSED: Test 2, Entry @ 0x000ec133 'Unknown (Type 130)'
PASSED: Test 2, Entry @ 0x000ec149 'Unknown (Type 131)'
PASSED: Test 2, Entry @ 0x000ec18b 'Unknown (Type 177)'
PASSED: Test 2, Entry @ 0x000ec199 'Unknown (Type 208)'
PASSED: Test 2, Entry @ 0x000ec1ab 'Unknown (Type 210)'
PASSED: Test 2, Entry @ 0x000ec1b9 'Unknown (Type 216)'
PASSED: Test 2, Entry @ 0x000ec1c9 'Unknown (Type 221)'
PASSED: Test 2, Entry @ 0x000ec1de 'Unknown (Type 221)'
PASSED: Test 2, Entry @ 0x000ec1f3 'Unknown (Type 221)'
PASSED: Test 2, Entry @ 0x000ec208 'Unknown (Type 221)'
PASSED: Test 2, Entry @ 0x000ec21d 'Unknown (Type 222)'
PASSED: Test 2, Entry @ 0x000ec22f 'Unknown (Type 255)'
PASSED: Test 2, Entry @ 0x000ec264 'End of Table (Type 127)'

Test 3 of 3: Test DMI/SMBIOS3 tables for errors.
SKIPPED: Test 3, Cannot find SMBIOS30 table entry, skip the test.

================================================================================
87 passed, 1 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

microcode: Test if system is using latest microcode.
--------------------------------------------------------------------------------
Test 1 of 1: Test for most recent microcode being loaded.
This test verifies if the firmware has put a recent revision of the microcode
into the processor at boot time. Recent microcode is important to have all the
required features and errata updates for the processor.
The kernel did not report that CPU 0 has had a microcode update. The current
firmware is revision 0x27 and probably has not been updated.
The kernel did not report that CPU 1 has had a microcode update. The current
firmware is revision 0x27 and probably has not been updated.
The kernel did not report that CPU 2 has had a microcode update. The current
firmware is revision 0x27 and probably has not been updated.
The kernel did not report that CPU 3 has had a microcode update. The current
firmware is revision 0x27 and probably has not been updated.
The kernel did not report that CPU 4 has had a microcode update. The current
firmware is revision 0x27 and probably has not been updated.
The kernel did not report that CPU 5 has had a microcode update. The current
firmware is revision 0x27 and probably has not been updated.
The kernel did not report that CPU 6 has had a microcode update. The current
firmware is revision 0x27 and probably has not been updated.
The kernel did not report that CPU 7 has had a microcode update. The current
firmware is revision 0x27 and probably has not been updated.
SKIPPED: Test 1, Could not determine from kernel log if latest microcode has
been loaded.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

msr: MSR register tests.
--------------------------------------------------------------------------------
Test 1 of 5: Test CPU generic MSRs.
PASSED: Test 1, MSR 0x00000001 P5_MC_TYPE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000006 MONITOR_FILTER_SIZE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000017 PLATFORM_ID is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000002a EBL_CR_POWERON is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000001b APIC_BASE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000003a FEATURE_CONTROL is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000008b BIOS_SIGN_ID is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000000fe MTRRCAP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000174 SYSENTER_CS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000175 SYSENTER_ESP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000176 SYSENTER_EIP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000179 MCG_CAP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000017a MCG_STATUS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000019a CLOCK_MODULATION is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000019b THERM_INTERRUPT is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000001a0 MISC_ENABLE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000001b2 PACKAGE_THERM_INTERRUPT is consistent across 8
CPUs.
PASSED: Test 1, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000001f8 PLATFORM_DCA_CAP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000001f9 CPU_DCA_CAP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000001fa DCA_O_CAP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000200 MTRR_PHYSBASE0 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000201 MTRR_PHYSMASK0 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000202 MTRR_PHYSBASE1 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000203 MTRR_PHYSMASK1 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000204 MTRR_PHYSBASE2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000205 MTRR_PHYSMASK2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000206 MTRR_PHYSBASE3 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000207 MTRR_PHYSMASK3 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000208 MTRR_PHYSBASE4 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000209 MTRR_PHYSMASK4 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020a MTRR_PHYSBASE5 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020b MTRR_PHYSMASK5 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020c MTRR_PHYSBASE6 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020d MTRR_PHYSMASK6 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020e MTRR_PHYSBASE7 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000020f MTRR_PHYSMASK7 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000210 MTRR_PHYSBASE8 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000211 MTRR_PHYSMASK8 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000212 MTRR_PHYSBASE9 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000213 MTRR_PHYSMASK9 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000250 MTRR_FIX64K_000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000258 MTRR_FIX16K_800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000259 MTRR_FIX16K_a00 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000268 MTRR_FIX4K_C000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000269 MTRR_FIX4K_C800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026a MTRR_FIX4K_D000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026b MTRR_FIX4K_D800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026c MTRR_FIX4K_E000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026d MTRR_FIX4K_E800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026e MTRR_FIX4K_F000 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000026f MTRR_FIX4K_F800 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000277 PAT is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000280 MC0_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000281 MC1_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000282 MC2_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000283 MC3_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000284 MC4_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000285 MC5_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000286 MC6_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000287 MC7_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000288 MC8_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000289 MC9_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000028a MC10_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000028b MC11_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000028c MC12_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000028d MC13_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000028e MC14_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000028f MC15_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000290 MC16_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000291 MC17_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000292 MC18_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000293 MC19_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000294 MC20_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000295 MC21_CTL2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000002ff MTRR_DEF_TYPE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x000003f1 PEBS_ENABLE is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000480 VMX_BASIC is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000481 VMX_PINPASED_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000482 VMX_PROCBASED_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000483 VMX_EXIT_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000484 VMX_ENTRY_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000485 VMX_MISC is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000486 VMX_CR0_FIXED0 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000487 VMX_CR0_FIXED1 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000488 VMX_CR4_FIXED0 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000489 VMX_CR4_FIXED1 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000048a VMX_VMX_VMCS_ENUM is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000048b VMX_PROCBASED_CTLS2 is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000048c VMX_EPT_VPID_CAP is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x0000048d VMX_TRUE_PINBASED_CTLS is consistent across 8
CPUs.
PASSED: Test 1, MSR 0x0000048e VMX_TRUE_PROCBASED_CTLS is consistent across 8
CPUs.
PASSED: Test 1, MSR 0x0000048f VMX_TRUE_EXIT_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0x00000490 VMX_TRUE_ENTRY_CTLS is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000080 EFER is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000081 STAR is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000082 LSTAR is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000084 FMASK is consistent across 8 CPUs.
PASSED: Test 1, MSR 0xc0000102 KERNEL_GS_BASE is consistent across 8 CPUs.

Test 2 of 5: Test CPU specific model MSRs.
No model specific tests for model 0x3f.

Test 3 of 5: Test all P State Ratios.
PASSED: Test 3, MSR 0x000000ce Minimum P-State is consistent across 8 CPUs.
PASSED: Test 3, MSR 0x000000ce Maximum P-State is consistent across 8 CPUs.

Test 4 of 5: Test C1 and C3 autodemotion.
PASSED: Test 4, MSR 0x000000e2 C1 and C3 Autodemotion is consistent across 8
CPUs.
C1 and C3 Autodemotion disabled.

Test 5 of 5: Test SMRR MSR registers.
PASSED: Test 5, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 8 CPUs.
PASSED: Test 5, MSR 0x000001f2 SMRR_TYPE is consistent across 8 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 8 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_VALID is consistent across 8 CPUs.

================================================================================
107 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

nx: Test if CPU NX is disabled by the BIOS.
--------------------------------------------------------------------------------
Test 1 of 3: Test CPU NX capability.
PASSED: Test 1, CPU has NX flags, BIOS is not disabling it.

Test 2 of 3: Test all CPUs have same BIOS set NX flag.
This test verifies that all CPUs have the same NX flag setting. Although rare,
BIOS may set the NX flag differently per CPU. 
PASSED: Test 2, All 8 CPUs have the same NX flag set.

Test 3 of 3: Test all CPUs have same msr setting in MSR 0x1a0.
This test verifies that all CPUs have the same NX flag setting by examining the
per CPU MSR register 0x1a0.
PASSED: Test 3, All 8 CPUs have the NX flag in MSR 0x1a0 set.

================================================================================
3 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

cpufreq: CPU frequency scaling tests.
--------------------------------------------------------------------------------
WARNING: Test 1, Cannot set CPU 0 governor to userspace.
Failed to intialise cpufreq to set CPU speed
Test 1 of 7: CPU frequency table consistency
PASSED: Test 1, CPU frequency tables are consistent

Test 2 of 7: CPU frequency table duplicates
PASSED: Test 2, No duplicates in CPU frequency table

Test 3 of 7: CPU frequency firmware limits
PASSED: Test 3, No BIOS limits imposed

Test 4 of 7: CPU frequency claimed maximum
WARNING: Test 4, cpu 0 has claimed frequency of 3600000, higher than max freq of
0
WARNING: Test 4, cpu 1 has claimed frequency of 3600000, higher than max freq of
0
WARNING: Test 4, cpu 2 has claimed frequency of 3600000, higher than max freq of
0
WARNING: Test 4, cpu 3 has claimed frequency of 3600000, higher than max freq of
0
WARNING: Test 4, cpu 4 has claimed frequency of 3600000, higher than max freq of
0
WARNING: Test 4, cpu 5 has claimed frequency of 3600000, higher than max freq of
0
WARNING: Test 4, cpu 6 has claimed frequency of 3600000, higher than max freq of
0
WARNING: Test 4, cpu 7 has claimed frequency of 3600000, higher than max freq of
0
FAILED [MEDIUM] CPUFreqClaimedMax: Test 4, CPU max frequency is unreachable

Test 5 of 7: CPU frequency SW_ANY control
SKIPPED: Test 5, Can't set CPU frequencies

Test 6 of 7: CPU frequency SW_ALL control
SKIPPED: Test 6, Can't set CPU frequencies

Test 7 of 7: CPU frequency performance tests.
FAILED [MEDIUM] CPUFreqSetFailed: Test 7, Can't set CPU frequencies

================================================================================
3 passed, 2 failed, 8 warnings, 0 aborted, 2 skipped, 0 info only.
================================================================================

maxfreq: Test max CPU frequencies against max scaling frequency.
--------------------------------------------------------------------------------
Test 1 of 1: Maximum CPU frequency test.
This test checks the maximum CPU frequency as detected by the kernel for each
CPU against maxiumum frequency as specified by the BIOS frequency scaling
settings.
PASSED: Test 1, 8 CPUs passed the maximum frequency check.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

virt: CPU Virtualisation Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: CPU Virtualisation Configuration test.
Check VT/VMX Virtualization extensions are set up correctly.
PASSED: Test 1, Virtualization extensions supported and enabled by BIOS.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pnp: BIOS Support Installation structure test.
--------------------------------------------------------------------------------
Test 1 of 1: PnP BIOS Support Installation structure test.
This test tries to find and sanity check the Plug and Play BIOS Support
Installation Check structure. 

Found PnP Installation Check structure at 0x000f0b80
  Signature                          : $PnP
  Version                            : 0x10 (1.0)
  Length                             : 0x0021 bytes
  Control Field                      : 0x0000 (Not supported)
  Event Notification Flag Address    : 0x00000000 (undefined)
  Real Mode 16 bit Code Address      : 0xf000:cb96
  Real Mode 16 bit Data Address      : 0xf000:0000
  16 bit Protected Mode Code Address : 0x000fcbbe
  16 bit Protected Mode Data Address : 0x000f0000
  OEM Device Identifier              : 0x00000000 (undefined)

PASSED: Test 1, Version 1.0 detected.
PASSED: Test 1, PnP Installation Check structure is the correct length of 33
bytes.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pciirq: PCI IRQ Routing Table test.
--------------------------------------------------------------------------------
Test 1 of 1: PCI IRQ Routing Table test.
This test tries to find and sanity check the PCI IRQ Routing Table, as defined
by http://www.microsoft.com/taiwan/whdc/archive/pciirq.mspx and described in
pages 233-238 of PCI System Architecture, Fourth Edition, Mindshare, Inc.
(1999). NOTE: The PCI IRQ Routing Table only really knows about ISA IRQs and is
generally not used with APIC. 

Found PCI IRQ Routing Table at 0x000fd4d0
  Signature             : $PIR
  Version               : 0x0100 (1.0)
  Table Size            : 0x0100 bytes (14 slot entries)
  PCI Router ID         : 00:1f.0
  PCI Exclusive IRQs    : 0x0000 (none)
  Compatible PCI Router : 8086:27b8
  Miniport Data         : 0x00000000 (none)
  Reserved              : 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  Checksum              : 0x0d

Bus:Dev Slot  INTA#   INTB#   INTC#   INTD#
 00:01   00  60/0ce8 61/0ce8 62/0c68 63/0c68 
 02:00   02  60/0ce8 61/0ce8 62/0c68 63/0c68 
 00:02   00  60/0ce8 61/0ce8 62/0c68 63/0c68 
 00:03   00  60/0ce8 61/0ce8 62/0c68 63/0c68 
 00:11   00  60/0ce8                         
 00:14   00                          63/0c68 
 00:16   00  60/0ce8 61/0ce8                 
 00:19   00  68/0ce8                         
 00:1a   00                  62/0c68         
 00:1b   00  6a/0ce8                         
 00:1c   00  60/0ce8 61/0ce8                 
 08:00   06  63/0c68 60/0ce8 61/0ce8 62/0c68 
 00:1d   00                  62/0c68         
 00:1f   00  60/0ce8         62/0c68         

PASSED: Test 1, The Compatible PCI Interrupt Router is defined.
PASSED: Test 1, Table size was correct for 14 slot entries.
PASSED: Test 1, Reserved region is set to zero.
PASSED: Test 1, All 14 slots have sane looking link and IRQ bitmaps.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mpcheck: MultiProcessor Tables tests.
--------------------------------------------------------------------------------
The kernel is using the ACPI MADT for SMP configuration information, so the
Multiprocessor Tables are not used by the kernel. Any errors in the tables will
not affect the operation of Linux unless it is booted with ACPI disabled.

NOTE: Since ACPI is being used in preference to the Multiprocessor Tables, any
errors found in the mpcheck tests will be tagged as LOW errors.

Test 1 of 9: Test MP header.
PASSED: Test 1, MP header looks sane.

Test 2 of 9: Test MP CPU entries.
PASSED: Test 2, All 4 CPU entries look sane.

Test 3 of 9: Test MP Bus entries.
PASSED: Test 3, All 11 Bus Entries looked sane.

Test 4 of 9: Test MP IO APIC entries.
PASSED: Test 4, All 2 IO APIC Entries look sane.

Test 5 of 9: Test MP IO Interrupt entries.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 9 (@0x000fd97c) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 10 (@0x000fd984) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 11 (@0x000fd98c) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 12 (@0x000fd994) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 13 (@0x000fd99c) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 14 (@0x000fd9a4) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 15 (@0x000fd9ac) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 16 (@0x000fd9b4) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 17 (@0x000fd9bc) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 18 (@0x000fd9c4) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 19 (@0x000fd9cc) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 20 (@0x000fd9d4) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 21 (@0x000fd9dc) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 22 (@0x000fd9e4) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 23 (@0x000fd9ec) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 24 (@0x000fd9f4) has a
Destination IO APIC ID 0x02 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 25 (@0x000fd9fc) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 26 (@0x000fda04) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 27 (@0x000fda0c) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 28 (@0x000fda14) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 29 (@0x000fda1c) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 30 (@0x000fda24) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 31 (@0x000fda2c) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 32 (@0x000fda34) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 33 (@0x000fda3c) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 34 (@0x000fda44) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 35 (@0x000fda4c) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 36 (@0x000fda54) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 37 (@0x000fda5c) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 38 (@0x000fda64) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 39 (@0x000fda6c) has a
Destination IO APIC ID 0x00 which has not been defined.
FAILED [LOW] MPIOAPICId: Test 5, IO Interrupt Entry 40 (@0x000fda74) has a
Destination IO APIC ID 0x00 which has not been defined.

Test 6 of 9: Test MP Local Interrupt entries.
PASSED: Test 6, All 2 Local Interrupt Entries look sane.

Test 7 of 9: Test MP System Address entries.
PASSED: Test 7, All 5 System Address Space Mapping Entries looks sane.

Test 8 of 9: Test MP Bus Hierarchy entries.
PASSED: Test 8, All 1 Bus Hierarchy Entries look sane.

Test 9 of 9: Test MP Compatible Bus Address Space entries.
PASSED: Test 9, All 2 Compatible Bus Address Space Entries look sane.

================================================================================
8 passed, 32 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

hda_audio: HDA Audio Pin Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: HDA Audio Pin Configuration test.
Checking 'hwC0D0':
Vendor Name    : Realtek
Vendor ID      : 0x10ec0280
Subsystem ID   : 0x10280617
Revision ID    : 0x100003
BIOS pin configurations:
  Pin  Setting
  0x0012 0x4008c000
  0x0013 0x411111f0
  0x0014 0x90170110
  0x0015 0x0221401f
  0x0016 0x411111f0
  0x0017 0x411111f0
  0x0018 0x01a13040
  0x0019 0x411111f0
  0x001a 0x02a19030
  0x001b 0x01014020
  0x001d 0x40400001
  0x001e 0x411111f0
PASSED: Test 1, Default BIOS pin configurations did not have software override.

Checking 'hwC1D0':
Vendor Name    : Nvidia
Vendor ID      : 0x10de0060
Subsystem ID   : 0x10de1098
Revision ID    : 0x100100
BIOS pin configurations:
  Pin  Setting
  0x0004 0x185600f0
  0x0005 0x185600f0
  0x0006 0x585600f0
  0x0007 0x585600f0
PASSED: Test 1, Default BIOS pin configurations did not have software override.


================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

ebda: Test EBDA region is mapped and reserved in memory map table.
--------------------------------------------------------------------------------
Test 1 of 1: Test EBDA is reserved in E820 table.
The Extended BIOS Data Area (EBDA) is normally located at the end of the low
640K region and is typically 2-4K in size. It should be reserved in the Int 15
AX=E820 BIOS memory map table.
PASSED: Test 1, EBDA region mapped at 0x95400 and reserved as a 42K region in
the Int 15 AX=E820 BIOS memory map table at 0x95400..0x9ffff.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

bios32: BIOS32 Service Directory test.
--------------------------------------------------------------------------------
Test 1 of 1: BIOS32 Service Directory test.
This test tries to find and sanity check the BIOS32 Service Directory as defined
in the Standard BIOS 32-bit Service Directory Proposal, Revision 0.4 May 24,
1993, Phoenix Technologies Ltd and also the PCI BIOS specification.
Found BIOS32 Service Directory at 0x000e7000
  Signature  : _32_
  Entry Point: 0x000e7020
  Revsion    : 0x00
  Length     : 0x01
  Checksum   : 0x3e

PASSED: Test 1, Service Directory Entry Point 0x000e7020 is not in high memory.
PASSED: Test 1, Service Directory Length is 1 (1 x 16 bytes) as expected.
PASSED: Test 1, Service Directory Revision is 0x00 and is supported by the
kernel.
PASSED: Test 1, Service Directory checksum passed.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

apicedge: APIC edge/level test.
--------------------------------------------------------------------------------
Test 1 of 1: Legacy and PCI Interrupt Edge/Level trigger tests.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 0 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 1 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 4 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 8 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 12 is
incorrectly level triggered.

================================================================================
0 passed, 5 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

xenv: XENV Xen Environment Table tests.
--------------------------------------------------------------------------------
ACPI XENV table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

xsdt: XSDT Extended System Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: XSDT Extended System Description Table test.
PASSED: Test 1, No issues found in XSDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

wmi: Extract and analyse Windows Management Instrumentation (WMI).
--------------------------------------------------------------------------------
Test 1 of 1: Windows Management Instrumentation test.

\_SB_.SRIO._WDG (1 of 1)
  GUID: 0E7AF9F2-44A1-4C6F-A4B0-A7678480DA61
  WMI Method:
    Flags          : 0x02 (Method)
    Object ID      : AA
    Instance       : 0x01
PASSED: Test 1, 0E7AF9F2-44A1-4C6F-A4B0-A7678480DA61 has associated method
\_SB_.SRIO.WMAA

\_SB_.WMTF._WDG (1 of 1)
  GUID: 86CCFD48-205E-4A77-9C48-2021CBEDE341
  WMI Method:
    Flags          : 0x02 (Method)
    Object ID      : TF
    Instance       : 0x01
FAILED [LOW] WMIMultipleMethod: Test 1, GUID
86CCFD48-205E-4A77-9C48-2021CBEDE341 has multiple associated methods WMTF
defined, this is a firmware bug that leads to ambigous behaviour.

================================================================================
1 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

wdat: WDAT Microsoft Hardware Watchdog Action Table test.
--------------------------------------------------------------------------------
ACPI WDAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

wakealarm: ACPI Wakealarm tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test existence of RTC with alarm interface.
PASSED: Test 1, RTC with a RTC alarm ioctl() interface found.

Test 2 of 4: Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 1 seconds in the future.
PASSED: Test 2, RTC wakealarm was triggered successfully.

Test 3 of 4: Test if wakealarm is fired.
PASSED: Test 3, RTC wakealarm triggered and fired successfully.

Test 4 of 4: Multiple wakealarm firing tests.
Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 2 seconds in the future.
Trigger wakealarm for 3 seconds in the future.
Trigger wakealarm for 4 seconds in the future.
PASSED: Test 4, RTC wakealarm triggered and fired successfully.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

waet: WAET Windows ACPI Emulated Devices Table test.
--------------------------------------------------------------------------------
ACPI WAET table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

uefi: UEFI Data Table test.
--------------------------------------------------------------------------------
Test 1 of 1: UEFI Data Table test.
UEFI ACPI Data Table:
  Identifier: C68ED8E2-9DC6-4CBD-9D94-DB65ACC5C332
  DataOffset: 0x0036
  SW SMI Number: 0x00000001
  Buffer Ptr Address: 0x0000000000000000
PASSED: Test 1, No issues found in UEFI table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

tpm2: TPM2 Trusted Platform Module 2 test.
--------------------------------------------------------------------------------
ACPI TPM2 table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

tcpa: TCPA Trusted Computing Platform Alliance Capabilities Table test.
--------------------------------------------------------------------------------
ACPI TCPA table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

syntaxcheck: Re-assemble DSDT and SSDTs to find syntax errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble and reassemble DSDT and SSDTs.

Checking ACPI table DSDT (#0)

FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 85
Line | AML source
--------------------------------------------------------------------------------
00082|         }
00083| 
00084|         Store (0x03, OSVR) /* \OSVR */
00085|         If (CondRefOf (\_OSI, Local0))
     |                                   ^
     | Warning 3144: Method Local is set but never used    (Local0)
00086|         {
00087|             If (_OSI ("Windows 2001"))
00088|             {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
160
Line | AML source
--------------------------------------------------------------------------------
00157|         Return (OSVR) /* \OSVR */
00158|     }
00159| 
00160|     Method (MCTH, 2, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00161|     {
00162|         If (LLess (SizeOf (Arg0), SizeOf (Arg1)))
00163|         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 262
Line | AML source
--------------------------------------------------------------------------------
00259|         Name (OSYS, 0x00)
00260|         Method (_INI, 0, NotSerialized)  // _INI: Initialize
00261|         {
00262|             If (CondRefOf (_OSI, Local0))
     |                                      ^
     | Warning 3144: Method Local is set but never used    (Local0)
00263|             {
00264|                 If (_OSI ("Windows 2001.1 SP1"))
00265|                 {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 575
Line | AML source
--------------------------------------------------------------------------------
00572|         RTCS,   1
00573|     }
00574| 
00575|     Method (IPTS, 1, NotSerialized)
     |               ^
     | Remark 2146: Method Argument is never used    (Arg0)
00576|     {
00577|         Store (0x72, IO80) /* \IO80 */
00578|         Store (0x01, US1S) /* \US1S */
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 2582
Line | AML source
--------------------------------------------------------------------------------
02579|             {
02580|                 Store (0x00, Local0)
02581|                 Store (0x00, Local1)
02582|                 Store (TPID (Arg0, Arg1), Local1)
     |                                               ^
     | Warning 3144: Method Local is set but never used    (Local1)
02583|                 Store (0x00, Local2)
02584|                 Add (Local2, DerefOf (Index (APTC, Arg1)), Local2)
02585|                 If (LEqual (Local2, 0xFF))
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
2621
Line | AML source
--------------------------------------------------------------------------------
02618|                 }
02619|             }
02620| 
02621|             Method (LAPC, 2, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
02622|             {
02623|                 Name (APIC, Buffer (0x08) {})
02624|                 CreateByteField (APIC, 0x00, TYPE)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 2944
Line | AML source
--------------------------------------------------------------------------------
02941|                 Return (0x0F)
02942|             }
02943| 
02944|             Method (WMAA, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
02945|             {
02946|                 Store (Arg2, Local0)
02947|                 CreateWordField (Local0, 0x00, CPW0)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2950
Line | AML source
--------------------------------------------------------------------------------
02947|                 CreateWordField (Local0, 0x00, CPW0)
02948|                 CreateByteField (Local0, 0x02, CPB2)
02949|                 CreateByteField (Local0, 0x04, CPB4)
02950|                 CreateByteField (Local0, 0x05, CPB5)
     |                                                  ^
     | Remark 2089: Object is not referenced    (Name is within method [WMAA])
02951|                 Store (CPW0, WSIS) /* \WSIS */
02952|                 Store (CPB2, WSIB) /* \WSIB */
02953|                 Store (CPB4, WSIF) /* \WSIF */
================================================================================
FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
5635
Line | AML source
--------------------------------------------------------------------------------
05632|                     0x00000000,         // Translation Offset
05633|                     0xABFFC000,         // Length
05634|                     ,, , AddressRangeMemory, TypeStatic)
05635|                 QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
05636|                     0x0000000000000000, // Granularity
05637|                     0x0000000000000000, // Range Minimum
05638|                     0x0000000000000000, // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

Assembler remark in line 5994
Line | AML source
--------------------------------------------------------------------------------
05991|                     })
05992|                     Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
05993|                     {
05994|                         Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                 ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
05995|                         While (One)
05996|                         {
05997|                             Store (ToInteger (HPTS), _T_0) /* \_SB_.PCI0.LPC0.HPET._CRS._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 6170
Line | AML source
--------------------------------------------------------------------------------
06167| 
06168|                 Method (UXDV, 1, Serialized)
06169|                 {
06170|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
06171|                     Store (0xFF, Local0)
06172|                     While (One)
06173|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6214
Line | AML source
--------------------------------------------------------------------------------
06211|                     Return (Local0)
06212|                 }
06213| 
06214|                 Method (RRIO, 4, Serialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg3)
06215|                 {
06216|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
06217|                     While (One)
================================================================================
Assembler remark in line 6216
Line | AML source
--------------------------------------------------------------------------------
06213| 
06214|                 Method (RRIO, 4, Serialized)
06215|                 {
06216|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
06217|                     While (One)
06218|                     {
06219|                         Store (Add (Arg0, 0x00), _T_0) /* \_SB_.PCI0.LPC0.RRIO._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6426
Line | AML source
--------------------------------------------------------------------------------
06423|                     }
06424|                 }
06425| 
06426|                 Method (RDMA, 3, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
06427|                 {
06428|                 }
06429| 
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6426
Line | AML source
--------------------------------------------------------------------------------
06423|                     }
06424|                 }
06425| 
06426|                 Method (RDMA, 3, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg1)
06427|                 {
06428|                 }
06429| 
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6426
Line | AML source
--------------------------------------------------------------------------------
06423|                     }
06424|                 }
06425| 
06426|                 Method (RDMA, 3, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg2)
06427|                 {
06428|                 }
06429| 
================================================================================
FAILED [LOW] AMLAsmASL_MSG_LIST_LENGTH_SHORT: Test 1, Assembler remark in line
6474
Line | AML source
--------------------------------------------------------------------------------
06471|                         Return (CRS) /* \_SB_.PCI0.LPC0.SIO1.CRS_ */
06472|                     }
06473| 
06474|                     Name (DCAT, Package (0x15)
     |                                            ^
     | Remark 2063: Initializer list shorter than declared package length  
06475|                     {
06476|                         0x04, 
06477|                         0xFF, 
================================================================================

ADVICE: (for Remark #2063, ASL_MSG_LIST_LENGTH_SHORT): The provided data is
actually shorter than the specified length, for example in an ACPI buffer
containing vendor data.

FAILED [MEDIUM] AMLAsmASL_MSG_TIMEOUT: Test 1, Assembler warning in line 6496
Line | AML source
--------------------------------------------------------------------------------
06493|                     Mutex (MUT0, 0x00)
06494|                     Method (ENFG, 1, NotSerialized)
06495|                     {
06496|                         Acquire (MUT0, 0x0FFF)
     |                                            ^
     | Warning 3130: Result is not used, possible operator timeout will be missed  
06497|                         Store (ENTK, INDX) /* \_SB_.PCI0.LPC0.SIO1.INDX */
06498|                         Store (Arg0, LDN) /* \_SB_.PCI0.LPC0.SIO1.LDN_ */
06499|                     }
================================================================================

ADVICE: (for Warning #3130, ASL_MSG_TIMEOUT): The operation can possibly timeout
, and hence the return value indicates an timeout error. However, because the
return value is not checked this very probably indicates that the code is buggy.
A possible scenario is that a mutex times out and the code attempts to access
data in a critical region when it should not. This will lead to undefined
behaviour. This should be fixed.

FAILED [MEDIUM] AMLAsmASL_MSG_RETURN_TYPES: Test 1, Assembler warning in line
6570
Line | AML source
--------------------------------------------------------------------------------
06567|                         Return (DerefOf (Index (DCAT, Arg0)))
06568|                     }
06569| 
06570|                     Method (DSTA, 1, NotSerialized)
     |                               ^
     | Warning 3115: Not all control paths return a value    (DSTA)
06571|                     {
06572|                         ENFG (CGLD (Arg0))
06573|                         Store (ACTR, Local0)
================================================================================

ADVICE: (for Warning #3115, ASL_MSG_RETURN_TYPES): Some of the execution paths
do not return a value. All control paths that return must return a value
otherwise unexpected behaviour may occur. This error occurs because a branch on
an conditional op-code returns a value and another does not, which is
inconsistent behaviour.

FAILED [MEDIUM] AMLAsmASL_MSG_SOME_NO_RETVAL: Test 1, Assembler warning in line
6716
Line | AML source
--------------------------------------------------------------------------------
06713|                     Name (LDN, 0x04)
06714|                     Method (_STA, 0, NotSerialized)  // _STA: Status
06715|                     {
06716|                         Return (^^SIO1.DSTA (0x00))
     |                                          ^
     | Warning 3122: Called method may not always return a value  
06717|                     }
06718| 
06719|                     Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
================================================================================

ADVICE: (for Warning #3122, ASL_MSG_SOME_NO_RETVAL): Method sometimes return a
value, sometimes it does not. This is inconsistent behaviour and a bug in the
AML. This needs to be fixed to avoid incorrect behaviour at run time.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 7054
Line | AML source
--------------------------------------------------------------------------------
07051|                     Return (Multiply (0x1E, Subtract (0x09, Add (Arg2, Arg3))))
07052|                 }
07053| 
07054|                 Method (GDMA, 5, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg3)
07055|                 {
07056|                     If (LEqual (Arg0, 0x01))
07057|                     {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7090
Line | AML source
--------------------------------------------------------------------------------
07087|                     Return (Local0)
07088|                 }
07089| 
07090|                 Method (SPIO, 3, NotSerialized)
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07091|                 {
07092|                     Name (PBUF, Buffer (0x05)
07093|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7140
Line | AML source
--------------------------------------------------------------------------------
07137|                     Return (PBUF) /* \_SB_.PCI0.SAT2.SPIO.PBUF */
07138|                 }
07139| 
07140|                 Method (SDMA, 3, NotSerialized)
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07141|                 {
07142|                     Name (PBUF, Buffer (0x05)
07143|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7214
Line | AML source
--------------------------------------------------------------------------------
07211|                     Name (TPI0, 0x00)
07212|                     Name (TDM1, 0x00)
07213|                     Name (TPI1, 0x00)
07214|                     Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07215|                     {
07216|                         Name (PBUF, Buffer (0x14)
07217|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7267
Line | AML source
--------------------------------------------------------------------------------
07264|                         Return (PBUF) /* \_SB_.PCI0.SAT2.PRID._GTM.PBUF */
07265|                     }
07266| 
07267|                     Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07268|                     {
07269|                         CreateDWordField (Arg0, 0x00, PIO0)
07270|                         CreateDWordField (Arg0, 0x04, DMA0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7373
Line | AML source
--------------------------------------------------------------------------------
07370|                     Device (MAST)
07371|                     {
07372|                         Name (_ADR, 0x00)  // _ADR: Address
07373|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07374|                         {
07375|                             Name (ATA0, Buffer (0x0E)
07376|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7407
Line | AML source
--------------------------------------------------------------------------------
07404|                     Device (SLAV)
07405|                     {
07406|                         Name (_ADR, 0x01)  // _ADR: Address
07407|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07408|                         {
07409|                             Name (ATA1, Buffer (0x0E)
07410|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7468
Line | AML source
--------------------------------------------------------------------------------
07465|                         /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  /* ........ */
07466|                         /* 0010 */  0x00, 0x00, 0x00, 0x00                           /* .... */
07467|                     })
07468|                     Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07469|                     {
07470|                         Name (PBUF, Buffer (0x14)
07471|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7521
Line | AML source
--------------------------------------------------------------------------------
07518|                         Return (PBUF) /* \_SB_.PCI0.SAT2.SECD._GTM.PBUF */
07519|                     }
07520| 
07521|                     Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07522|                     {
07523|                         CreateDWordField (Arg0, 0x00, PIO0)
07524|                         CreateDWordField (Arg0, 0x04, DMA0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7629
Line | AML source
--------------------------------------------------------------------------------
07626|                     Device (MAST)
07627|                     {
07628|                         Name (_ADR, 0x00)  // _ADR: Address
07629|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07630|                         {
07631|                             Name (ATA0, Buffer (0x0E)
07632|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7663
Line | AML source
--------------------------------------------------------------------------------
07660|                     Device (SLAV)
07661|                     {
07662|                         Name (_ADR, 0x01)  // _ADR: Address
07663|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07664|                         {
07665|                             Name (ATA1, Buffer (0x0E)
07666|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
8399
Line | AML source
--------------------------------------------------------------------------------
08396| 
08397|                 Method (OSHP, 0, NotSerialized)
08398|                 {
08399|                     Store (SSTS, SSTS) /* \_SB_.PCI0.DMI0.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
08400|                     Store (0x00, HGPE) /* \_SB_.PCI0.DMI0.HGPE */
08401|                 }
08402| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 8482
Line | AML source
--------------------------------------------------------------------------------
08479| 
08480|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
08481|                 {
08482|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
08483|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
08484|                     While (One)
08485|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 8483
Line | AML source
--------------------------------------------------------------------------------
08480|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
08481|                 {
08482|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
08483|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
08484|                     While (One)
08485|                     {
08486|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.DMI0._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 8515
Line | AML source
--------------------------------------------------------------------------------
08512|                     }
08513|                 }
08514| 
08515|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
08516|                 {
08517|                     Store (0xFF, IO80) /* \IO80 */
08518|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 8537
Line | AML source
--------------------------------------------------------------------------------
08534|                     HPCC (Local0)
08535|                 }
08536| 
08537|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
08538|                 {
08539|                     If (And (HPEV, SSTS))
08540|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 8551
Line | AML source
--------------------------------------------------------------------------------
08548|                     Return (0xFF)
08549|                 }
08550| 
08551|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
08552|                 {
08553|                     Store (0xFE, IO80) /* \IO80 */
08554|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 8572
Line | AML source
--------------------------------------------------------------------------------
08569|                     Sleep (0x0A)
08570|                 }
08571| 
08572|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
08573|                 {
08574|                     Sleep (0xC8)
08575|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
9010
Line | AML source
--------------------------------------------------------------------------------
09007| 
09008|                 Method (OSHP, 0, NotSerialized)
09009|                 {
09010|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR1A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
09011|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR1A.HGPE */
09012|                 }
09013| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 9093
Line | AML source
--------------------------------------------------------------------------------
09090| 
09091|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
09092|                 {
09093|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
09094|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
09095|                     While (One)
09096|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 9094
Line | AML source
--------------------------------------------------------------------------------
09091|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
09092|                 {
09093|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
09094|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
09095|                     While (One)
09096|                     {
09097|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR1A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9126
Line | AML source
--------------------------------------------------------------------------------
09123|                     }
09124|                 }
09125| 
09126|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
09127|                 {
09128|                     Store (0xFF, IO80) /* \IO80 */
09129|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9148
Line | AML source
--------------------------------------------------------------------------------
09145|                     HPCC (Local0)
09146|                 }
09147| 
09148|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
09149|                 {
09150|                     If (And (HPEV, SSTS))
09151|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9162
Line | AML source
--------------------------------------------------------------------------------
09159|                     Return (0xFF)
09160|                 }
09161| 
09162|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
09163|                 {
09164|                     Store (0xFE, IO80) /* \IO80 */
09165|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9183
Line | AML source
--------------------------------------------------------------------------------
09180|                     Sleep (0x0A)
09181|                 }
09182| 
09183|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
09184|                 {
09185|                     Sleep (0xC8)
09186|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
9697
Line | AML source
--------------------------------------------------------------------------------
09694| 
09695|                 Method (OSHP, 0, NotSerialized)
09696|                 {
09697|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR1B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
09698|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR1B.HGPE */
09699|                 }
09700| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 9780
Line | AML source
--------------------------------------------------------------------------------
09777| 
09778|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
09779|                 {
09780|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
09781|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
09782|                     While (One)
09783|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 9781
Line | AML source
--------------------------------------------------------------------------------
09778|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
09779|                 {
09780|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
09781|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
09782|                     While (One)
09783|                     {
09784|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR1B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9813
Line | AML source
--------------------------------------------------------------------------------
09810|                     }
09811|                 }
09812| 
09813|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
09814|                 {
09815|                     Store (0xFF, IO80) /* \IO80 */
09816|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9835
Line | AML source
--------------------------------------------------------------------------------
09832|                     HPCC (Local0)
09833|                 }
09834| 
09835|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
09836|                 {
09837|                     If (And (HPEV, SSTS))
09838|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9849
Line | AML source
--------------------------------------------------------------------------------
09846|                     Return (0xFF)
09847|                 }
09848| 
09849|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
09850|                 {
09851|                     Store (0xFE, IO80) /* \IO80 */
09852|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 9870
Line | AML source
--------------------------------------------------------------------------------
09867|                     Sleep (0x0A)
09868|                 }
09869| 
09870|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
09871|                 {
09872|                     Sleep (0xC8)
09873|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
10369
Line | AML source
--------------------------------------------------------------------------------
10366| 
10367|                 Method (OSHP, 0, NotSerialized)
10368|                 {
10369|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR2A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
10370|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR2A.HGPE */
10371|                 }
10372| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 10452
Line | AML source
--------------------------------------------------------------------------------
10449| 
10450|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
10451|                 {
10452|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
10453|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
10454|                     While (One)
10455|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 10453
Line | AML source
--------------------------------------------------------------------------------
10450|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
10451|                 {
10452|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
10453|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
10454|                     While (One)
10455|                     {
10456|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR2A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 10485
Line | AML source
--------------------------------------------------------------------------------
10482|                     }
10483|                 }
10484| 
10485|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
10486|                 {
10487|                     Store (0xFF, IO80) /* \IO80 */
10488|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 10507
Line | AML source
--------------------------------------------------------------------------------
10504|                     HPCC (Local0)
10505|                 }
10506| 
10507|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
10508|                 {
10509|                     If (And (HPEV, SSTS))
10510|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 10521
Line | AML source
--------------------------------------------------------------------------------
10518|                     Return (0xFF)
10519|                 }
10520| 
10521|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
10522|                 {
10523|                     Store (0xFE, IO80) /* \IO80 */
10524|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 10542
Line | AML source
--------------------------------------------------------------------------------
10539|                     Sleep (0x0A)
10540|                 }
10541| 
10542|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
10543|                 {
10544|                     Sleep (0xC8)
10545|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
11056
Line | AML source
--------------------------------------------------------------------------------
11053| 
11054|                 Method (OSHP, 0, NotSerialized)
11055|                 {
11056|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR2B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
11057|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR2B.HGPE */
11058|                 }
11059| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 11139
Line | AML source
--------------------------------------------------------------------------------
11136| 
11137|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
11138|                 {
11139|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
11140|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
11141|                     While (One)
11142|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 11140
Line | AML source
--------------------------------------------------------------------------------
11137|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
11138|                 {
11139|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
11140|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
11141|                     While (One)
11142|                     {
11143|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR2B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11172
Line | AML source
--------------------------------------------------------------------------------
11169|                     }
11170|                 }
11171| 
11172|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
11173|                 {
11174|                     Store (0xFF, IO80) /* \IO80 */
11175|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11194
Line | AML source
--------------------------------------------------------------------------------
11191|                     HPCC (Local0)
11192|                 }
11193| 
11194|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
11195|                 {
11196|                     If (And (HPEV, SSTS))
11197|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11208
Line | AML source
--------------------------------------------------------------------------------
11205|                     Return (0xFF)
11206|                 }
11207| 
11208|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
11209|                 {
11210|                     Store (0xFE, IO80) /* \IO80 */
11211|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11229
Line | AML source
--------------------------------------------------------------------------------
11226|                     Sleep (0x0A)
11227|                 }
11228| 
11229|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
11230|                 {
11231|                     Sleep (0xC8)
11232|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
11743
Line | AML source
--------------------------------------------------------------------------------
11740| 
11741|                 Method (OSHP, 0, NotSerialized)
11742|                 {
11743|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR2C.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
11744|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR2C.HGPE */
11745|                 }
11746| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 11826
Line | AML source
--------------------------------------------------------------------------------
11823| 
11824|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
11825|                 {
11826|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
11827|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
11828|                     While (One)
11829|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 11827
Line | AML source
--------------------------------------------------------------------------------
11824|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
11825|                 {
11826|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
11827|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
11828|                     While (One)
11829|                     {
11830|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR2C._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11859
Line | AML source
--------------------------------------------------------------------------------
11856|                     }
11857|                 }
11858| 
11859|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
11860|                 {
11861|                     Store (0xFF, IO80) /* \IO80 */
11862|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11881
Line | AML source
--------------------------------------------------------------------------------
11878|                     HPCC (Local0)
11879|                 }
11880| 
11881|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
11882|                 {
11883|                     If (And (HPEV, SSTS))
11884|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11895
Line | AML source
--------------------------------------------------------------------------------
11892|                     Return (0xFF)
11893|                 }
11894| 
11895|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
11896|                 {
11897|                     Store (0xFE, IO80) /* \IO80 */
11898|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 11916
Line | AML source
--------------------------------------------------------------------------------
11913|                     Sleep (0x0A)
11914|                 }
11915| 
11916|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
11917|                 {
11918|                     Sleep (0xC8)
11919|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
12430
Line | AML source
--------------------------------------------------------------------------------
12427| 
12428|                 Method (OSHP, 0, NotSerialized)
12429|                 {
12430|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR2D.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
12431|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR2D.HGPE */
12432|                 }
12433| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 12513
Line | AML source
--------------------------------------------------------------------------------
12510| 
12511|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
12512|                 {
12513|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
12514|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
12515|                     While (One)
12516|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 12514
Line | AML source
--------------------------------------------------------------------------------
12511|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
12512|                 {
12513|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
12514|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
12515|                     While (One)
12516|                     {
12517|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR2D._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12546
Line | AML source
--------------------------------------------------------------------------------
12543|                     }
12544|                 }
12545| 
12546|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
12547|                 {
12548|                     Store (0xFF, IO80) /* \IO80 */
12549|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12568
Line | AML source
--------------------------------------------------------------------------------
12565|                     HPCC (Local0)
12566|                 }
12567| 
12568|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
12569|                 {
12570|                     If (And (HPEV, SSTS))
12571|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12582
Line | AML source
--------------------------------------------------------------------------------
12579|                     Return (0xFF)
12580|                 }
12581| 
12582|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
12583|                 {
12584|                     Store (0xFE, IO80) /* \IO80 */
12585|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 12603
Line | AML source
--------------------------------------------------------------------------------
12600|                     Sleep (0x0A)
12601|                 }
12602| 
12603|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
12604|                 {
12605|                     Sleep (0xC8)
12606|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
13117
Line | AML source
--------------------------------------------------------------------------------
13114| 
13115|                 Method (OSHP, 0, NotSerialized)
13116|                 {
13117|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR3A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
13118|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR3A.HGPE */
13119|                 }
13120| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 13200
Line | AML source
--------------------------------------------------------------------------------
13197| 
13198|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
13199|                 {
13200|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
13201|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
13202|                     While (One)
13203|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 13201
Line | AML source
--------------------------------------------------------------------------------
13198|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
13199|                 {
13200|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
13201|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
13202|                     While (One)
13203|                     {
13204|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR3A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13233
Line | AML source
--------------------------------------------------------------------------------
13230|                     }
13231|                 }
13232| 
13233|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
13234|                 {
13235|                     Store (0xFF, IO80) /* \IO80 */
13236|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13255
Line | AML source
--------------------------------------------------------------------------------
13252|                     HPCC (Local0)
13253|                 }
13254| 
13255|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
13256|                 {
13257|                     If (And (HPEV, SSTS))
13258|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13269
Line | AML source
--------------------------------------------------------------------------------
13266|                     Return (0xFF)
13267|                 }
13268| 
13269|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
13270|                 {
13271|                     Store (0xFE, IO80) /* \IO80 */
13272|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13290
Line | AML source
--------------------------------------------------------------------------------
13287|                     Sleep (0x0A)
13288|                 }
13289| 
13290|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
13291|                 {
13292|                     Sleep (0xC8)
13293|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
13804
Line | AML source
--------------------------------------------------------------------------------
13801| 
13802|                 Method (OSHP, 0, NotSerialized)
13803|                 {
13804|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR3B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
13805|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR3B.HGPE */
13806|                 }
13807| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 13887
Line | AML source
--------------------------------------------------------------------------------
13884| 
13885|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
13886|                 {
13887|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
13888|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
13889|                     While (One)
13890|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 13888
Line | AML source
--------------------------------------------------------------------------------
13885|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
13886|                 {
13887|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
13888|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
13889|                     While (One)
13890|                     {
13891|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR3B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13920
Line | AML source
--------------------------------------------------------------------------------
13917|                     }
13918|                 }
13919| 
13920|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
13921|                 {
13922|                     Store (0xFF, IO80) /* \IO80 */
13923|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13942
Line | AML source
--------------------------------------------------------------------------------
13939|                     HPCC (Local0)
13940|                 }
13941| 
13942|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
13943|                 {
13944|                     If (And (HPEV, SSTS))
13945|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13956
Line | AML source
--------------------------------------------------------------------------------
13953|                     Return (0xFF)
13954|                 }
13955| 
13956|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
13957|                 {
13958|                     Store (0xFE, IO80) /* \IO80 */
13959|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 13977
Line | AML source
--------------------------------------------------------------------------------
13974|                     Sleep (0x0A)
13975|                 }
13976| 
13977|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
13978|                 {
13979|                     Sleep (0xC8)
13980|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
14491
Line | AML source
--------------------------------------------------------------------------------
14488| 
14489|                 Method (OSHP, 0, NotSerialized)
14490|                 {
14491|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR3C.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
14492|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR3C.HGPE */
14493|                 }
14494| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 14574
Line | AML source
--------------------------------------------------------------------------------
14571| 
14572|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
14573|                 {
14574|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
14575|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
14576|                     While (One)
14577|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 14575
Line | AML source
--------------------------------------------------------------------------------
14572|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
14573|                 {
14574|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
14575|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
14576|                     While (One)
14577|                     {
14578|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR3C._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 14607
Line | AML source
--------------------------------------------------------------------------------
14604|                     }
14605|                 }
14606| 
14607|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
14608|                 {
14609|                     Store (0xFF, IO80) /* \IO80 */
14610|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 14629
Line | AML source
--------------------------------------------------------------------------------
14626|                     HPCC (Local0)
14627|                 }
14628| 
14629|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
14630|                 {
14631|                     If (And (HPEV, SSTS))
14632|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 14643
Line | AML source
--------------------------------------------------------------------------------
14640|                     Return (0xFF)
14641|                 }
14642| 
14643|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
14644|                 {
14645|                     Store (0xFE, IO80) /* \IO80 */
14646|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 14664
Line | AML source
--------------------------------------------------------------------------------
14661|                     Sleep (0x0A)
14662|                 }
14663| 
14664|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
14665|                 {
14666|                     Sleep (0xC8)
14667|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
15178
Line | AML source
--------------------------------------------------------------------------------
15175| 
15176|                 Method (OSHP, 0, NotSerialized)
15177|                 {
15178|                     Store (SSTS, SSTS) /* \_SB_.PCI0.BR3D.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
15179|                     Store (0x00, HGPE) /* \_SB_.PCI0.BR3D.HGPE */
15180|                 }
15181| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 15261
Line | AML source
--------------------------------------------------------------------------------
15258| 
15259|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
15260|                 {
15261|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
15262|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
15263|                     While (One)
15264|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 15262
Line | AML source
--------------------------------------------------------------------------------
15259|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
15260|                 {
15261|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
15262|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
15263|                     While (One)
15264|                     {
15265|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI0.BR3D._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 15294
Line | AML source
--------------------------------------------------------------------------------
15291|                     }
15292|                 }
15293| 
15294|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
15295|                 {
15296|                     Store (0xFF, IO80) /* \IO80 */
15297|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 15316
Line | AML source
--------------------------------------------------------------------------------
15313|                     HPCC (Local0)
15314|                 }
15315| 
15316|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
15317|                 {
15318|                     If (And (HPEV, SSTS))
15319|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 15330
Line | AML source
--------------------------------------------------------------------------------
15327|                     Return (0xFF)
15328|                 }
15329| 
15330|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
15331|                 {
15332|                     Store (0xFE, IO80) /* \IO80 */
15333|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 15351
Line | AML source
--------------------------------------------------------------------------------
15348|                     Sleep (0x0A)
15349|                 }
15350| 
15351|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
15352|                 {
15353|                     Sleep (0xC8)
15354|                     If (ABPS (0x00))
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 15910
Line | AML source
--------------------------------------------------------------------------------
15907|                     Return (Multiply (0x1E, Subtract (0x09, Add (Arg2, Arg3))))
15908|                 }
15909| 
15910|                 Method (GDMA, 5, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg3)
15911|                 {
15912|                     If (LEqual (Arg0, 0x01))
15913|                     {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
15946
Line | AML source
--------------------------------------------------------------------------------
15943|                     Return (Local0)
15944|                 }
15945| 
15946|                 Method (SPIO, 3, NotSerialized)
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
15947|                 {
15948|                     Name (PBUF, Buffer (0x05)
15949|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
15996
Line | AML source
--------------------------------------------------------------------------------
15993|                     Return (PBUF) /* \_SB_.PCI0.SAT1.SPIO.PBUF */
15994|                 }
15995| 
15996|                 Method (SDMA, 3, NotSerialized)
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
15997|                 {
15998|                     Name (PBUF, Buffer (0x05)
15999|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16070
Line | AML source
--------------------------------------------------------------------------------
16067|                     Name (TPI0, 0x00)
16068|                     Name (TDM1, 0x00)
16069|                     Name (TPI1, 0x00)
16070|                     Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16071|                     {
16072|                         Name (PBUF, Buffer (0x14)
16073|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16123
Line | AML source
--------------------------------------------------------------------------------
16120|                         Return (PBUF) /* \_SB_.PCI0.SAT1.PRID._GTM.PBUF */
16121|                     }
16122| 
16123|                     Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16124|                     {
16125|                         CreateDWordField (Arg0, 0x00, PIO0)
16126|                         CreateDWordField (Arg0, 0x04, DMA0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16229
Line | AML source
--------------------------------------------------------------------------------
16226|                     Device (MAST)
16227|                     {
16228|                         Name (_ADR, 0x00)  // _ADR: Address
16229|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16230|                         {
16231|                             Name (ATA0, Buffer (0x0E)
16232|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16263
Line | AML source
--------------------------------------------------------------------------------
16260|                     Device (SLAV)
16261|                     {
16262|                         Name (_ADR, 0x01)  // _ADR: Address
16263|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16264|                         {
16265|                             Name (ATA1, Buffer (0x0E)
16266|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16324
Line | AML source
--------------------------------------------------------------------------------
16321|                         /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  /* ........ */
16322|                         /* 0010 */  0x00, 0x00, 0x00, 0x00                           /* .... */
16323|                     })
16324|                     Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16325|                     {
16326|                         Name (PBUF, Buffer (0x14)
16327|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16377
Line | AML source
--------------------------------------------------------------------------------
16374|                         Return (PBUF) /* \_SB_.PCI0.SAT1.SECD._GTM.PBUF */
16375|                     }
16376| 
16377|                     Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16378|                     {
16379|                         CreateDWordField (Arg0, 0x00, PIO0)
16380|                         CreateDWordField (Arg0, 0x04, DMA0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16485
Line | AML source
--------------------------------------------------------------------------------
16482|                     Device (MAST)
16483|                     {
16484|                         Name (_ADR, 0x00)  // _ADR: Address
16485|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16486|                         {
16487|                             Name (ATA0, Buffer (0x0E)
16488|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16519
Line | AML source
--------------------------------------------------------------------------------
16516|                     Device (SLAV)
16517|                     {
16518|                         Name (_ADR, 0x01)  // _ADR: Address
16519|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16520|                         {
16521|                             Name (ATA1, Buffer (0x0E)
16522|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 16631
Line | AML source
--------------------------------------------------------------------------------
16628|                     Return (Multiply (0x1E, Subtract (0x09, Add (Arg2, Arg3))))
16629|                 }
16630| 
16631|                 Method (GDMA, 5, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg3)
16632|                 {
16633|                     If (LEqual (Arg0, 0x01))
16634|                     {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16667
Line | AML source
--------------------------------------------------------------------------------
16664|                     Return (Local0)
16665|                 }
16666| 
16667|                 Method (SPIO, 3, NotSerialized)
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16668|                 {
16669|                     Name (PBUF, Buffer (0x05)
16670|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16717
Line | AML source
--------------------------------------------------------------------------------
16714|                     Return (PBUF) /* \_SB_.PCI0.EVSS.SPIO.PBUF */
16715|                 }
16716| 
16717|                 Method (SDMA, 3, NotSerialized)
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16718|                 {
16719|                     Name (PBUF, Buffer (0x05)
16720|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16791
Line | AML source
--------------------------------------------------------------------------------
16788|                     Name (TPI0, 0x00)
16789|                     Name (TDM1, 0x00)
16790|                     Name (TPI1, 0x00)
16791|                     Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16792|                     {
16793|                         Name (PBUF, Buffer (0x14)
16794|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16844
Line | AML source
--------------------------------------------------------------------------------
16841|                         Return (PBUF) /* \_SB_.PCI0.EVSS.PRID._GTM.PBUF */
16842|                     }
16843| 
16844|                     Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16845|                     {
16846|                         CreateDWordField (Arg0, 0x00, PIO0)
16847|                         CreateDWordField (Arg0, 0x04, DMA0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16950
Line | AML source
--------------------------------------------------------------------------------
16947|                     Device (MAST)
16948|                     {
16949|                         Name (_ADR, 0x00)  // _ADR: Address
16950|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16951|                         {
16952|                             Name (ATA0, Buffer (0x0E)
16953|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
16984
Line | AML source
--------------------------------------------------------------------------------
16981|                     Device (SLAV)
16982|                     {
16983|                         Name (_ADR, 0x01)  // _ADR: Address
16984|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
16985|                         {
16986|                             Name (ATA1, Buffer (0x0E)
16987|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
17045
Line | AML source
--------------------------------------------------------------------------------
17042|                         /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  /* ........ */
17043|                         /* 0010 */  0x00, 0x00, 0x00, 0x00                           /* .... */
17044|                     })
17045|                     Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
17046|                     {
17047|                         Name (PBUF, Buffer (0x14)
17048|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
17098
Line | AML source
--------------------------------------------------------------------------------
17095|                         Return (PBUF) /* \_SB_.PCI0.EVSS.SECD._GTM.PBUF */
17096|                     }
17097| 
17098|                     Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
17099|                     {
17100|                         CreateDWordField (Arg0, 0x00, PIO0)
17101|                         CreateDWordField (Arg0, 0x04, DMA0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
17206
Line | AML source
--------------------------------------------------------------------------------
17203|                     Device (MAST)
17204|                     {
17205|                         Name (_ADR, 0x00)  // _ADR: Address
17206|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
17207|                         {
17208|                             Name (ATA0, Buffer (0x0E)
17209|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
17240
Line | AML source
--------------------------------------------------------------------------------
17237|                     Device (SLAV)
17238|                     {
17239|                         Name (_ADR, 0x01)  // _ADR: Address
17240|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
17241|                         {
17242|                             Name (ATA1, Buffer (0x0E)
17243|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 17939
Line | AML source
--------------------------------------------------------------------------------
17936|                     }
17937|                 }
17938| 
17939|                 Method (POSC, 3, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg1)
17940|                 {
17941|                     Store (0x81, IO80) /* \IO80 */
17942|                     CreateDWordField (Arg2, 0x00, CDW1)
================================================================================
Assembler remark in line 18348
Line | AML source
--------------------------------------------------------------------------------
18345| 
18346|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
18347|                         {
18348|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
18349|                             Name (UPCP, Package (0x04)
18350|                             {
18351|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 18489
Line | AML source
--------------------------------------------------------------------------------
18486| 
18487|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
18488|                         {
18489|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
18490|                             Name (UPCP, Package (0x04)
18491|                             {
18492|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 18793
Line | AML source
--------------------------------------------------------------------------------
18790| 
18791|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
18792|                         {
18793|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
18794|                             Name (UPCP, Package (0x04)
18795|                             {
18796|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 18922
Line | AML source
--------------------------------------------------------------------------------
18919| 
18920|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
18921|                         {
18922|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
18923|                             Name (UPCP, Package (0x04)
18924|                             {
18925|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 19055
Line | AML source
--------------------------------------------------------------------------------
19052| 
19053|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
19054|                         {
19055|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
19056|                             Name (UPCP, Package (0x04)
19057|                             {
19058|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 19169
Line | AML source
--------------------------------------------------------------------------------
19166| 
19167|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
19168|                         {
19169|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
19170|                             Name (UPCP, Package (0x04)
19171|                             {
19172|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 19297
Line | AML source
--------------------------------------------------------------------------------
19294| 
19295|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
19296|                         {
19297|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
19298|                             Name (UPCP, Package (0x04)
19299|                             {
19300|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 19428
Line | AML source
--------------------------------------------------------------------------------
19425| 
19426|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
19427|                         {
19428|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
19429|                             Name (UPCP, Package (0x04)
19430|                             {
19431|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 19550
Line | AML source
--------------------------------------------------------------------------------
19547| 
19548|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
19549|                         {
19550|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
19551|                             Name (UPCP, Package (0x04)
19552|                             {
19553|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 19675
Line | AML source
--------------------------------------------------------------------------------
19672| 
19673|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
19674|                         {
19675|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
19676|                             Name (UPCP, Package (0x04)
19677|                             {
19678|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 19799
Line | AML source
--------------------------------------------------------------------------------
19796| 
19797|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
19798|                         {
19799|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
19800|                             Name (UPCP, Package (0x04)
19801|                             {
19802|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 19969
Line | AML source
--------------------------------------------------------------------------------
19966| 
19967|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
19968|                         {
19969|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
19970|                             Name (UPCP, Package (0x04)
19971|                             {
19972|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 20109
Line | AML source
--------------------------------------------------------------------------------
20106| 
20107|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
20108|                         {
20109|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
20110|                             Name (UPCP, Package (0x04)
20111|                             {
20112|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 20242
Line | AML source
--------------------------------------------------------------------------------
20239| 
20240|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
20241|                         {
20242|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
20243|                             Name (UPCP, Package (0x04)
20244|                             {
20245|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 20376
Line | AML source
--------------------------------------------------------------------------------
20373| 
20374|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
20375|                         {
20376|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
20377|                             Name (UPCP, Package (0x04)
20378|                             {
20379|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 20502
Line | AML source
--------------------------------------------------------------------------------
20499| 
20500|                         Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
20501|                         {
20502|                             Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                                     ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
20503|                             Name (UPCP, Package (0x04)
20504|                             {
20505|                                 0xFF, 
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [HIGH] AMLAsmASL_MSG_INVALID_MIN_MAX: Test 1, Assembler error in line
20950
Line | AML source
--------------------------------------------------------------------------------
20947|                     ,, )
20948|                 WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
20949|                     0x0000,             // Granularity
20950|                     0x3548,             // Range Minimum
     |                         ^
     | Error 6051: Address Min is greater than Address Max  
20951|                     0x0000,             // Range Maximum
20952|                     0x0000,             // Translation Offset
20953|                     0x0000,             // Length
================================================================================

ADVICE: (for Error #6051, ASL_MSG_INVALID_MIN_MAX): The minimum, maximum
addresses and length must be a multiple of the alignment, which must be a power
of 2.

FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
20955
Line | AML source
--------------------------------------------------------------------------------
20952|                     0x0000,             // Translation Offset
20953|                     0x0000,             // Length
20954|                     ,, , TypeStatic)
20955|                 DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
20956|                     0x00000000,         // Granularity
20957|                     0x00000000,         // Range Minimum
20958|                     0x00000000,         // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

FAILED [HIGH] AMLAsmASL_MSG_INVALID_MIN_MAX: Test 1, Assembler error in line
20964
Line | AML source
--------------------------------------------------------------------------------
20961|                     ,, , AddressRangeMemory, TypeStatic)
20962|                 WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
20963|                     0x0000,             // Granularity
20964|                     0x4158,             // Range Minimum
     |                         ^
     | Error 6051: Address Min is greater than Address Max  
20965|                     0x0000,             // Range Maximum
20966|                     0x0000,             // Translation Offset
20967|                     0x0001,             // Length
================================================================================

ADVICE: (for Error #6051, ASL_MSG_INVALID_MIN_MAX): The minimum, maximum
addresses and length must be a multiple of the alignment, which must be a power
of 2.

FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
20969
Line | AML source
--------------------------------------------------------------------------------
20966|                     0x0000,             // Translation Offset
20967|                     0x0001,             // Length
20968|                     ,, , TypeStatic)
20969|                 DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
20970|                     0x00000000,         // Granularity
20971|                     0x00000000,         // Range Minimum
20972|                     0x00000000,         // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
20976
Line | AML source
--------------------------------------------------------------------------------
20973|                     0x00000000,         // Translation Offset
20974|                     0x00000000,         // Length
20975|                     ,, , AddressRangeMemory, TypeStatic)
20976|                 QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
20977|                     0x0000000000000000, // Granularity
20978|                     0x0000000000000000, // Range Minimum
20979|                     0x0000000000000000, // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
21175
Line | AML source
--------------------------------------------------------------------------------
21172| 
21173|                 Method (OSHP, 0, NotSerialized)
21174|                 {
21175|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QRP0.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
21176|                     Store (0x00, HGPE) /* \_SB_.PCI1.QRP0.HGPE */
21177|                 }
21178| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 21258
Line | AML source
--------------------------------------------------------------------------------
21255| 
21256|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
21257|                 {
21258|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
21259|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
21260|                     While (One)
21261|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 21259
Line | AML source
--------------------------------------------------------------------------------
21256|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
21257|                 {
21258|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
21259|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
21260|                     While (One)
21261|                     {
21262|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QRP0._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 21291
Line | AML source
--------------------------------------------------------------------------------
21288|                     }
21289|                 }
21290| 
21291|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
21292|                 {
21293|                     Store (0xFF, IO80) /* \IO80 */
21294|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 21313
Line | AML source
--------------------------------------------------------------------------------
21310|                     HPCC (Local0)
21311|                 }
21312| 
21313|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
21314|                 {
21315|                     If (And (HPEV, SSTS))
21316|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 21327
Line | AML source
--------------------------------------------------------------------------------
21324|                     Return (0xFF)
21325|                 }
21326| 
21327|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
21328|                 {
21329|                     Store (0xFE, IO80) /* \IO80 */
21330|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 21348
Line | AML source
--------------------------------------------------------------------------------
21345|                     Sleep (0x0A)
21346|                 }
21347| 
21348|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
21349|                 {
21350|                     Sleep (0xC8)
21351|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
21848
Line | AML source
--------------------------------------------------------------------------------
21845| 
21846|                 Method (OSHP, 0, NotSerialized)
21847|                 {
21848|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR1A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
21849|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR1A.HGPE */
21850|                 }
21851| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 21931
Line | AML source
--------------------------------------------------------------------------------
21928| 
21929|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
21930|                 {
21931|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
21932|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
21933|                     While (One)
21934|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 21932
Line | AML source
--------------------------------------------------------------------------------
21929|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
21930|                 {
21931|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
21932|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
21933|                     While (One)
21934|                     {
21935|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR1A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 21964
Line | AML source
--------------------------------------------------------------------------------
21961|                     }
21962|                 }
21963| 
21964|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
21965|                 {
21966|                     Store (0xFF, IO80) /* \IO80 */
21967|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 21986
Line | AML source
--------------------------------------------------------------------------------
21983|                     HPCC (Local0)
21984|                 }
21985| 
21986|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
21987|                 {
21988|                     If (And (HPEV, SSTS))
21989|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 22000
Line | AML source
--------------------------------------------------------------------------------
21997|                     Return (0xFF)
21998|                 }
21999| 
22000|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
22001|                 {
22002|                     Store (0xFE, IO80) /* \IO80 */
22003|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 22021
Line | AML source
--------------------------------------------------------------------------------
22018|                     Sleep (0x0A)
22019|                 }
22020| 
22021|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
22022|                 {
22023|                     Sleep (0xC8)
22024|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
22521
Line | AML source
--------------------------------------------------------------------------------
22518| 
22519|                 Method (OSHP, 0, NotSerialized)
22520|                 {
22521|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR1B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
22522|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR1B.HGPE */
22523|                 }
22524| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 22604
Line | AML source
--------------------------------------------------------------------------------
22601| 
22602|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
22603|                 {
22604|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
22605|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
22606|                     While (One)
22607|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 22605
Line | AML source
--------------------------------------------------------------------------------
22602|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
22603|                 {
22604|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
22605|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
22606|                     While (One)
22607|                     {
22608|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR1B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 22637
Line | AML source
--------------------------------------------------------------------------------
22634|                     }
22635|                 }
22636| 
22637|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
22638|                 {
22639|                     Store (0xFF, IO80) /* \IO80 */
22640|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 22659
Line | AML source
--------------------------------------------------------------------------------
22656|                     HPCC (Local0)
22657|                 }
22658| 
22659|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
22660|                 {
22661|                     If (And (HPEV, SSTS))
22662|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 22673
Line | AML source
--------------------------------------------------------------------------------
22670|                     Return (0xFF)
22671|                 }
22672| 
22673|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
22674|                 {
22675|                     Store (0xFE, IO80) /* \IO80 */
22676|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 22694
Line | AML source
--------------------------------------------------------------------------------
22691|                     Sleep (0x0A)
22692|                 }
22693| 
22694|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
22695|                 {
22696|                     Sleep (0xC8)
22697|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
23194
Line | AML source
--------------------------------------------------------------------------------
23191| 
23192|                 Method (OSHP, 0, NotSerialized)
23193|                 {
23194|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR2A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
23195|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR2A.HGPE */
23196|                 }
23197| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 23277
Line | AML source
--------------------------------------------------------------------------------
23274| 
23275|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
23276|                 {
23277|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
23278|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
23279|                     While (One)
23280|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 23278
Line | AML source
--------------------------------------------------------------------------------
23275|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
23276|                 {
23277|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
23278|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
23279|                     While (One)
23280|                     {
23281|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR2A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 23310
Line | AML source
--------------------------------------------------------------------------------
23307|                     }
23308|                 }
23309| 
23310|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
23311|                 {
23312|                     Store (0xFF, IO80) /* \IO80 */
23313|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 23332
Line | AML source
--------------------------------------------------------------------------------
23329|                     HPCC (Local0)
23330|                 }
23331| 
23332|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
23333|                 {
23334|                     If (And (HPEV, SSTS))
23335|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 23346
Line | AML source
--------------------------------------------------------------------------------
23343|                     Return (0xFF)
23344|                 }
23345| 
23346|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
23347|                 {
23348|                     Store (0xFE, IO80) /* \IO80 */
23349|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 23367
Line | AML source
--------------------------------------------------------------------------------
23364|                     Sleep (0x0A)
23365|                 }
23366| 
23367|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
23368|                 {
23369|                     Sleep (0xC8)
23370|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
23867
Line | AML source
--------------------------------------------------------------------------------
23864| 
23865|                 Method (OSHP, 0, NotSerialized)
23866|                 {
23867|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR2B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
23868|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR2B.HGPE */
23869|                 }
23870| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 23950
Line | AML source
--------------------------------------------------------------------------------
23947| 
23948|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
23949|                 {
23950|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
23951|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
23952|                     While (One)
23953|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 23951
Line | AML source
--------------------------------------------------------------------------------
23948|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
23949|                 {
23950|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
23951|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
23952|                     While (One)
23953|                     {
23954|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR2B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 23983
Line | AML source
--------------------------------------------------------------------------------
23980|                     }
23981|                 }
23982| 
23983|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
23984|                 {
23985|                     Store (0xFF, IO80) /* \IO80 */
23986|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 24005
Line | AML source
--------------------------------------------------------------------------------
24002|                     HPCC (Local0)
24003|                 }
24004| 
24005|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
24006|                 {
24007|                     If (And (HPEV, SSTS))
24008|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 24019
Line | AML source
--------------------------------------------------------------------------------
24016|                     Return (0xFF)
24017|                 }
24018| 
24019|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
24020|                 {
24021|                     Store (0xFE, IO80) /* \IO80 */
24022|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 24040
Line | AML source
--------------------------------------------------------------------------------
24037|                     Sleep (0x0A)
24038|                 }
24039| 
24040|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
24041|                 {
24042|                     Sleep (0xC8)
24043|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
24540
Line | AML source
--------------------------------------------------------------------------------
24537| 
24538|                 Method (OSHP, 0, NotSerialized)
24539|                 {
24540|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR2C.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
24541|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR2C.HGPE */
24542|                 }
24543| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 24623
Line | AML source
--------------------------------------------------------------------------------
24620| 
24621|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
24622|                 {
24623|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
24624|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
24625|                     While (One)
24626|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 24624
Line | AML source
--------------------------------------------------------------------------------
24621|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
24622|                 {
24623|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
24624|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
24625|                     While (One)
24626|                     {
24627|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR2C._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 24656
Line | AML source
--------------------------------------------------------------------------------
24653|                     }
24654|                 }
24655| 
24656|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
24657|                 {
24658|                     Store (0xFF, IO80) /* \IO80 */
24659|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 24678
Line | AML source
--------------------------------------------------------------------------------
24675|                     HPCC (Local0)
24676|                 }
24677| 
24678|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
24679|                 {
24680|                     If (And (HPEV, SSTS))
24681|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 24692
Line | AML source
--------------------------------------------------------------------------------
24689|                     Return (0xFF)
24690|                 }
24691| 
24692|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
24693|                 {
24694|                     Store (0xFE, IO80) /* \IO80 */
24695|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 24713
Line | AML source
--------------------------------------------------------------------------------
24710|                     Sleep (0x0A)
24711|                 }
24712| 
24713|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
24714|                 {
24715|                     Sleep (0xC8)
24716|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
25213
Line | AML source
--------------------------------------------------------------------------------
25210| 
25211|                 Method (OSHP, 0, NotSerialized)
25212|                 {
25213|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR2D.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
25214|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR2D.HGPE */
25215|                 }
25216| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 25296
Line | AML source
--------------------------------------------------------------------------------
25293| 
25294|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
25295|                 {
25296|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
25297|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
25298|                     While (One)
25299|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 25297
Line | AML source
--------------------------------------------------------------------------------
25294|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
25295|                 {
25296|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
25297|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
25298|                     While (One)
25299|                     {
25300|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR2D._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 25329
Line | AML source
--------------------------------------------------------------------------------
25326|                     }
25327|                 }
25328| 
25329|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
25330|                 {
25331|                     Store (0xFF, IO80) /* \IO80 */
25332|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 25351
Line | AML source
--------------------------------------------------------------------------------
25348|                     HPCC (Local0)
25349|                 }
25350| 
25351|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
25352|                 {
25353|                     If (And (HPEV, SSTS))
25354|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 25365
Line | AML source
--------------------------------------------------------------------------------
25362|                     Return (0xFF)
25363|                 }
25364| 
25365|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
25366|                 {
25367|                     Store (0xFE, IO80) /* \IO80 */
25368|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 25386
Line | AML source
--------------------------------------------------------------------------------
25383|                     Sleep (0x0A)
25384|                 }
25385| 
25386|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
25387|                 {
25388|                     Sleep (0xC8)
25389|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
25886
Line | AML source
--------------------------------------------------------------------------------
25883| 
25884|                 Method (OSHP, 0, NotSerialized)
25885|                 {
25886|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR3A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
25887|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR3A.HGPE */
25888|                 }
25889| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 25969
Line | AML source
--------------------------------------------------------------------------------
25966| 
25967|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
25968|                 {
25969|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
25970|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
25971|                     While (One)
25972|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 25970
Line | AML source
--------------------------------------------------------------------------------
25967|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
25968|                 {
25969|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
25970|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
25971|                     While (One)
25972|                     {
25973|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR3A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 26002
Line | AML source
--------------------------------------------------------------------------------
25999|                     }
26000|                 }
26001| 
26002|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
26003|                 {
26004|                     Store (0xFF, IO80) /* \IO80 */
26005|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 26024
Line | AML source
--------------------------------------------------------------------------------
26021|                     HPCC (Local0)
26022|                 }
26023| 
26024|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
26025|                 {
26026|                     If (And (HPEV, SSTS))
26027|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 26038
Line | AML source
--------------------------------------------------------------------------------
26035|                     Return (0xFF)
26036|                 }
26037| 
26038|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
26039|                 {
26040|                     Store (0xFE, IO80) /* \IO80 */
26041|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 26059
Line | AML source
--------------------------------------------------------------------------------
26056|                     Sleep (0x0A)
26057|                 }
26058| 
26059|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
26060|                 {
26061|                     Sleep (0xC8)
26062|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
26559
Line | AML source
--------------------------------------------------------------------------------
26556| 
26557|                 Method (OSHP, 0, NotSerialized)
26558|                 {
26559|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR3B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
26560|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR3B.HGPE */
26561|                 }
26562| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 26642
Line | AML source
--------------------------------------------------------------------------------
26639| 
26640|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
26641|                 {
26642|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
26643|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
26644|                     While (One)
26645|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 26643
Line | AML source
--------------------------------------------------------------------------------
26640|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
26641|                 {
26642|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
26643|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
26644|                     While (One)
26645|                     {
26646|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR3B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 26675
Line | AML source
--------------------------------------------------------------------------------
26672|                     }
26673|                 }
26674| 
26675|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
26676|                 {
26677|                     Store (0xFF, IO80) /* \IO80 */
26678|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 26697
Line | AML source
--------------------------------------------------------------------------------
26694|                     HPCC (Local0)
26695|                 }
26696| 
26697|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
26698|                 {
26699|                     If (And (HPEV, SSTS))
26700|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 26711
Line | AML source
--------------------------------------------------------------------------------
26708|                     Return (0xFF)
26709|                 }
26710| 
26711|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
26712|                 {
26713|                     Store (0xFE, IO80) /* \IO80 */
26714|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 26732
Line | AML source
--------------------------------------------------------------------------------
26729|                     Sleep (0x0A)
26730|                 }
26731| 
26732|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
26733|                 {
26734|                     Sleep (0xC8)
26735|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
27232
Line | AML source
--------------------------------------------------------------------------------
27229| 
27230|                 Method (OSHP, 0, NotSerialized)
27231|                 {
27232|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR3C.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
27233|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR3C.HGPE */
27234|                 }
27235| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 27315
Line | AML source
--------------------------------------------------------------------------------
27312| 
27313|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
27314|                 {
27315|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
27316|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
27317|                     While (One)
27318|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 27316
Line | AML source
--------------------------------------------------------------------------------
27313|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
27314|                 {
27315|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
27316|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
27317|                     While (One)
27318|                     {
27319|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR3C._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 27348
Line | AML source
--------------------------------------------------------------------------------
27345|                     }
27346|                 }
27347| 
27348|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
27349|                 {
27350|                     Store (0xFF, IO80) /* \IO80 */
27351|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 27370
Line | AML source
--------------------------------------------------------------------------------
27367|                     HPCC (Local0)
27368|                 }
27369| 
27370|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
27371|                 {
27372|                     If (And (HPEV, SSTS))
27373|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 27384
Line | AML source
--------------------------------------------------------------------------------
27381|                     Return (0xFF)
27382|                 }
27383| 
27384|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
27385|                 {
27386|                     Store (0xFE, IO80) /* \IO80 */
27387|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 27405
Line | AML source
--------------------------------------------------------------------------------
27402|                     Sleep (0x0A)
27403|                 }
27404| 
27405|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
27406|                 {
27407|                     Sleep (0xC8)
27408|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
27905
Line | AML source
--------------------------------------------------------------------------------
27902| 
27903|                 Method (OSHP, 0, NotSerialized)
27904|                 {
27905|                     Store (SSTS, SSTS) /* \_SB_.PCI1.QR3D.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
27906|                     Store (0x00, HGPE) /* \_SB_.PCI1.QR3D.HGPE */
27907|                 }
27908| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 27988
Line | AML source
--------------------------------------------------------------------------------
27985| 
27986|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
27987|                 {
27988|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
27989|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
27990|                     While (One)
27991|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 27989
Line | AML source
--------------------------------------------------------------------------------
27986|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
27987|                 {
27988|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
27989|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
27990|                     While (One)
27991|                     {
27992|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI1.QR3D._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 28021
Line | AML source
--------------------------------------------------------------------------------
28018|                     }
28019|                 }
28020| 
28021|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
28022|                 {
28023|                     Store (0xFF, IO80) /* \IO80 */
28024|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 28043
Line | AML source
--------------------------------------------------------------------------------
28040|                     HPCC (Local0)
28041|                 }
28042| 
28043|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
28044|                 {
28045|                     If (And (HPEV, SSTS))
28046|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 28057
Line | AML source
--------------------------------------------------------------------------------
28054|                     Return (0xFF)
28055|                 }
28056| 
28057|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
28058|                 {
28059|                     Store (0xFE, IO80) /* \IO80 */
28060|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 28078
Line | AML source
--------------------------------------------------------------------------------
28075|                     Sleep (0x0A)
28076|                 }
28077| 
28078|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
28079|                 {
28080|                     Sleep (0xC8)
28081|                     If (ABPS (0x00))
================================================================================
FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
28663
Line | AML source
--------------------------------------------------------------------------------
28660|                     0x0000,             // Translation Offset
28661|                     0x0001,             // Length
28662|                     ,, , TypeStatic)
28663|                 DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
28664|                     0x00000000,         // Granularity
28665|                     0x00000000,         // Range Minimum
28666|                     0x00000000,         // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

FAILED [HIGH] AMLAsmASL_MSG_INVALID_MIN_MAX: Test 1, Assembler error in line
28672
Line | AML source
--------------------------------------------------------------------------------
28669|                     ,, , AddressRangeMemory, TypeStatic)
28670|                 WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
28671|                     0x0000,             // Granularity
28672|                     0x4558,             // Range Minimum
     |                         ^
     | Error 6051: Address Min is greater than Address Max  
28673|                     0x0000,             // Range Maximum
28674|                     0x0000,             // Translation Offset
28675|                     0x0001,             // Length
================================================================================

ADVICE: (for Error #6051, ASL_MSG_INVALID_MIN_MAX): The minimum, maximum
addresses and length must be a multiple of the alignment, which must be a power
of 2.

FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
28677
Line | AML source
--------------------------------------------------------------------------------
28674|                     0x0000,             // Translation Offset
28675|                     0x0001,             // Length
28676|                     ,, , TypeStatic)
28677|                 DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
28678|                     0x00000000,         // Granularity
28679|                     0x00000000,         // Range Minimum
28680|                     0x00000000,         // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
28684
Line | AML source
--------------------------------------------------------------------------------
28681|                     0x00000000,         // Translation Offset
28682|                     0x00000000,         // Length
28683|                     ,, , AddressRangeMemory, TypeStatic)
28684|                 QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
28685|                     0x0000000000000000, // Granularity
28686|                     0x0000000000000000, // Range Minimum
28687|                     0x0000000000000000, // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
28883
Line | AML source
--------------------------------------------------------------------------------
28880| 
28881|                 Method (OSHP, 0, NotSerialized)
28882|                 {
28883|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RRP0.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
28884|                     Store (0x00, HGPE) /* \_SB_.PCI2.RRP0.HGPE */
28885|                 }
28886| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 28966
Line | AML source
--------------------------------------------------------------------------------
28963| 
28964|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
28965|                 {
28966|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
28967|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
28968|                     While (One)
28969|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 28967
Line | AML source
--------------------------------------------------------------------------------
28964|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
28965|                 {
28966|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
28967|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
28968|                     While (One)
28969|                     {
28970|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RRP0._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 28999
Line | AML source
--------------------------------------------------------------------------------
28996|                     }
28997|                 }
28998| 
28999|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
29000|                 {
29001|                     Store (0xFF, IO80) /* \IO80 */
29002|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 29021
Line | AML source
--------------------------------------------------------------------------------
29018|                     HPCC (Local0)
29019|                 }
29020| 
29021|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
29022|                 {
29023|                     If (And (HPEV, SSTS))
29024|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 29035
Line | AML source
--------------------------------------------------------------------------------
29032|                     Return (0xFF)
29033|                 }
29034| 
29035|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
29036|                 {
29037|                     Store (0xFE, IO80) /* \IO80 */
29038|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 29056
Line | AML source
--------------------------------------------------------------------------------
29053|                     Sleep (0x0A)
29054|                 }
29055| 
29056|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
29057|                 {
29058|                     Sleep (0xC8)
29059|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
29556
Line | AML source
--------------------------------------------------------------------------------
29553| 
29554|                 Method (OSHP, 0, NotSerialized)
29555|                 {
29556|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR1A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
29557|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR1A.HGPE */
29558|                 }
29559| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 29639
Line | AML source
--------------------------------------------------------------------------------
29636| 
29637|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
29638|                 {
29639|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
29640|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
29641|                     While (One)
29642|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 29640
Line | AML source
--------------------------------------------------------------------------------
29637|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
29638|                 {
29639|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
29640|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
29641|                     While (One)
29642|                     {
29643|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR1A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 29672
Line | AML source
--------------------------------------------------------------------------------
29669|                     }
29670|                 }
29671| 
29672|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
29673|                 {
29674|                     Store (0xFF, IO80) /* \IO80 */
29675|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 29694
Line | AML source
--------------------------------------------------------------------------------
29691|                     HPCC (Local0)
29692|                 }
29693| 
29694|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
29695|                 {
29696|                     If (And (HPEV, SSTS))
29697|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 29708
Line | AML source
--------------------------------------------------------------------------------
29705|                     Return (0xFF)
29706|                 }
29707| 
29708|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
29709|                 {
29710|                     Store (0xFE, IO80) /* \IO80 */
29711|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 29729
Line | AML source
--------------------------------------------------------------------------------
29726|                     Sleep (0x0A)
29727|                 }
29728| 
29729|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
29730|                 {
29731|                     Sleep (0xC8)
29732|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
30229
Line | AML source
--------------------------------------------------------------------------------
30226| 
30227|                 Method (OSHP, 0, NotSerialized)
30228|                 {
30229|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR1B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
30230|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR1B.HGPE */
30231|                 }
30232| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 30312
Line | AML source
--------------------------------------------------------------------------------
30309| 
30310|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
30311|                 {
30312|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
30313|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
30314|                     While (One)
30315|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 30313
Line | AML source
--------------------------------------------------------------------------------
30310|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
30311|                 {
30312|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
30313|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
30314|                     While (One)
30315|                     {
30316|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR1B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 30345
Line | AML source
--------------------------------------------------------------------------------
30342|                     }
30343|                 }
30344| 
30345|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
30346|                 {
30347|                     Store (0xFF, IO80) /* \IO80 */
30348|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 30367
Line | AML source
--------------------------------------------------------------------------------
30364|                     HPCC (Local0)
30365|                 }
30366| 
30367|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
30368|                 {
30369|                     If (And (HPEV, SSTS))
30370|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 30381
Line | AML source
--------------------------------------------------------------------------------
30378|                     Return (0xFF)
30379|                 }
30380| 
30381|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
30382|                 {
30383|                     Store (0xFE, IO80) /* \IO80 */
30384|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 30402
Line | AML source
--------------------------------------------------------------------------------
30399|                     Sleep (0x0A)
30400|                 }
30401| 
30402|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
30403|                 {
30404|                     Sleep (0xC8)
30405|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
30902
Line | AML source
--------------------------------------------------------------------------------
30899| 
30900|                 Method (OSHP, 0, NotSerialized)
30901|                 {
30902|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR2A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
30903|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR2A.HGPE */
30904|                 }
30905| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 30985
Line | AML source
--------------------------------------------------------------------------------
30982| 
30983|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
30984|                 {
30985|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
30986|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
30987|                     While (One)
30988|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 30986
Line | AML source
--------------------------------------------------------------------------------
30983|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
30984|                 {
30985|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
30986|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
30987|                     While (One)
30988|                     {
30989|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR2A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 31018
Line | AML source
--------------------------------------------------------------------------------
31015|                     }
31016|                 }
31017| 
31018|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
31019|                 {
31020|                     Store (0xFF, IO80) /* \IO80 */
31021|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 31040
Line | AML source
--------------------------------------------------------------------------------
31037|                     HPCC (Local0)
31038|                 }
31039| 
31040|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
31041|                 {
31042|                     If (And (HPEV, SSTS))
31043|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 31054
Line | AML source
--------------------------------------------------------------------------------
31051|                     Return (0xFF)
31052|                 }
31053| 
31054|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
31055|                 {
31056|                     Store (0xFE, IO80) /* \IO80 */
31057|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 31075
Line | AML source
--------------------------------------------------------------------------------
31072|                     Sleep (0x0A)
31073|                 }
31074| 
31075|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
31076|                 {
31077|                     Sleep (0xC8)
31078|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
31575
Line | AML source
--------------------------------------------------------------------------------
31572| 
31573|                 Method (OSHP, 0, NotSerialized)
31574|                 {
31575|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR2B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
31576|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR2B.HGPE */
31577|                 }
31578| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 31658
Line | AML source
--------------------------------------------------------------------------------
31655| 
31656|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
31657|                 {
31658|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
31659|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
31660|                     While (One)
31661|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 31659
Line | AML source
--------------------------------------------------------------------------------
31656|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
31657|                 {
31658|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
31659|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
31660|                     While (One)
31661|                     {
31662|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR2B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 31691
Line | AML source
--------------------------------------------------------------------------------
31688|                     }
31689|                 }
31690| 
31691|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
31692|                 {
31693|                     Store (0xFF, IO80) /* \IO80 */
31694|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 31713
Line | AML source
--------------------------------------------------------------------------------
31710|                     HPCC (Local0)
31711|                 }
31712| 
31713|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
31714|                 {
31715|                     If (And (HPEV, SSTS))
31716|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 31727
Line | AML source
--------------------------------------------------------------------------------
31724|                     Return (0xFF)
31725|                 }
31726| 
31727|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
31728|                 {
31729|                     Store (0xFE, IO80) /* \IO80 */
31730|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 31748
Line | AML source
--------------------------------------------------------------------------------
31745|                     Sleep (0x0A)
31746|                 }
31747| 
31748|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
31749|                 {
31750|                     Sleep (0xC8)
31751|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
32248
Line | AML source
--------------------------------------------------------------------------------
32245| 
32246|                 Method (OSHP, 0, NotSerialized)
32247|                 {
32248|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR2C.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
32249|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR2C.HGPE */
32250|                 }
32251| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 32331
Line | AML source
--------------------------------------------------------------------------------
32328| 
32329|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
32330|                 {
32331|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
32332|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
32333|                     While (One)
32334|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 32332
Line | AML source
--------------------------------------------------------------------------------
32329|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
32330|                 {
32331|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
32332|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
32333|                     While (One)
32334|                     {
32335|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR2C._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 32364
Line | AML source
--------------------------------------------------------------------------------
32361|                     }
32362|                 }
32363| 
32364|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
32365|                 {
32366|                     Store (0xFF, IO80) /* \IO80 */
32367|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 32386
Line | AML source
--------------------------------------------------------------------------------
32383|                     HPCC (Local0)
32384|                 }
32385| 
32386|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
32387|                 {
32388|                     If (And (HPEV, SSTS))
32389|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 32400
Line | AML source
--------------------------------------------------------------------------------
32397|                     Return (0xFF)
32398|                 }
32399| 
32400|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
32401|                 {
32402|                     Store (0xFE, IO80) /* \IO80 */
32403|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 32421
Line | AML source
--------------------------------------------------------------------------------
32418|                     Sleep (0x0A)
32419|                 }
32420| 
32421|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
32422|                 {
32423|                     Sleep (0xC8)
32424|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
32921
Line | AML source
--------------------------------------------------------------------------------
32918| 
32919|                 Method (OSHP, 0, NotSerialized)
32920|                 {
32921|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR2D.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
32922|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR2D.HGPE */
32923|                 }
32924| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 33004
Line | AML source
--------------------------------------------------------------------------------
33001| 
33002|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
33003|                 {
33004|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
33005|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
33006|                     While (One)
33007|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 33005
Line | AML source
--------------------------------------------------------------------------------
33002|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
33003|                 {
33004|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
33005|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
33006|                     While (One)
33007|                     {
33008|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR2D._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 33037
Line | AML source
--------------------------------------------------------------------------------
33034|                     }
33035|                 }
33036| 
33037|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
33038|                 {
33039|                     Store (0xFF, IO80) /* \IO80 */
33040|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 33059
Line | AML source
--------------------------------------------------------------------------------
33056|                     HPCC (Local0)
33057|                 }
33058| 
33059|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
33060|                 {
33061|                     If (And (HPEV, SSTS))
33062|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 33073
Line | AML source
--------------------------------------------------------------------------------
33070|                     Return (0xFF)
33071|                 }
33072| 
33073|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
33074|                 {
33075|                     Store (0xFE, IO80) /* \IO80 */
33076|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 33094
Line | AML source
--------------------------------------------------------------------------------
33091|                     Sleep (0x0A)
33092|                 }
33093| 
33094|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
33095|                 {
33096|                     Sleep (0xC8)
33097|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
33594
Line | AML source
--------------------------------------------------------------------------------
33591| 
33592|                 Method (OSHP, 0, NotSerialized)
33593|                 {
33594|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR3A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
33595|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR3A.HGPE */
33596|                 }
33597| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 33677
Line | AML source
--------------------------------------------------------------------------------
33674| 
33675|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
33676|                 {
33677|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
33678|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
33679|                     While (One)
33680|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 33678
Line | AML source
--------------------------------------------------------------------------------
33675|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
33676|                 {
33677|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
33678|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
33679|                     While (One)
33680|                     {
33681|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR3A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 33710
Line | AML source
--------------------------------------------------------------------------------
33707|                     }
33708|                 }
33709| 
33710|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
33711|                 {
33712|                     Store (0xFF, IO80) /* \IO80 */
33713|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 33732
Line | AML source
--------------------------------------------------------------------------------
33729|                     HPCC (Local0)
33730|                 }
33731| 
33732|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
33733|                 {
33734|                     If (And (HPEV, SSTS))
33735|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 33746
Line | AML source
--------------------------------------------------------------------------------
33743|                     Return (0xFF)
33744|                 }
33745| 
33746|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
33747|                 {
33748|                     Store (0xFE, IO80) /* \IO80 */
33749|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 33767
Line | AML source
--------------------------------------------------------------------------------
33764|                     Sleep (0x0A)
33765|                 }
33766| 
33767|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
33768|                 {
33769|                     Sleep (0xC8)
33770|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
34267
Line | AML source
--------------------------------------------------------------------------------
34264| 
34265|                 Method (OSHP, 0, NotSerialized)
34266|                 {
34267|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR3B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
34268|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR3B.HGPE */
34269|                 }
34270| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 34350
Line | AML source
--------------------------------------------------------------------------------
34347| 
34348|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
34349|                 {
34350|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
34351|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
34352|                     While (One)
34353|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 34351
Line | AML source
--------------------------------------------------------------------------------
34348|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
34349|                 {
34350|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
34351|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
34352|                     While (One)
34353|                     {
34354|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR3B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 34383
Line | AML source
--------------------------------------------------------------------------------
34380|                     }
34381|                 }
34382| 
34383|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
34384|                 {
34385|                     Store (0xFF, IO80) /* \IO80 */
34386|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 34405
Line | AML source
--------------------------------------------------------------------------------
34402|                     HPCC (Local0)
34403|                 }
34404| 
34405|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
34406|                 {
34407|                     If (And (HPEV, SSTS))
34408|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 34419
Line | AML source
--------------------------------------------------------------------------------
34416|                     Return (0xFF)
34417|                 }
34418| 
34419|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
34420|                 {
34421|                     Store (0xFE, IO80) /* \IO80 */
34422|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 34440
Line | AML source
--------------------------------------------------------------------------------
34437|                     Sleep (0x0A)
34438|                 }
34439| 
34440|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
34441|                 {
34442|                     Sleep (0xC8)
34443|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
34940
Line | AML source
--------------------------------------------------------------------------------
34937| 
34938|                 Method (OSHP, 0, NotSerialized)
34939|                 {
34940|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR3C.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
34941|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR3C.HGPE */
34942|                 }
34943| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 35023
Line | AML source
--------------------------------------------------------------------------------
35020| 
35021|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
35022|                 {
35023|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
35024|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
35025|                     While (One)
35026|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 35024
Line | AML source
--------------------------------------------------------------------------------
35021|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
35022|                 {
35023|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
35024|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
35025|                     While (One)
35026|                     {
35027|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR3C._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 35056
Line | AML source
--------------------------------------------------------------------------------
35053|                     }
35054|                 }
35055| 
35056|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
35057|                 {
35058|                     Store (0xFF, IO80) /* \IO80 */
35059|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 35078
Line | AML source
--------------------------------------------------------------------------------
35075|                     HPCC (Local0)
35076|                 }
35077| 
35078|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
35079|                 {
35080|                     If (And (HPEV, SSTS))
35081|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 35092
Line | AML source
--------------------------------------------------------------------------------
35089|                     Return (0xFF)
35090|                 }
35091| 
35092|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
35093|                 {
35094|                     Store (0xFE, IO80) /* \IO80 */
35095|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 35113
Line | AML source
--------------------------------------------------------------------------------
35110|                     Sleep (0x0A)
35111|                 }
35112| 
35113|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
35114|                 {
35115|                     Sleep (0xC8)
35116|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
35613
Line | AML source
--------------------------------------------------------------------------------
35610| 
35611|                 Method (OSHP, 0, NotSerialized)
35612|                 {
35613|                     Store (SSTS, SSTS) /* \_SB_.PCI2.RR3D.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
35614|                     Store (0x00, HGPE) /* \_SB_.PCI2.RR3D.HGPE */
35615|                 }
35616| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 35696
Line | AML source
--------------------------------------------------------------------------------
35693| 
35694|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
35695|                 {
35696|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
35697|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
35698|                     While (One)
35699|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 35697
Line | AML source
--------------------------------------------------------------------------------
35694|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
35695|                 {
35696|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
35697|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
35698|                     While (One)
35699|                     {
35700|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI2.RR3D._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 35729
Line | AML source
--------------------------------------------------------------------------------
35726|                     }
35727|                 }
35728| 
35729|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
35730|                 {
35731|                     Store (0xFF, IO80) /* \IO80 */
35732|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 35751
Line | AML source
--------------------------------------------------------------------------------
35748|                     HPCC (Local0)
35749|                 }
35750| 
35751|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
35752|                 {
35753|                     If (And (HPEV, SSTS))
35754|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 35765
Line | AML source
--------------------------------------------------------------------------------
35762|                     Return (0xFF)
35763|                 }
35764| 
35765|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
35766|                 {
35767|                     Store (0xFE, IO80) /* \IO80 */
35768|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 35786
Line | AML source
--------------------------------------------------------------------------------
35783|                     Sleep (0x0A)
35784|                 }
35785| 
35786|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
35787|                 {
35788|                     Sleep (0xC8)
35789|                     If (ABPS (0x00))
================================================================================
FAILED [HIGH] AMLAsmASL_MSG_INVALID_MIN_MAX: Test 1, Assembler error in line
36359
Line | AML source
--------------------------------------------------------------------------------
36356|             {
36357|                 WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
36358|                     0x0000,             // Granularity
36359|                     0x4858,             // Range Minimum
     |                         ^
     | Error 6051: Address Min is greater than Address Max  
36360|                     0x0000,             // Range Maximum
36361|                     0x0000,             // Translation Offset
36362|                     0x0001,             // Length
================================================================================

ADVICE: (for Error #6051, ASL_MSG_INVALID_MIN_MAX): The minimum, maximum
addresses and length must be a multiple of the alignment, which must be a power
of 2.

FAILED [HIGH] AMLAsmASL_MSG_INVALID_MIN_MAX: Test 1, Assembler error in line
36366
Line | AML source
--------------------------------------------------------------------------------
36363|                     ,, )
36364|                 WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
36365|                     0x0000,             // Granularity
36366|                     0x3748,             // Range Minimum
     |                         ^
     | Error 6051: Address Min is greater than Address Max  
36367|                     0x0000,             // Range Maximum
36368|                     0x0000,             // Translation Offset
36369|                     0x0000,             // Length
================================================================================

ADVICE: (for Error #6051, ASL_MSG_INVALID_MIN_MAX): The minimum, maximum
addresses and length must be a multiple of the alignment, which must be a power
of 2.

FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
36371
Line | AML source
--------------------------------------------------------------------------------
36368|                     0x0000,             // Translation Offset
36369|                     0x0000,             // Length
36370|                     ,, , TypeStatic)
36371|                 DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
36372|                     0x00000000,         // Granularity
36373|                     0x00000000,         // Range Minimum
36374|                     0x00000000,         // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

FAILED [HIGH] AMLAsmASL_MSG_INVALID_MIN_MAX: Test 1, Assembler error in line
36380
Line | AML source
--------------------------------------------------------------------------------
36377|                     ,, , AddressRangeMemory, TypeStatic)
36378|                 WordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
36379|                     0x0000,             // Granularity
36380|                     0x4958,             // Range Minimum
     |                         ^
     | Error 6051: Address Min is greater than Address Max  
36381|                     0x0000,             // Range Maximum
36382|                     0x0000,             // Translation Offset
36383|                     0x0001,             // Length
================================================================================

ADVICE: (for Error #6051, ASL_MSG_INVALID_MIN_MAX): The minimum, maximum
addresses and length must be a multiple of the alignment, which must be a power
of 2.

FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
36385
Line | AML source
--------------------------------------------------------------------------------
36382|                     0x0000,             // Translation Offset
36383|                     0x0001,             // Length
36384|                     ,, , TypeStatic)
36385|                 DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
36386|                     0x00000000,         // Granularity
36387|                     0x00000000,         // Range Minimum
36388|                     0x00000000,         // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

FAILED [HIGH] AMLAsmASL_MSG_NULL_DESCRIPTOR: Test 1, Assembler error in line
36392
Line | AML source
--------------------------------------------------------------------------------
36389|                     0x00000000,         // Translation Offset
36390|                     0x00000000,         // Length
36391|                     ,, , AddressRangeMemory, TypeStatic)
36392|                 QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
     |                                            ^
     | Error 6090: Min/Max/Length/Gran are all zero, but no resource tag  
36393|                     0x0000000000000000, // Granularity
36394|                     0x0000000000000000, // Range Minimum
36395|                     0x0000000000000000, // Range Maximum
================================================================================

ADVICE: (for Error #6090, ASL_MSG_NULL_DESCRIPTOR): A 'null descriptor' (where
most fields are set to zero) has been found. Usually, these are updated or
completed at run time using BufferFields, but to do so one requires a resource
tag and this descriptor does not have one, hence it cannot be referenced to
allow it to be updated. This is most probably a bug and needs to be fixed.

FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
36591
Line | AML source
--------------------------------------------------------------------------------
36588| 
36589|                 Method (OSHP, 0, NotSerialized)
36590|                 {
36591|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SRP0.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
36592|                     Store (0x00, HGPE) /* \_SB_.PCI3.SRP0.HGPE */
36593|                 }
36594| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 36674
Line | AML source
--------------------------------------------------------------------------------
36671| 
36672|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
36673|                 {
36674|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
36675|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
36676|                     While (One)
36677|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 36675
Line | AML source
--------------------------------------------------------------------------------
36672|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
36673|                 {
36674|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
36675|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
36676|                     While (One)
36677|                     {
36678|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SRP0._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 36707
Line | AML source
--------------------------------------------------------------------------------
36704|                     }
36705|                 }
36706| 
36707|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
36708|                 {
36709|                     Store (0xFF, IO80) /* \IO80 */
36710|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 36729
Line | AML source
--------------------------------------------------------------------------------
36726|                     HPCC (Local0)
36727|                 }
36728| 
36729|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
36730|                 {
36731|                     If (And (HPEV, SSTS))
36732|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 36743
Line | AML source
--------------------------------------------------------------------------------
36740|                     Return (0xFF)
36741|                 }
36742| 
36743|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
36744|                 {
36745|                     Store (0xFE, IO80) /* \IO80 */
36746|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 36764
Line | AML source
--------------------------------------------------------------------------------
36761|                     Sleep (0x0A)
36762|                 }
36763| 
36764|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
36765|                 {
36766|                     Sleep (0xC8)
36767|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
37264
Line | AML source
--------------------------------------------------------------------------------
37261| 
37262|                 Method (OSHP, 0, NotSerialized)
37263|                 {
37264|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR1A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
37265|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR1A.HGPE */
37266|                 }
37267| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 37347
Line | AML source
--------------------------------------------------------------------------------
37344| 
37345|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
37346|                 {
37347|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
37348|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
37349|                     While (One)
37350|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 37348
Line | AML source
--------------------------------------------------------------------------------
37345|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
37346|                 {
37347|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
37348|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
37349|                     While (One)
37350|                     {
37351|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR1A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 37380
Line | AML source
--------------------------------------------------------------------------------
37377|                     }
37378|                 }
37379| 
37380|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
37381|                 {
37382|                     Store (0xFF, IO80) /* \IO80 */
37383|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 37402
Line | AML source
--------------------------------------------------------------------------------
37399|                     HPCC (Local0)
37400|                 }
37401| 
37402|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
37403|                 {
37404|                     If (And (HPEV, SSTS))
37405|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 37416
Line | AML source
--------------------------------------------------------------------------------
37413|                     Return (0xFF)
37414|                 }
37415| 
37416|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
37417|                 {
37418|                     Store (0xFE, IO80) /* \IO80 */
37419|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 37437
Line | AML source
--------------------------------------------------------------------------------
37434|                     Sleep (0x0A)
37435|                 }
37436| 
37437|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
37438|                 {
37439|                     Sleep (0xC8)
37440|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
37937
Line | AML source
--------------------------------------------------------------------------------
37934| 
37935|                 Method (OSHP, 0, NotSerialized)
37936|                 {
37937|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR1B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
37938|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR1B.HGPE */
37939|                 }
37940| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 38020
Line | AML source
--------------------------------------------------------------------------------
38017| 
38018|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
38019|                 {
38020|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
38021|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
38022|                     While (One)
38023|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 38021
Line | AML source
--------------------------------------------------------------------------------
38018|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
38019|                 {
38020|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
38021|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
38022|                     While (One)
38023|                     {
38024|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR1B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 38053
Line | AML source
--------------------------------------------------------------------------------
38050|                     }
38051|                 }
38052| 
38053|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
38054|                 {
38055|                     Store (0xFF, IO80) /* \IO80 */
38056|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 38075
Line | AML source
--------------------------------------------------------------------------------
38072|                     HPCC (Local0)
38073|                 }
38074| 
38075|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
38076|                 {
38077|                     If (And (HPEV, SSTS))
38078|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 38089
Line | AML source
--------------------------------------------------------------------------------
38086|                     Return (0xFF)
38087|                 }
38088| 
38089|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
38090|                 {
38091|                     Store (0xFE, IO80) /* \IO80 */
38092|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 38110
Line | AML source
--------------------------------------------------------------------------------
38107|                     Sleep (0x0A)
38108|                 }
38109| 
38110|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
38111|                 {
38112|                     Sleep (0xC8)
38113|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
38610
Line | AML source
--------------------------------------------------------------------------------
38607| 
38608|                 Method (OSHP, 0, NotSerialized)
38609|                 {
38610|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR2A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
38611|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR2A.HGPE */
38612|                 }
38613| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 38693
Line | AML source
--------------------------------------------------------------------------------
38690| 
38691|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
38692|                 {
38693|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
38694|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
38695|                     While (One)
38696|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 38694
Line | AML source
--------------------------------------------------------------------------------
38691|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
38692|                 {
38693|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
38694|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
38695|                     While (One)
38696|                     {
38697|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR2A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 38726
Line | AML source
--------------------------------------------------------------------------------
38723|                     }
38724|                 }
38725| 
38726|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
38727|                 {
38728|                     Store (0xFF, IO80) /* \IO80 */
38729|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 38748
Line | AML source
--------------------------------------------------------------------------------
38745|                     HPCC (Local0)
38746|                 }
38747| 
38748|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
38749|                 {
38750|                     If (And (HPEV, SSTS))
38751|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 38762
Line | AML source
--------------------------------------------------------------------------------
38759|                     Return (0xFF)
38760|                 }
38761| 
38762|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
38763|                 {
38764|                     Store (0xFE, IO80) /* \IO80 */
38765|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 38783
Line | AML source
--------------------------------------------------------------------------------
38780|                     Sleep (0x0A)
38781|                 }
38782| 
38783|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
38784|                 {
38785|                     Sleep (0xC8)
38786|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
39283
Line | AML source
--------------------------------------------------------------------------------
39280| 
39281|                 Method (OSHP, 0, NotSerialized)
39282|                 {
39283|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR2B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
39284|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR2B.HGPE */
39285|                 }
39286| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 39366
Line | AML source
--------------------------------------------------------------------------------
39363| 
39364|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
39365|                 {
39366|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
39367|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
39368|                     While (One)
39369|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 39367
Line | AML source
--------------------------------------------------------------------------------
39364|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
39365|                 {
39366|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
39367|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
39368|                     While (One)
39369|                     {
39370|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR2B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 39399
Line | AML source
--------------------------------------------------------------------------------
39396|                     }
39397|                 }
39398| 
39399|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
39400|                 {
39401|                     Store (0xFF, IO80) /* \IO80 */
39402|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 39421
Line | AML source
--------------------------------------------------------------------------------
39418|                     HPCC (Local0)
39419|                 }
39420| 
39421|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
39422|                 {
39423|                     If (And (HPEV, SSTS))
39424|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 39435
Line | AML source
--------------------------------------------------------------------------------
39432|                     Return (0xFF)
39433|                 }
39434| 
39435|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
39436|                 {
39437|                     Store (0xFE, IO80) /* \IO80 */
39438|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 39456
Line | AML source
--------------------------------------------------------------------------------
39453|                     Sleep (0x0A)
39454|                 }
39455| 
39456|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
39457|                 {
39458|                     Sleep (0xC8)
39459|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
39956
Line | AML source
--------------------------------------------------------------------------------
39953| 
39954|                 Method (OSHP, 0, NotSerialized)
39955|                 {
39956|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR2C.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
39957|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR2C.HGPE */
39958|                 }
39959| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 40039
Line | AML source
--------------------------------------------------------------------------------
40036| 
40037|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
40038|                 {
40039|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
40040|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
40041|                     While (One)
40042|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 40040
Line | AML source
--------------------------------------------------------------------------------
40037|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
40038|                 {
40039|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
40040|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
40041|                     While (One)
40042|                     {
40043|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR2C._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 40072
Line | AML source
--------------------------------------------------------------------------------
40069|                     }
40070|                 }
40071| 
40072|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
40073|                 {
40074|                     Store (0xFF, IO80) /* \IO80 */
40075|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 40094
Line | AML source
--------------------------------------------------------------------------------
40091|                     HPCC (Local0)
40092|                 }
40093| 
40094|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
40095|                 {
40096|                     If (And (HPEV, SSTS))
40097|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 40108
Line | AML source
--------------------------------------------------------------------------------
40105|                     Return (0xFF)
40106|                 }
40107| 
40108|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
40109|                 {
40110|                     Store (0xFE, IO80) /* \IO80 */
40111|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 40129
Line | AML source
--------------------------------------------------------------------------------
40126|                     Sleep (0x0A)
40127|                 }
40128| 
40129|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
40130|                 {
40131|                     Sleep (0xC8)
40132|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
40629
Line | AML source
--------------------------------------------------------------------------------
40626| 
40627|                 Method (OSHP, 0, NotSerialized)
40628|                 {
40629|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR2D.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
40630|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR2D.HGPE */
40631|                 }
40632| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 40712
Line | AML source
--------------------------------------------------------------------------------
40709| 
40710|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
40711|                 {
40712|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
40713|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
40714|                     While (One)
40715|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 40713
Line | AML source
--------------------------------------------------------------------------------
40710|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
40711|                 {
40712|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
40713|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
40714|                     While (One)
40715|                     {
40716|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR2D._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 40745
Line | AML source
--------------------------------------------------------------------------------
40742|                     }
40743|                 }
40744| 
40745|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
40746|                 {
40747|                     Store (0xFF, IO80) /* \IO80 */
40748|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 40767
Line | AML source
--------------------------------------------------------------------------------
40764|                     HPCC (Local0)
40765|                 }
40766| 
40767|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
40768|                 {
40769|                     If (And (HPEV, SSTS))
40770|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 40781
Line | AML source
--------------------------------------------------------------------------------
40778|                     Return (0xFF)
40779|                 }
40780| 
40781|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
40782|                 {
40783|                     Store (0xFE, IO80) /* \IO80 */
40784|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 40802
Line | AML source
--------------------------------------------------------------------------------
40799|                     Sleep (0x0A)
40800|                 }
40801| 
40802|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
40803|                 {
40804|                     Sleep (0xC8)
40805|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
41302
Line | AML source
--------------------------------------------------------------------------------
41299| 
41300|                 Method (OSHP, 0, NotSerialized)
41301|                 {
41302|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR3A.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
41303|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR3A.HGPE */
41304|                 }
41305| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 41385
Line | AML source
--------------------------------------------------------------------------------
41382| 
41383|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
41384|                 {
41385|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
41386|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
41387|                     While (One)
41388|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 41386
Line | AML source
--------------------------------------------------------------------------------
41383|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
41384|                 {
41385|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
41386|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
41387|                     While (One)
41388|                     {
41389|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR3A._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 41418
Line | AML source
--------------------------------------------------------------------------------
41415|                     }
41416|                 }
41417| 
41418|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
41419|                 {
41420|                     Store (0xFF, IO80) /* \IO80 */
41421|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 41440
Line | AML source
--------------------------------------------------------------------------------
41437|                     HPCC (Local0)
41438|                 }
41439| 
41440|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
41441|                 {
41442|                     If (And (HPEV, SSTS))
41443|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 41454
Line | AML source
--------------------------------------------------------------------------------
41451|                     Return (0xFF)
41452|                 }
41453| 
41454|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
41455|                 {
41456|                     Store (0xFE, IO80) /* \IO80 */
41457|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 41475
Line | AML source
--------------------------------------------------------------------------------
41472|                     Sleep (0x0A)
41473|                 }
41474| 
41475|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
41476|                 {
41477|                     Sleep (0xC8)
41478|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
41975
Line | AML source
--------------------------------------------------------------------------------
41972| 
41973|                 Method (OSHP, 0, NotSerialized)
41974|                 {
41975|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR3B.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
41976|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR3B.HGPE */
41977|                 }
41978| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 42058
Line | AML source
--------------------------------------------------------------------------------
42055| 
42056|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
42057|                 {
42058|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
42059|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
42060|                     While (One)
42061|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 42059
Line | AML source
--------------------------------------------------------------------------------
42056|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
42057|                 {
42058|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
42059|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
42060|                     While (One)
42061|                     {
42062|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR3B._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 42091
Line | AML source
--------------------------------------------------------------------------------
42088|                     }
42089|                 }
42090| 
42091|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
42092|                 {
42093|                     Store (0xFF, IO80) /* \IO80 */
42094|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 42113
Line | AML source
--------------------------------------------------------------------------------
42110|                     HPCC (Local0)
42111|                 }
42112| 
42113|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
42114|                 {
42115|                     If (And (HPEV, SSTS))
42116|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 42127
Line | AML source
--------------------------------------------------------------------------------
42124|                     Return (0xFF)
42125|                 }
42126| 
42127|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
42128|                 {
42129|                     Store (0xFE, IO80) /* \IO80 */
42130|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 42148
Line | AML source
--------------------------------------------------------------------------------
42145|                     Sleep (0x0A)
42146|                 }
42147| 
42148|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
42149|                 {
42150|                     Sleep (0xC8)
42151|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
42648
Line | AML source
--------------------------------------------------------------------------------
42645| 
42646|                 Method (OSHP, 0, NotSerialized)
42647|                 {
42648|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR3C.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
42649|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR3C.HGPE */
42650|                 }
42651| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 42731
Line | AML source
--------------------------------------------------------------------------------
42728| 
42729|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
42730|                 {
42731|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
42732|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
42733|                     While (One)
42734|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 42732
Line | AML source
--------------------------------------------------------------------------------
42729|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
42730|                 {
42731|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
42732|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
42733|                     While (One)
42734|                     {
42735|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR3C._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 42764
Line | AML source
--------------------------------------------------------------------------------
42761|                     }
42762|                 }
42763| 
42764|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
42765|                 {
42766|                     Store (0xFF, IO80) /* \IO80 */
42767|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 42786
Line | AML source
--------------------------------------------------------------------------------
42783|                     HPCC (Local0)
42784|                 }
42785| 
42786|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
42787|                 {
42788|                     If (And (HPEV, SSTS))
42789|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 42800
Line | AML source
--------------------------------------------------------------------------------
42797|                     Return (0xFF)
42798|                 }
42799| 
42800|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
42801|                 {
42802|                     Store (0xFE, IO80) /* \IO80 */
42803|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 42821
Line | AML source
--------------------------------------------------------------------------------
42818|                     Sleep (0x0A)
42819|                 }
42820| 
42821|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
42822|                 {
42823|                     Sleep (0xC8)
42824|                     If (ABPS (0x00))
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
43321
Line | AML source
--------------------------------------------------------------------------------
43318| 
43319|                 Method (OSHP, 0, NotSerialized)
43320|                 {
43321|                     Store (SSTS, SSTS) /* \_SB_.PCI3.SR3D.SSTS */
     |                                    ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
43322|                     Store (0x00, HGPE) /* \_SB_.PCI3.SR3D.HGPE */
43323|                 }
43324| 
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

Assembler remark in line 43404
Line | AML source
--------------------------------------------------------------------------------
43401| 
43402|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
43403|                 {
43404|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_1)
43405|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
43406|                     While (One)
43407|                     {
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

Assembler remark in line 43405
Line | AML source
--------------------------------------------------------------------------------
43402|                 Method (_OST, 3, Serialized)  // _OST: OSPM Status Indication
43403|                 {
43404|                     Name (_T_1, Zero)  // _T_x: Emitted by ASL Compiler
43405|                     Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
     |                             ^
     | Remark 2011: Use of compiler reserved name    (_T_0)
43406|                     While (One)
43407|                     {
43408|                         Store (And (Arg0, 0xFF), _T_0) /* \_SB_.PCI3.SR3D._OST._T_0 */
================================================================================

ADVICE: (for Remark #2011, ASL_MSG_COMPILER_RESERVED): This normally occurs when
disassembled code is being compiled and it contains compiler-emitted names of
the form '_T_x'. This is just a remark generated by the compiler and can
normally be ignored.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 43437
Line | AML source
--------------------------------------------------------------------------------
43434|                     }
43435|                 }
43436| 
43437|                 Method (EJ0L, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
43438|                 {
43439|                     Store (0xFF, IO80) /* \IO80 */
43440|                     Store (SCTL, Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 43459
Line | AML source
--------------------------------------------------------------------------------
43456|                     HPCC (Local0)
43457|                 }
43458| 
43459|                 Method (PMEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
43460|                 {
43461|                     If (And (HPEV, SSTS))
43462|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 43473
Line | AML source
--------------------------------------------------------------------------------
43470|                     Return (0xFF)
43471|                 }
43472| 
43473|                 Method (HPEH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
43474|                 {
43475|                     Store (0xFE, IO80) /* \IO80 */
43476|                     Sleep (0x64)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 43494
Line | AML source
--------------------------------------------------------------------------------
43491|                     Sleep (0x0A)
43492|                 }
43493| 
43494|                 Method (PPXH, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
43495|                 {
43496|                     Sleep (0xC8)
43497|                     If (ABPS (0x00))
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45216
Line | AML source
--------------------------------------------------------------------------------
45213| 
45214|     Scope (_SB)
45215|     {
45216|         Method (TBFP, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45217|         {
45218|             OperationRegion (ECRT, SystemIO, 0x0910, 0x02)
45219|             Field (ECRT, ByteAcc, Lock, Preserve)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 45255
Line | AML source
--------------------------------------------------------------------------------
45252|                 /* 0008 */  0x9C, 0x48, 0x20, 0x21, 0xCB, 0xED, 0xE3, 0x41,  /* .H !...A */
45253|                 /* 0010 */  0x54, 0x46, 0x01, 0x02                           /* TF.. */
45254|             })
45255|             Method (WMTF, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
45256|             {
45257|                 CreateByteField (Arg2, 0x00, FP)
45258|                 If (FP)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 45255
Line | AML source
--------------------------------------------------------------------------------
45252|                 /* 0008 */  0x9C, 0x48, 0x20, 0x21, 0xCB, 0xED, 0xE3, 0x41,  /* .H !...A */
45253|                 /* 0010 */  0x54, 0x46, 0x01, 0x02                           /* TF.. */
45254|             })
45255|             Method (WMTF, 3, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg1)
45256|             {
45257|                 CreateByteField (Arg2, 0x00, FP)
45258|                 If (FP)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45300
Line | AML source
--------------------------------------------------------------------------------
45297|     {
45298|         Name (PEMA, 0xFFFFFFFF)
45299|         Name (TBRP, 0xFFFFFFFF)
45300|         Method (OSUP, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45301|         {
45302|             Add (Arg0, 0x0548, Local0)
45303|             OperationRegion (PXVD, SystemMemory, Local0, 0x08)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45333
Line | AML source
--------------------------------------------------------------------------------
45330|             Return (0x01)
45331|         }
45332| 
45333|         Method (MMTB, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45334|         {
45335|             Store (TBRP, Local0)
45336|             OperationRegion (MMMM, SystemMemory, Local0, 0x1A)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45350
Line | AML source
--------------------------------------------------------------------------------
45347|             Return (Local0)
45348|         }
45349| 
45350|         Method (GDRP, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45351|         {
45352|             Store (TBRP, Local0)
45353|             OperationRegion (RP_X, SystemMemory, Local0, 0x0100)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45364
Line | AML source
--------------------------------------------------------------------------------
45361|             Return (PSD3) /* \_GPE.GDRP.PSD3 */
45362|         }
45363| 
45364|         Method (RPDX, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45365|         {
45366|             Store (TBRP, Local0)
45367|             OperationRegion (RP_X, SystemMemory, Local0, 0x0100)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45418
Line | AML source
--------------------------------------------------------------------------------
45415|             }
45416|         }
45417| 
45418|         Method (TBFF, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45419|         {
45420|             Store (MMTB (), Local0)
45421|             OperationRegion (PXVD, SystemMemory, Local0, 0x04)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45438
Line | AML source
--------------------------------------------------------------------------------
45435|             }
45436|         }
45437| 
45438|         Method (OE1X, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45439|         {
45440|             Name (TSNE, 0xFF)
45441|             Acquire (OSUM, 0xFFFF)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RETURN_TYPES: Test 1, Assembler warning in line
45438
Line | AML source
--------------------------------------------------------------------------------
45435|             }
45436|         }
45437| 
45438|         Method (OE1X, 0, NotSerialized)
     |                   ^
     | Warning 3115: Not all control paths return a value    (OE1X)
45439|         {
45440|             Name (TSNE, 0xFF)
45441|             Acquire (OSUM, 0xFFFF)
================================================================================

ADVICE: (for Warning #3115, ASL_MSG_RETURN_TYPES): Some of the execution paths
do not return a value. All control paths that return must return a value
otherwise unexpected behaviour may occur. This error occurs because a branch on
an conditional op-code returns a value and another does not, which is
inconsistent behaviour.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 45495
Line | AML source
--------------------------------------------------------------------------------
45492|             }
45493|         }
45494| 
45495|         Method (TWAK, 1, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
45496|         {
45497|             Name (RPL1, 0x00)
45498|             Name (RPL6, 0x00)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45495
Line | AML source
--------------------------------------------------------------------------------
45492|             }
45493|         }
45494| 
45495|         Method (TWAK, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45496|         {
45497|             Name (RPL1, 0x00)
45498|             Name (RPL6, 0x00)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 45566
Line | AML source
--------------------------------------------------------------------------------
45563|             }
45564|         }
45565| 
45566|         Method (TPTS, 1, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
45567|         {
45568|             If (LAnd (LNotEqual (TBHR, 0xFF), LNotEqual (TBHR, 0x01)))
45569|             {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45566
Line | AML source
--------------------------------------------------------------------------------
45563|             }
45564|         }
45565| 
45566|         Method (TPTS, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45567|         {
45568|             If (LAnd (LNotEqual (TBHR, 0xFF), LNotEqual (TBHR, 0x01)))
45569|             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45984
Line | AML source
--------------------------------------------------------------------------------
45981|         Name (XSST, 0x1A)
45982|         Name (XRCT, 0x1C)
45983|         Mutex (MUTE, 0x00)
45984|         Method (RBPE, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45985|         {
45986|             Acquire (MUTE, 0x03E8)
45987|             Add (Arg0, PEBS, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_TIMEOUT: Test 1, Assembler warning in line 45986
Line | AML source
--------------------------------------------------------------------------------
45983|         Mutex (MUTE, 0x00)
45984|         Method (RBPE, 1, NotSerialized)
45985|         {
45986|             Acquire (MUTE, 0x03E8)
     |                                ^
     | Warning 3130: Result is not used, possible operator timeout will be missed
45987|             Add (Arg0, PEBS, Local0)
45988|             OperationRegion (PCFG, SystemMemory, Local0, 0x01)
45989|             Field (PCFG, ByteAcc, NoLock, Preserve)
================================================================================

ADVICE: (for Warning #3130, ASL_MSG_TIMEOUT): The operation can possibly timeout
, and hence the return value indicates an timeout error. However, because the
return value is not checked this very probably indicates that the code is buggy.
A possible scenario is that a mutex times out and the code attempts to access
data in a critical region when it should not. This will lead to undefined
behaviour. This should be fixed.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
45998
Line | AML source
--------------------------------------------------------------------------------
45995|             Return (XCFG) /* \_SB_.RBPE.XCFG */
45996|         }
45997| 
45998|         Method (RWPE, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
45999|         {
46000|             Acquire (MUTE, 0x03E8)
46001|             And (Arg0, 0xFFFFFFFE, Arg0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_TIMEOUT: Test 1, Assembler warning in line 46000
Line | AML source
--------------------------------------------------------------------------------
45997| 
45998|         Method (RWPE, 1, NotSerialized)
45999|         {
46000|             Acquire (MUTE, 0x03E8)
     |                                ^
     | Warning 3130: Result is not used, possible operator timeout will be missed
46001|             And (Arg0, 0xFFFFFFFE, Arg0)
46002|             Add (Arg0, PEBS, Local0)
46003|             OperationRegion (PCFG, SystemMemory, Local0, 0x02)
================================================================================

ADVICE: (for Warning #3130, ASL_MSG_TIMEOUT): The operation can possibly timeout
, and hence the return value indicates an timeout error. However, because the
return value is not checked this very probably indicates that the code is buggy.
A possible scenario is that a mutex times out and the code attempts to access
data in a critical region when it should not. This will lead to undefined
behaviour. This should be fixed.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46013
Line | AML source
--------------------------------------------------------------------------------
46010|             Return (XCFG) /* \_SB_.RWPE.XCFG */
46011|         }
46012| 
46013|         Method (RDPE, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46014|         {
46015|             Acquire (MUTE, 0x03E8)
46016|             And (Arg0, 0xFFFFFFFC, Arg0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_TIMEOUT: Test 1, Assembler warning in line 46015
Line | AML source
--------------------------------------------------------------------------------
46012| 
46013|         Method (RDPE, 1, NotSerialized)
46014|         {
46015|             Acquire (MUTE, 0x03E8)
     |                                ^
     | Warning 3130: Result is not used, possible operator timeout will be missed
46016|             And (Arg0, 0xFFFFFFFC, Arg0)
46017|             Add (Arg0, PEBS, Local0)
46018|             OperationRegion (PCFG, SystemMemory, Local0, 0x04)
================================================================================

ADVICE: (for Warning #3130, ASL_MSG_TIMEOUT): The operation can possibly timeout
, and hence the return value indicates an timeout error. However, because the
return value is not checked this very probably indicates that the code is buggy.
A possible scenario is that a mutex times out and the code attempts to access
data in a critical region when it should not. This will lead to undefined
behaviour. This should be fixed.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46028
Line | AML source
--------------------------------------------------------------------------------
46025|             Return (XCFG) /* \_SB_.RDPE.XCFG */
46026|         }
46027| 
46028|         Method (WBPE, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46029|         {
46030|             Acquire (MUTE, 0x0FFF)
46031|             Add (Arg0, PEBS, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_TIMEOUT: Test 1, Assembler warning in line 46030
Line | AML source
--------------------------------------------------------------------------------
46027| 
46028|         Method (WBPE, 2, NotSerialized)
46029|         {
46030|             Acquire (MUTE, 0x0FFF)
     |                                ^
     | Warning 3130: Result is not used, possible operator timeout will be missed
46031|             Add (Arg0, PEBS, Local0)
46032|             OperationRegion (PCFG, SystemMemory, Local0, 0x01)
46033|             Field (PCFG, ByteAcc, NoLock, Preserve)
================================================================================

ADVICE: (for Warning #3130, ASL_MSG_TIMEOUT): The operation can possibly timeout
, and hence the return value indicates an timeout error. However, because the
return value is not checked this very probably indicates that the code is buggy.
A possible scenario is that a mutex times out and the code attempts to access
data in a critical region when it should not. This will lead to undefined
behaviour. This should be fixed.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46042
Line | AML source
--------------------------------------------------------------------------------
46039|             Release (MUTE)
46040|         }
46041| 
46042|         Method (WWPE, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46043|         {
46044|             Acquire (MUTE, 0x03E8)
46045|             And (Arg0, 0xFFFFFFFE, Arg0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_TIMEOUT: Test 1, Assembler warning in line 46044
Line | AML source
--------------------------------------------------------------------------------
46041| 
46042|         Method (WWPE, 2, NotSerialized)
46043|         {
46044|             Acquire (MUTE, 0x03E8)
     |                                ^
     | Warning 3130: Result is not used, possible operator timeout will be missed
46045|             And (Arg0, 0xFFFFFFFE, Arg0)
46046|             Add (Arg0, PEBS, Local0)
46047|             OperationRegion (PCFG, SystemMemory, Local0, 0x02)
================================================================================

ADVICE: (for Warning #3130, ASL_MSG_TIMEOUT): The operation can possibly timeout
, and hence the return value indicates an timeout error. However, because the
return value is not checked this very probably indicates that the code is buggy.
A possible scenario is that a mutex times out and the code attempts to access
data in a critical region when it should not. This will lead to undefined
behaviour. This should be fixed.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46057
Line | AML source
--------------------------------------------------------------------------------
46054|             Release (MUTE)
46055|         }
46056| 
46057|         Method (WDPE, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46058|         {
46059|             Acquire (MUTE, 0x03E8)
46060|             And (Arg0, 0xFFFFFFFC, Arg0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_TIMEOUT: Test 1, Assembler warning in line 46059
Line | AML source
--------------------------------------------------------------------------------
46056| 
46057|         Method (WDPE, 2, NotSerialized)
46058|         {
46059|             Acquire (MUTE, 0x03E8)
     |                                ^
     | Warning 3130: Result is not used, possible operator timeout will be missed
46060|             And (Arg0, 0xFFFFFFFC, Arg0)
46061|             Add (Arg0, PEBS, Local0)
46062|             OperationRegion (PCFG, SystemMemory, Local0, 0x04)
================================================================================

ADVICE: (for Warning #3130, ASL_MSG_TIMEOUT): The operation can possibly timeout
, and hence the return value indicates an timeout error. However, because the
return value is not checked this very probably indicates that the code is buggy.
A possible scenario is that a mutex times out and the code attempts to access
data in a critical region when it should not. This will lead to undefined
behaviour. This should be fixed.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46072
Line | AML source
--------------------------------------------------------------------------------
46069|             Release (MUTE)
46070|         }
46071| 
46072|         Method (RWDP, 3, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46073|         {
46074|             Acquire (MUTE, 0x03E8)
46075|             And (Arg0, 0xFFFFFFFC, Arg0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_TIMEOUT: Test 1, Assembler warning in line 46074
Line | AML source
--------------------------------------------------------------------------------
46071| 
46072|         Method (RWDP, 3, NotSerialized)
46073|         {
46074|             Acquire (MUTE, 0x03E8)
     |                                ^
     | Warning 3130: Result is not used, possible operator timeout will be missed
46075|             And (Arg0, 0xFFFFFFFC, Arg0)
46076|             Add (Arg0, PEBS, Local0)
46077|             OperationRegion (PCFG, SystemMemory, Local0, 0x04)
================================================================================

ADVICE: (for Warning #3130, ASL_MSG_TIMEOUT): The operation can possibly timeout
, and hence the return value indicates an timeout error. However, because the
return value is not checked this very probably indicates that the code is buggy.
A possible scenario is that a mutex times out and the code attempts to access
data in a critical region when it should not. This will lead to undefined
behaviour. This should be fixed.

FAILED [MEDIUM] AMLAsmASL_MSG_RETURN_TYPES: Test 1, Assembler warning in line
46088
Line | AML source
--------------------------------------------------------------------------------
46085|             Release (MUTE)
46086|         }
46087| 
46088|         Method (RPME, 1, NotSerialized)
     |                   ^
     | Warning 3115: Not all control paths return a value    (RPME)
46089|         {
46090|             Add (Arg0, 0x84, Local0)
46091|             Store (RDPE (Local0), Local1)
================================================================================

ADVICE: (for Warning #3115, ASL_MSG_RETURN_TYPES): Some of the execution paths
do not return a value. All control paths that return must return a value
otherwise unexpected behaviour may occur. This error occurs because a branch on
an conditional op-code returns a value and another does not, which is
inconsistent behaviour.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46429
Line | AML source
--------------------------------------------------------------------------------
46426|         Return (VAL) /* \BDRD.VAL_ */
46427|     }
46428| 
46429|     Method (STRE, 2, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46430|     {
46431|         Name (STR1, Buffer (0x50) {})
46432|         Name (STR2, Buffer (0x50) {})
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46452
Line | AML source
--------------------------------------------------------------------------------
46449|         Return (One)
46450|     }
46451| 
46452|     Method (XPTB, 1, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46453|     {
46454|         Store (SizeOf (Arg0), Local0)
46455|         If (LEqual (ObjectType (Arg0), 0x02))
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_RECURSION: Test 1, Assembler remark in line 46477
Line | AML source
--------------------------------------------------------------------------------
46474|         If (LGreaterEqual (Arg0, 0x0A))
46475|         {
46476|             Divide (Arg0, 0x0A, Local0, Local1)
46477|             Store (STDG (Local1, Arg1, Arg2), Arg2)
     |                      ^
     | Remark 2098: Recursive method call    (STDG)
46478|         }
46479| 
46480|         Add (Local0, 0x30, Local0)
================================================================================

ADVICE: (for Remark #2098, ASL_MSG_RECURSION): Internal IASL Node recursion
detected.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46486
Line | AML source
--------------------------------------------------------------------------------
46483|         Return (Arg2)
46484|     }
46485| 
46486|     Method (XPTS, 1, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46487|     {
46488|         Name (LBUF, Buffer (0x20) {})
46489|         Store (STDG (Arg0, LBUF, 0x00), Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46502
Line | AML source
--------------------------------------------------------------------------------
46499|         Mutex (SMIX, 0x01)
46500|         Name (SMBA, 0x3AF18000)
46501|         Name (PSMI, 0x000000B2)
46502|         Method (SNVC, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46503|         {
46504|             OperationRegion (WWPR, SystemMemory, SMBA, 0x04)
46505|             Field (WWPR, DWordAcc, Lock, Preserve)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46513
Line | AML source
--------------------------------------------------------------------------------
46510|             Store (Arg0, SCDW) /* \SNVC.SCDW */
46511|         }
46512| 
46513|         Method (SNWB, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46514|         {
46515|             Store (SMBA, Local0)
46516|             Add (Local0, Arg1, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46528
Line | AML source
--------------------------------------------------------------------------------
46525|             Store (SVAL, SBY0) /* \SNWB.SBY0 */
46526|         }
46527| 
46528|         Method (SNRB, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46529|         {
46530|             Store (SMBA, Local0)
46531|             Add (Local0, Arg1, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46544
Line | AML source
--------------------------------------------------------------------------------
46541|             Return (Arg0)
46542|         }
46543| 
46544|         Method (SNVP, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46545|         {
46546|             Store (SMBA, Local0)
46547|             Add (Local0, Arg1, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46559
Line | AML source
--------------------------------------------------------------------------------
46556|             Store (SVAL, SDW0) /* \SNVP.SDW0 */
46557|         }
46558| 
46559|         Method (SNVG, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46560|         {
46561|             Store (SMBA, Local0)
46562|             Add (Local0, Arg1, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46593
Line | AML source
--------------------------------------------------------------------------------
46590|             Return (Local0)
46591|         }
46592| 
46593|         Method (SMBI, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46594|         {
46595|             SNVC (Arg0)
46596|             Add (SMBA, 0x04, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 46621
Line | AML source
--------------------------------------------------------------------------------
46618|             }
46619| 
46620|             SNVC (Arg0)
46621|             Divide (Arg2, 0x04, Local3, Local4)
     |                                             ^
     | Warning 3144: Method Local is set but never used    (Local4)
46622|             Store (0x00, Local0)
46623|             While (LLess (Local0, Local3))
46624|             {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
46652
Line | AML source
--------------------------------------------------------------------------------
46649|             Return (Arg1)
46650|         }
46651| 
46652|         Method (ASMI, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
46653|         {
46654|             OperationRegion (SMIR, SystemIO, PSMI, 0x01)
46655|             Field (SMIR, ByteAcc, Lock, Preserve)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

Table DSDT (0) reassembly: Found 16 errors, 60 warnings, 358 remarks.


Checking ACPI table SSDT (#1)

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
1465
Line | AML source
--------------------------------------------------------------------------------
01462|                 0x00
01463|             }
01464|         })
01465|         Method (PDC, 1, NotSerialized)
     |                  ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
01466|         {
01467|             CreateDWordField (Arg0, 0x08, CAPA)
01468|             CreateDWordField (Arg0, 0x00, REVS)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 1467
Line | AML source
--------------------------------------------------------------------------------
01464|         })
01465|         Method (PDC, 1, NotSerialized)
01466|         {
01467|             CreateDWordField (Arg0, 0x08, CAPA)
     |                                             ^
     | Remark 2089: Object is not referenced    (Name is within method [PDC_])
01468|             CreateDWordField (Arg0, 0x00, REVS)
01469|             CreateDWordField (Arg0, 0x04, SIZE)
01470|             Store (SizeOf (Arg0), Local0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 1481
Line | AML source
--------------------------------------------------------------------------------
01478|             OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
01479|         }
01480| 
01481|         Method (OSC, 4, NotSerialized)
     |                  ^
     | Remark 2146: Method Argument is never used    (Arg2)
01482|         {
01483|             CreateDWordField (Arg3, 0x04, CAPA)
01484|             Store (CAPA, TYPE) /* \_SB_.TYPE */
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
1481
Line | AML source
--------------------------------------------------------------------------------
01478|             OSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2)
01479|         }
01480| 
01481|         Method (OSC, 4, NotSerialized)
     |                  ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
01482|         {
01483|             CreateDWordField (Arg3, 0x04, CAPA)
01484|             Store (CAPA, TYPE) /* \_SB_.TYPE */
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

Table SSDT (1) reassembly: Found 0 errors, 0 warnings, 4 remarks.


================================================================================
0 passed, 331 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

stao: STAO Status Override Table test.
--------------------------------------------------------------------------------
ACPI STAO table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

srat: SRAT System Resource Affinity Table test.
--------------------------------------------------------------------------------
ACPI SRAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spmi: SPMI Service Processor Management Interface Description Table test.
--------------------------------------------------------------------------------
ACPI SPMI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spcr: SPCR Serial Port Console Redirection Table test.
--------------------------------------------------------------------------------
ACPI SPCR table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slit: SLIT System Locality Distance Information test.
--------------------------------------------------------------------------------
ACPI SLIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slic: SLIC Software Licensing Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: SLIC Software Licensing Description Table test.
Software Licensing Description Table
SLIC Public Key Structure has had minimal check due to proprietary nature of the
table
SLIC Windows Marker Structure has had minimal check due to proprietary nature of
the table
PASSED: Test 1, No issues found in SLIC table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

sbst: SBST Smart Battery Specification Table test.
--------------------------------------------------------------------------------
ACPI SBST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

rsdt: RSDT Root System Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDT Root System Description Table test.
PASSED: Test 1, No issues found in RSDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

rsdp: RSDP Root System Description Pointer test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDP Root System Description Pointer test.
PASSED: Test 1, No issues found in RSDP table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pcc: Processor Clocking Control (PCC) test.
--------------------------------------------------------------------------------
Test 1 of 1: Processor Clocking Control (PCC) test.
This test checks the sanity of the Processor Clocking Control as found on some
HP ProLiant machines. Most computers do not use this interface to control the
CPU clock frequency, so this test will be skipped.

This machine does not use Processor Clocking Control (PCC).

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

osilinux: Disassemble DSDT to check for _OSI("Linux").
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble DSDT to check for _OSI("Linux").
This is not strictly a failure mode, it just alerts one that this has been
defined in the DSDT and probably should be avoided since the Linux ACPI driver
matches onto the Windows _OSI strings
                {
                    Store (0x0D, OSYS) /* \_SB_.OSYS */
                }
                If (_OSI ("Linux"))
                {
                    Store (0x01, OSYS) /* \_SB_.OSYS */
                }
                If (_OSI ("FreeBSD"))
                {
                    Store (0x02, OSYS) /* \_SB_.OSYS */
                }
                If (_OSI ("HP-UX"))
                {
                    Store (0x03, OSYS) /* \_SB_.OSYS */
                }
                If (_OSI ("OpenVMS"))
                {
                    Store (0x04, OSYS) /* \_SB_.OSYS */
                }
                If (LGreaterEqual (OSYS, 0x0D))
                {
                    If (LEqual (XCNT, 0x00))
                    {
                        ^PCI0.XHCI.XSEL (0x00)
                        Store (0x84, IO80) /* \IO80 */
                        Increment (XCNT)
                    }
WARNING: Test 1, DSDT implements a deprecated _OSI("Linux") test.

================================================================================
0 passed, 0 failed, 1 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

method: ACPI DSDT Method Semantic tests.
--------------------------------------------------------------------------------
FADT Preferred PM profile indicates this is not a Mobile Platform.
Test 1 of 191: Test Method Names.
Found 8082 Objects 
PASSED: Test 1, Method names contain legal characters.

Test 2 of 191: Test _AEI.
SKIPPED: Test 2, Skipping test for non-existant object _AEI.

Test 3 of 191: Test _EVT (Event Method).
SKIPPED: Test 3, Skipping test for non-existant object _EVT.

Test 4 of 191: Test _DLM (Device Lock Mutex).
SKIPPED: Test 4, Skipping test for non-existant object _DLM.

Test 5 of 191: Test _PIC (Inform AML of Interrupt Model).
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.

Test 6 of 191: Test _CID (Compatible ID).
PASSED: Test 6, \_SB_.PCI0._CID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 6, \_SB_.PCI0.LPC0.PS2K._CID returned an integer 0x0b03d041 (EISA
ID PNP030B).
PASSED: Test 6, \_SB_.PCI0.LPC0.PS2M._CID returned an integer 0x130fd041 (EISA
ID PNP0F13).
PASSED: Test 6, \_SB_.PCI1._CID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 6, \_SB_.PCI2._CID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 6, \_SB_.PCI3._CID returned an integer 0x030ad041 (EISA ID
PNP0A03).

Test 7 of 191: Test _DDN (DOS Device Name).
SKIPPED: Test 7, Skipping test for non-existant object _DDN.

Test 8 of 191: Test _HID (Hardware ID).
PASSED: Test 8, \_SB_.UNC3._HID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 8, \_SB_.UNC2._HID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 8, \_SB_.UNC1._HID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 8, \_SB_.UNC0._HID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 8, \_SB_.SCK0._HID returned a string 'ACPI0004' as expected.
PASSED: Test 8, \_SB_.SCK1._HID returned a string 'ACPI0004' as expected.
PASSED: Test 8, \_SB_.SCK2._HID returned a string 'ACPI0004' as expected.
PASSED: Test 8, \_SB_.SCK3._HID returned a string 'ACPI0004' as expected.
PASSED: Test 8, \_SB_.WERR._HID returned an integer 0x330cd041 (EISA ID
PNP0C33).
PASSED: Test 8, \_SB_.SRIO._HID returned a string 'PNP0C14' as expected.
PASSED: Test 8, \_SB_.PCI0._HID returned an integer 0x080ad041 (EISA ID
PNP0A08).
PASSED: Test 8, \_SB_.PCI0.APIC._HID returned an integer 0x0300d041 (EISA ID
PNP0003).
PASSED: Test 8, \_SB_.PCI0.LPC0.DMAC._HID returned an integer 0x0002d041 (EISA
ID PNP0200).
PASSED: Test 8, \_SB_.PCI0.LPC0.RTC_._HID returned an integer 0x000bd041 (EISA
ID PNP0B00).
PASSED: Test 8, \_SB_.PCI0.LPC0.PIC_._HID returned an integer 0x0000d041 (EISA
ID PNP0000).
PASSED: Test 8, \_SB_.PCI0.LPC0.FPU_._HID returned an integer 0x040cd041 (EISA
ID PNP0C04).
PASSED: Test 8, \_SB_.PCI0.LPC0.TMR_._HID returned an integer 0x0001d041 (EISA
ID PNP0100).
PASSED: Test 8, \_SB_.PCI0.LPC0.SPKR._HID returned an integer 0x0008d041 (EISA
ID PNP0800).
PASSED: Test 8, \_SB_.PCI0.LPC0.HPET._HID returned an integer 0x0301d041 (EISA
ID PNP0103).
PASSED: Test 8, \_SB_.PCI0.LPC0.XTRA._HID returned an integer 0x020cd041 (EISA
ID PNP0C02).
PASSED: Test 8, \_SB_.PCI0.LPC0.SIO1._HID returned an integer 0x020cd041 (EISA
ID PNP0C02).
PASSED: Test 8, \_SB_.PCI0.LPC0.UAR1._HID returned an integer 0x0105d041 (EISA
ID PNP0501).
PASSED: Test 8, \_SB_.PCI0.LPC0.LPCD._HID returned an integer 0x080cd041 (EISA
ID PNP0C08).
PASSED: Test 8, \_SB_.PCI0.LPC0.PS2K._HID returned an integer 0x0303d041 (EISA
ID PNP0303).
PASSED: Test 8, \_SB_.PCI0.LPC0.PS2M._HID returned an integer 0x030fd041 (EISA
ID PNP0F03).
PASSED: Test 8, \_SB_.PCI1._HID returned an integer 0x080ad041 (EISA ID
PNP0A08).
PASSED: Test 8, \_SB_.PCI2._HID returned an integer 0x080ad041 (EISA ID
PNP0A08).
PASSED: Test 8, \_SB_.PCI3._HID returned an integer 0x080ad041 (EISA ID
PNP0A08).
PASSED: Test 8, \_SB_.PWRB._HID returned an integer 0x0c0cd041 (EISA ID
PNP0C0C).
PASSED: Test 8, \_SB_.WMTF._HID returned a string 'PNP0C14' as expected.
PASSED: Test 8, \_SB_.LNKA._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKB._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKC._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKD._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKE._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKF._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKG._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKH._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).

Test 9 of 191: Test _HRV (Hardware Revision Number).
SKIPPED: Test 9, Skipping test for non-existant object _HRV.

Test 10 of 191: Test _MLS (Multiple Language String).
SKIPPED: Test 10, Skipping test for non-existant object _MLS.

Test 11 of 191: Test _PLD (Physical Device Location).
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR11._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR12._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR13._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR14._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR15._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR16._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR17._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR18._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR11._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR12._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR13._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR14._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR15._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR16._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS01._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS02._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS03._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS04._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS05._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS06._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS07._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS08._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS09._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS10._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS11._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS12._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS13._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.HS14._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.SSP1._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.SSP2._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.SSP3._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.SSP4._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.SSP5._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.XHCI.RHUB.SSP6._PLD correctly returned a sane
looking package.

Test 12 of 191: Test _SUB (Subsystem ID).
SKIPPED: Test 12, Skipping test for non-existant object _SUB.

Test 13 of 191: Test _SUN (Slot User Number).
PASSED: Test 13, \_SB_.PCI0.DMI0.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.DMI0.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.DMI0.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.DMI0.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.DMI0.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.DMI0.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.DMI0.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.DMI0.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR1B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2C.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2C.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2C.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2C.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2C.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2C.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2C.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2C.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2D.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2D.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2D.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2D.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2D.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2D.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2D.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR2D.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3C.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3C.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3C.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3C.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3C.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3C.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3C.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3C.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3D.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3D.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3D.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3D.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3D.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3D.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3D.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI0.BR3D.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QRP0.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QRP0.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QRP0.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QRP0.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QRP0.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QRP0.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QRP0.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QRP0.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR1B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2C.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2C.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2C.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2C.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2C.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2C.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2C.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2C.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2D.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2D.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2D.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2D.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2D.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2D.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2D.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR2D.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3C.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3C.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3C.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3C.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3C.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3C.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3C.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3C.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3D.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3D.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3D.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3D.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3D.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3D.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3D.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI1.QR3D.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RRP0.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RRP0.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RRP0.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RRP0.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RRP0.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RRP0.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RRP0.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RRP0.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR1B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2C.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2C.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2C.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2C.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2C.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2C.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2C.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2C.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2D.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2D.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2D.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2D.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2D.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2D.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2D.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR2D.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3C.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3C.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3C.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3C.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3C.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3C.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3C.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3C.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3D.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3D.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3D.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3D.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3D.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3D.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3D.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI2.RR3D.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SRP0.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SRP0.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SRP0.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SRP0.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SRP0.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SRP0.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SRP0.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SRP0.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR1B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2C.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2C.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2C.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2C.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2C.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2C.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2C.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2C.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2D.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2D.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2D.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2D.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2D.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2D.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2D.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR2D.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3A.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3A.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3A.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3A.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3A.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3A.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3A.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3A.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3B.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3B.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3B.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3B.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3B.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3B.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3B.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3B.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3C.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3C.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3C.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3C.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3C.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3C.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3C.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3C.H007._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3D.H000._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3D.H001._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3D.H002._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3D.H003._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3D.H004._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3D.H005._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3D.H006._SUN correctly returned an integer.
PASSED: Test 13, \_SB_.PCI3.SR3D.H007._SUN correctly returned an integer.

Test 14 of 191: Test _STR (String).
SKIPPED: Test 14, Skipping test for non-existant object _STR.

Test 15 of 191: Test _UID (Unique ID).
PASSED: Test 15, \_SB_.UNC3._UID correctly returned sane looking value
0x000000ff.
PASSED: Test 15, \_SB_.UNC2._UID correctly returned sane looking value
0x000000bf.
PASSED: Test 15, \_SB_.UNC1._UID correctly returned sane looking value
0x0000007f.
PASSED: Test 15, \_SB_.UNC0._UID correctly returned sane looking value
0x0000003f.
PASSED: Test 15, \_SB_.SCK0._UID returned a string 'CPUSCK0' as expected.
PASSED: Test 15, \_SB_.SCK1._UID returned a string 'CPUSCK1' as expected.
PASSED: Test 15, \_SB_.SCK2._UID returned a string 'CPUSCK2' as expected.
PASSED: Test 15, \_SB_.SCK3._UID returned a string 'CPUSCK3' as expected.
PASSED: Test 15, \_SB_.WERR._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.SRIO._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.IIOP._UID returned a string 'PCI0PRES' as expected.
PASSED: Test 15, \_SB_.PCI0.MHP0._UID returned a string '00-00' as expected.
PASSED: Test 15, \_SB_.PCI0.MHP1._UID returned a string '00-01' as expected.
PASSED: Test 15, \_SB_.PCI0.LPC0.XTRA._UID correctly returned sane looking value
0x00000010.
PASSED: Test 15, \_SB_.PCI0.LPC0.SIO1._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPC0.UAR1._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPC0.LPCD._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPC0.PS2K._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPC0.PS2M._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI1._UID correctly returned sane looking value
0x00000080.
PASSED: Test 15, \_SB_.PCI1.IIOP._UID returned a string 'IIO1PRES' as expected.
PASSED: Test 15, \_SB_.PCI1.MHP0._UID returned a string '01-00' as expected.
PASSED: Test 15, \_SB_.PCI1.MHP1._UID returned a string '01-01' as expected.
PASSED: Test 15, \_SB_.PCI2._UID correctly returned sane looking value
0x000000c0.
PASSED: Test 15, \_SB_.PCI2.IIOP._UID returned a string 'IIO2PRES' as expected.
PASSED: Test 15, \_SB_.PCI2.MHP0._UID returned a string '02-00' as expected.
PASSED: Test 15, \_SB_.PCI2.MHP1._UID returned a string '02-01' as expected.
PASSED: Test 15, \_SB_.PCI3._UID correctly returned sane looking value
0x000000e0.
PASSED: Test 15, \_SB_.PCI3.IIOP._UID returned a string 'IIO3PRES' as expected.
PASSED: Test 15, \_SB_.PCI3.MHP0._UID returned a string '03-00' as expected.
PASSED: Test 15, \_SB_.PCI3.MHP1._UID returned a string '03-01' as expected.
PASSED: Test 15, \_SB_.PWRB._UID correctly returned sane looking value
0x000000aa.
PASSED: Test 15, \_SB_.WMTF._UID returned a string 'TBFP' as expected.
PASSED: Test 15, \_SB_.LNKA._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.LNKB._UID correctly returned sane looking value
0x00000002.
PASSED: Test 15, \_SB_.LNKC._UID correctly returned sane looking value
0x00000003.
PASSED: Test 15, \_SB_.LNKD._UID correctly returned sane looking value
0x00000004.
PASSED: Test 15, \_SB_.LNKE._UID correctly returned sane looking value
0x00000005.
PASSED: Test 15, \_SB_.LNKF._UID correctly returned sane looking value
0x00000006.
PASSED: Test 15, \_SB_.LNKG._UID correctly returned sane looking value
0x00000007.
PASSED: Test 15, \_SB_.LNKH._UID correctly returned sane looking value
0x00000008.

Test 16 of 191: Test _CDM (Clock Domain).
SKIPPED: Test 16, Skipping test for non-existant object _CDM.

Test 17 of 191: Test _CRS (Current Resource Settings).
PASSED: Test 17, \_SB_.UNC3._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.UNC2._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.UNC1._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.UNC0._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.APIC._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.DMAC._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.RTC_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.PIC_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.FPU_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.TMR_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.SPKR._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.HPET._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.XTRA._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.SIO1._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.UAR1._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.PS2K._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.PS2M._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI1._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI2._CRS (WORD Address Space Descriptor) looks sane.
FAILED [MEDIUM] Method_CRS64BitWordAddrSpaceMaxLessThanMin: Test 17,
\_SB_.PCI3._CRS WORD Address Space Descriptor minimum address range 0x4858 is
greater than the maximum address range 0x0.

ADVICE: See section '6.4.3.5 Address Space Resource Descriptors' table 6-179 of
the ACPI specification for more details about how the _MIF, _MAF and memory
range and granularity rules apply. Typically the kernel does not care about
these being correct, so this is a minor issue.

FAILED [MEDIUM] Method_CRS64BitWordAddrSpaceLengthInvalid: Test 17,
\_SB_.PCI3._CRS WORD Address Space Descriptor length 0x1 does not match the
difference between the minimum and maximum address ranges 0x4858-0x0.

ADVICE: See section '6.4.3.5 Address Space Resource Descriptors' table 6-179 of
the ACPI specification for more details about how the _MIF, _MAF and memory
range and granularity rules apply. Typically the kernel does not care about
these being correct, so this is a minor issue.

PASSED: Test 17, \_SB_.LNKA._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKB._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKC._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKD._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKE._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKF._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKG._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKH._CRS (IRQ Descriptor) looks sane.

Test 18 of 191: Test _DSD (Device Specific Data).
SKIPPED: Test 18, Skipping test for non-existant object _DSD.

Test 19 of 191: Test _DIS (Disable).
PASSED: Test 19, \_SB_.PCI0.LPC0.UAR1._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKA._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKB._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKC._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKD._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKE._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKF._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKG._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKH._DIS returned no values as expected.

Test 20 of 191: Test _DMA (Direct Memory Access).
SKIPPED: Test 20, Skipping test for non-existant object _DMA.

Test 21 of 191: Test _FIX (Fixed Register Resource Provider).
SKIPPED: Test 21, Skipping test for non-existant object _FIX.

Test 22 of 191: Test _GSB (Global System Interrupt Base).
SKIPPED: Test 22, Skipping test for non-existant object _GSB.

Test 23 of 191: Test _HPP (Hot Plug Parameters).
PASSED: Test 23, \_SB_.PCI0.DMI0._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR1A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR1B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR2A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR2B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR2C._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR2D._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR3A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR3B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR3C._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI0.BR3D._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QRP0._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR1A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR1B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR2A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR2B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR2C._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR2D._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR3A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR3B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR3C._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI1.QR3D._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RRP0._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR1A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR1B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR2A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR2B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR2C._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR2D._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR3A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR3B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR3C._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI2.RR3D._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SRP0._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR1A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR1B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR2A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR2B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR2C._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR2D._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR3A._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR3B._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR3C._HPP correctly returned a sane looking package.
PASSED: Test 23, \_SB_.PCI3.SR3D._HPP correctly returned a sane looking package.

Test 24 of 191: Test _PRS (Possible Resource Settings).
PASSED: Test 24, \_SB_.PCI0.LPC0.UAR1._PRS (Start Dependent Functions
Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPC0.PS2K._PRS (Start Dependent Functions
Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPC0.PS2M._PRS (Start Dependent Functions
Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKA._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKB._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKC._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKD._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKE._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKF._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKG._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKH._PRS (IRQ Descriptor) looks sane.

Test 25 of 191: Test _PXM (Proximity).
PASSED: Test 25, \_SB_.PCI0._PXM correctly returned an integer.
PASSED: Test 25, \_SB_.PCI1._PXM correctly returned an integer.
PASSED: Test 25, \_SB_.PCI2._PXM correctly returned an integer.
PASSED: Test 25, \_SB_.PCI3._PXM correctly returned an integer.

Test 26 of 191: Test _CCA (Cache Coherency Attribute).
SKIPPED: Test 26, Skipping test for non-existant object _CCA.

Test 27 of 191: Test _EDL (Eject Device List).
SKIPPED: Test 27, Skipping test for non-existant object _EDL.

Test 28 of 191: Test _EJD (Ejection Dependent Device).
PASSED: Test 28, \_SB_.UNC3._EJD correctly returned a string.
PASSED: Test 28, \_SB_.UNC2._EJD correctly returned a string.
PASSED: Test 28, \_SB_.UNC1._EJD correctly returned a string.
PASSED: Test 28, \_SB_.UNC0._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QRP0._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR1A._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR1B._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR2A._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR2B._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR2C._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR2D._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR3A._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR3B._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR3C._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI1.QR3D._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RRP0._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR1A._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR1B._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR2A._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR2B._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR2C._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR2D._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR3A._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR3B._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR3C._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI2.RR3D._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SRP0._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR1A._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR1B._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR2A._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR2B._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR2C._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR2D._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR3A._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR3B._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR3C._EJD correctly returned a string.
PASSED: Test 28, \_SB_.PCI3.SR3D._EJD correctly returned a string.

Test 29 of 191: Test _EJ0 (Eject).
SKIPPED: Test 29, Skipping test for non-existant object _EJ0.

Test 30 of 191: Test _EJ1 (Eject).
SKIPPED: Test 30, Skipping test for non-existant object _EJ1.

Test 31 of 191: Test _EJ2 (Eject).
SKIPPED: Test 31, Skipping test for non-existant object _EJ2.

Test 32 of 191: Test _EJ3 (Eject).
SKIPPED: Test 32, Skipping test for non-existant object _EJ3.

Test 33 of 191: Test _EJ4 (Eject).
SKIPPED: Test 33, Skipping test for non-existant object _EJ4.

Test 34 of 191: Test _LCK (Lock).
SKIPPED: Test 34, Skipping test for non-existant object _LCK.

Test 35 of 191: Test _RMV (Remove).
SKIPPED: Test 35, Skipping test for non-existant object _RMV.

Test 36 of 191: Test _STA (Status).
PASSED: Test 36, \_SB_.UNC3._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.UNC2._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.UNC1._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.UNC0._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.WERR._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.SRIO._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.LPC0.HPET._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPC0.UAR1._STA correctly returned sane looking value
0x0000000d.
PASSED: Test 36, \_SB_.PCI0.LPC0.LPCD._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPC0.PS2K._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPC0.PS2M._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS01._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS02._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS03._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS04._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS05._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS06._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS07._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS08._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS09._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS10._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS11._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS12._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS13._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.HS14._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.SSP1._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.SSP2._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.SSP3._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.SSP4._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.SSP5._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI0.XHCI.RHUB.SSP6._STA correctly returned sane looking
value 0x0000000f.
PASSED: Test 36, \_SB_.PCI1._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI2._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI3._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PWRB._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKA._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKB._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKC._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKD._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKE._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKF._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKG._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKH._STA correctly returned sane looking value
0x0000000b.

Test 37 of 191: Test _DEP (Operational Region Dependencies).
SKIPPED: Test 37, Skipping test for non-existant object _DEP.

Test 38 of 191: Test _BDN (BIOS Dock Name).
SKIPPED: Test 38, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BDN.

Test 39 of 191: Test _BBN (Base Bus Number).
PASSED: Test 39, \_SB_.UNC3._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.UNC2._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.UNC1._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.UNC0._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI0._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI1._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI2._BBN correctly returned an integer.
PASSED: Test 39, \_SB_.PCI3._BBN correctly returned an integer.

Test 40 of 191: Test _DCK (Dock).
SKIPPED: Test 40, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _DCK.

Test 41 of 191: Test _INI (Initialize).
PASSED: Test 41, \_SB_._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.DMI0._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR1A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR1B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR2A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR2B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR2C._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR2D._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR3A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR3B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR3C._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.BR3D._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.RP05._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.EHC1._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.EHC2._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI0.XHCI._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QRP0._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR1A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR1B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR2A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR2B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR2C._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR2D._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR3A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR3B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR3C._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI1.QR3D._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RRP0._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR1A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR1B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR2A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR2B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR2C._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR2D._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR3A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR3B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR3C._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI2.RR3D._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SRP0._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR1A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR1B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR2A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR2B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR2C._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR2D._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR3A._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR3B._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR3C._INI returned no values as expected.
PASSED: Test 41, \_SB_.PCI3.SR3D._INI returned no values as expected.

Test 42 of 191: Test _GLK (Global Lock).
SKIPPED: Test 42, Skipping test for non-existant object _GLK.

Test 43 of 191: Test _SEG (Segment).
SKIPPED: Test 43, Skipping test for non-existant object _SEG.

Test 44 of 191: Test _OFF (Set resource off).
SKIPPED: Test 44, Skipping test for non-existant object _OFF.

Test 45 of 191: Test _ON (Set resource on).
SKIPPED: Test 45, Skipping test for non-existant object _ON.

Test 46 of 191: Test _DSW (Device Sleep Wake).
SKIPPED: Test 46, Skipping test for non-existant object _DSW.

Test 47 of 191: Test _IRC (In Rush Current).
SKIPPED: Test 47, Skipping test for non-existant object _IRC.

Test 48 of 191: Test _PRE (Power Resources for Enumeration).
SKIPPED: Test 48, Skipping test for non-existant object _PRE.

Test 49 of 191: Test _PR0 (Power Resources for D0).
SKIPPED: Test 49, Skipping test for non-existant object _PR0.

Test 50 of 191: Test _PR1 (Power Resources for D1).
SKIPPED: Test 50, Skipping test for non-existant object _PR1.

Test 51 of 191: Test _PR2 (Power Resources for D2).
SKIPPED: Test 51, Skipping test for non-existant object _PR2.

Test 52 of 191: Test _PR3 (Power Resources for D3).
SKIPPED: Test 52, Skipping test for non-existant object _PR3.

Test 53 of 191: Test _PRW (Power Resources for Wake).
PASSED: Test 53, \_SB_.PCI0.LPC0.PS2K._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.LPC0.PS2M._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.IP2P._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP01._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP02._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP03._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP04._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP06._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP07._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP08._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR1A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR1B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR2A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR2B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR2C._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR2D._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR3A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR3B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR3C._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.BR3D._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP05._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.LAN0._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.EHC1._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.EHC2._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.XHCI._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QRP0._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR1A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR1B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR2A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR2B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR2C._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR2D._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR3A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR3B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR3C._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI1.QR3D._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RRP0._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR1A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR1B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR2A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR2B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR2C._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR2D._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR3A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR3B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR3C._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI2.RR3D._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SRP0._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR1A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR1B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR2A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR2B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR2C._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR2D._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR3A._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR3B._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR3C._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI3.SR3D._PRW correctly returned a sane looking package.

Test 54 of 191: Test _PS0 (Power State 0).
SKIPPED: Test 54, Skipping test for non-existant object _PS0.

Test 55 of 191: Test _PS1 (Power State 1).
SKIPPED: Test 55, Skipping test for non-existant object _PS1.

Test 56 of 191: Test _PS2 (Power State 2).
SKIPPED: Test 56, Skipping test for non-existant object _PS2.

Test 57 of 191: Test _PS3 (Power State 3).
SKIPPED: Test 57, Skipping test for non-existant object _PS3.

Test 58 of 191: Test _PSC (Power State Current).
SKIPPED: Test 58, Skipping test for non-existant object _PSC.

Test 59 of 191: Test _PSE (Power State for Enumeration).
SKIPPED: Test 59, Skipping test for non-existant object _PSE.

Test 60 of 191: Test _PSW (Power State Wake).
PASSED: Test 60, \_SB_.PCI0.LPC0.PS2K._PSW returned no values as expected.
PASSED: Test 60, \_SB_.PCI0.LPC0.PS2M._PSW returned no values as expected.
PASSED: Test 60, \_SB_.PCI0.EHC1._PSW returned no values as expected.
PASSED: Test 60, \_SB_.PCI0.EHC2._PSW returned no values as expected.
PASSED: Test 60, \_SB_.PCI0.XHCI._PSW returned no values as expected.

Test 61 of 191: Test _S1D (S1 Device State).
SKIPPED: Test 61, Skipping test for non-existant object _S1D.

Test 62 of 191: Test _S2D (S2 Device State).
SKIPPED: Test 62, Skipping test for non-existant object _S2D.

Test 63 of 191: Test _S3D (S3 Device State).
PASSED: Test 63, \_SB_.PCI0.EHC1._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.EHC2._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.XHCI._S3D correctly returned an integer.

Test 64 of 191: Test _S4D (S4 Device State).
PASSED: Test 64, \_SB_.PCI0.EHC1._S4D correctly returned an integer.
PASSED: Test 64, \_SB_.PCI0.EHC2._S4D correctly returned an integer.
PASSED: Test 64, \_SB_.PCI0.XHCI._S4D correctly returned an integer.

Test 65 of 191: Test _S0W (S0 Device Wake State).
SKIPPED: Test 65, Skipping test for non-existant object _S0W.

Test 66 of 191: Test _S1W (S1 Device Wake State).
SKIPPED: Test 66, Skipping test for non-existant object _S1W.

Test 67 of 191: Test _S2W (S2 Device Wake State).
SKIPPED: Test 67, Skipping test for non-existant object _S2W.

Test 68 of 191: Test _S3W (S3 Device Wake State).
SKIPPED: Test 68, Skipping test for non-existant object _S3W.

Test 69 of 191: Test _S4W (S4 Device Wake State).
SKIPPED: Test 69, Skipping test for non-existant object _S4W.

Test 70 of 191: Test _RST (Device Reset).
SKIPPED: Test 70, Skipping test for non-existant object _RST.

Test 71 of 191: Test _PRR (Power Resource for Reset).
SKIPPED: Test 71, Skipping test for non-existant object _PRR.

Test 72 of 191: Test _S0_ (S0 System State).
\_S0_ PM1a_CNT.SLP_TYP value: 0x00000000
\_S0_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 72, \_S0_ correctly returned a sane looking package.

Test 73 of 191: Test _S1_ (S1 System State).
SKIPPED: Test 73, Skipping test for non-existant object _S1_.

Test 74 of 191: Test _S2_ (S2 System State).
SKIPPED: Test 74, Skipping test for non-existant object _S2_.

Test 75 of 191: Test _S3_ (S3 System State).
\_S3_ PM1a_CNT.SLP_TYP value: 0x00000005
\_S3_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 75, \_S3_ correctly returned a sane looking package.

Test 76 of 191: Test _S4_ (S4 System State).
\_S4_ PM1a_CNT.SLP_TYP value: 0x00000006
\_S4_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 76, \_S4_ correctly returned a sane looking package.

Test 77 of 191: Test _S5_ (S5 System State).
\_S5_ PM1a_CNT.SLP_TYP value: 0x00000007
\_S5_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 77, \_S5_ correctly returned a sane looking package.

Test 78 of 191: Test _SWS (System Wake Source).
SKIPPED: Test 78, Skipping test for non-existant object _SWS.

Test 79 of 191: Test _PSS (Performance Supported States).
\_SB_.SCK0.CP00._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP00._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP01._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP01._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP02._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP02._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP03._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP03._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP04._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP04._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP05._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP05._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP06._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP06._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP07._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP07._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP08._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP08._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP09._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP09._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP0A._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP0A._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP0B._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP0B._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP0C._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP0C._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP0D._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP0D._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP0E._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP0E._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP0F._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP0F._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP10._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP10._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP11._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP11._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP12._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP12._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP13._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP13._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP14._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP14._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP15._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP15._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP16._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP16._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP17._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP17._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP18._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP18._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP19._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP19._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP1A._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP1A._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP1B._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP1B._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP1C._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP1C._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP1D._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP1D._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP1E._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP1E._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP1F._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP1F._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP20._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP20._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP21._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP21._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP22._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP22._PSS correctly returned a sane looking package.
\_SB_.SCK0.CP23._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK0.CP23._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP00._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP00._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP01._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP01._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP02._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP02._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP03._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP03._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP04._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP04._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP05._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP05._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP06._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP06._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP07._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP07._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP08._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP08._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP09._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP09._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP0A._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP0A._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP0B._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP0B._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP0C._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP0C._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP0D._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP0D._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP0E._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP0E._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP0F._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP0F._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP10._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP10._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP11._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP11._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP12._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP12._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP13._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP13._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP14._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP14._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP15._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP15._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP16._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP16._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP17._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP17._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP18._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP18._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP19._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP19._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP1A._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP1A._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP1B._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP1B._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP1C._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP1C._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP1D._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP1D._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP1E._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP1E._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP1F._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP1F._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP20._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP20._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP21._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP21._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP22._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP22._PSS correctly returned a sane looking package.
\_SB_.SCK1.CP23._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK1.CP23._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP00._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP00._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP01._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP01._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP02._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP02._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP03._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP03._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP04._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP04._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP05._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP05._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP06._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP06._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP07._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP07._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP08._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP08._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP09._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP09._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP0A._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP0A._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP0B._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP0B._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP0C._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP0C._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP0D._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP0D._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP0E._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP0E._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP0F._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP0F._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP10._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP10._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP11._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP11._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP12._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP12._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP13._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP13._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP14._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP14._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP15._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP15._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP16._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP16._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP17._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP17._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP18._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP18._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP19._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP19._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP1A._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP1A._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP1B._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP1B._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP1C._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP1C._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP1D._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP1D._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP1E._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP1E._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP1F._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP1F._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP20._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP20._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP21._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP21._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP22._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP22._PSS correctly returned a sane looking package.
\_SB_.SCK2.CP23._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK2.CP23._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP00._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP00._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP01._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP01._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP02._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP02._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP03._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP03._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP04._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP04._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP05._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP05._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP06._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP06._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP07._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP07._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP08._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP08._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP09._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP09._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP0A._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP0A._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP0B._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP0B._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP0C._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP0C._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP0D._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP0D._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP0E._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP0E._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP0F._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP0F._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP10._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP10._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP11._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP11._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP12._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP12._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP13._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP13._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP14._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP14._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP15._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP15._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP16._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP16._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP17._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP17._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP18._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP18._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP19._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP19._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP1A._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP1A._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP1B._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP1B._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP1C._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP1C._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP1D._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP1D._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP1E._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP1E._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP1F._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP1F._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP20._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP20._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP21._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP21._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP22._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP22._PSS correctly returned a sane looking package.
\_SB_.SCK3.CP23._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3501   140000    10        10
   1      3500   140000    10        10
   2      3300   128622    10        10
   3      3200   123092    10        10
   4      3000   112333    10        10
   5      2800   103265    10        10
   6      2700    98219    10        10
   7      2500    88424    10        10
   8      2300    79010    10        10
   9      2200    74449    10        10
  10      2000    66775    10        10
  11      1900    62477    10        10
  12      1700    54156    10        10
  13      1500    46194    10        10
  14      1400    43432    10        10
  15      1200    35970    10        10
PASSED: Test 79, \_SB_.SCK3.CP23._PSS correctly returned a sane looking package.

Test 80 of 191: Test _CPC (Continuous Performance Control).
SKIPPED: Test 80, Skipping test for non-existant object _CPC.

Test 81 of 191: Test _CSD (C State Dependencies).
SKIPPED: Test 81, Skipping test for non-existant object _CSD.

Test 82 of 191: Test _CST (C States).
\_SB_.SCK0.CP00._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP00._CST correctly returned a sane looking values.
\_SB_.SCK0.CP01._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP01._CST correctly returned a sane looking values.
\_SB_.SCK0.CP02._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP02._CST correctly returned a sane looking values.
\_SB_.SCK0.CP03._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP03._CST correctly returned a sane looking values.
\_SB_.SCK0.CP04._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP04._CST correctly returned a sane looking values.
\_SB_.SCK0.CP05._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP05._CST correctly returned a sane looking values.
\_SB_.SCK0.CP06._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP06._CST correctly returned a sane looking values.
\_SB_.SCK0.CP07._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP07._CST correctly returned a sane looking values.
\_SB_.SCK0.CP08._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP08._CST correctly returned a sane looking values.
\_SB_.SCK0.CP09._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP09._CST correctly returned a sane looking values.
\_SB_.SCK0.CP0A._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP0A._CST correctly returned a sane looking values.
\_SB_.SCK0.CP0B._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP0B._CST correctly returned a sane looking values.
\_SB_.SCK0.CP0C._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP0C._CST correctly returned a sane looking values.
\_SB_.SCK0.CP0D._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP0D._CST correctly returned a sane looking values.
\_SB_.SCK0.CP0E._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP0E._CST correctly returned a sane looking values.
\_SB_.SCK0.CP0F._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP0F._CST correctly returned a sane looking values.
\_SB_.SCK0.CP10._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP10._CST correctly returned a sane looking values.
\_SB_.SCK0.CP11._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP11._CST correctly returned a sane looking values.
\_SB_.SCK0.CP12._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP12._CST correctly returned a sane looking values.
\_SB_.SCK0.CP13._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP13._CST correctly returned a sane looking values.
\_SB_.SCK0.CP14._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP14._CST correctly returned a sane looking values.
\_SB_.SCK0.CP15._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP15._CST correctly returned a sane looking values.
\_SB_.SCK0.CP16._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP16._CST correctly returned a sane looking values.
\_SB_.SCK0.CP17._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP17._CST correctly returned a sane looking values.
\_SB_.SCK0.CP18._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP18._CST correctly returned a sane looking values.
\_SB_.SCK0.CP19._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP19._CST correctly returned a sane looking values.
\_SB_.SCK0.CP1A._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP1A._CST correctly returned a sane looking values.
\_SB_.SCK0.CP1B._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP1B._CST correctly returned a sane looking values.
\_SB_.SCK0.CP1C._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP1C._CST correctly returned a sane looking values.
\_SB_.SCK0.CP1D._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP1D._CST correctly returned a sane looking values.
\_SB_.SCK0.CP1E._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP1E._CST correctly returned a sane looking values.
\_SB_.SCK0.CP1F._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP1F._CST correctly returned a sane looking values.
\_SB_.SCK0.CP20._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP20._CST correctly returned a sane looking values.
\_SB_.SCK0.CP21._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP21._CST correctly returned a sane looking values.
\_SB_.SCK0.CP22._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP22._CST correctly returned a sane looking values.
\_SB_.SCK0.CP23._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK0.CP23._CST correctly returned a sane looking values.
\_SB_.SCK1.CP00._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP00._CST correctly returned a sane looking values.
\_SB_.SCK1.CP01._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP01._CST correctly returned a sane looking values.
\_SB_.SCK1.CP02._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP02._CST correctly returned a sane looking values.
\_SB_.SCK1.CP03._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP03._CST correctly returned a sane looking values.
\_SB_.SCK1.CP04._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP04._CST correctly returned a sane looking values.
\_SB_.SCK1.CP05._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP05._CST correctly returned a sane looking values.
\_SB_.SCK1.CP06._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP06._CST correctly returned a sane looking values.
\_SB_.SCK1.CP07._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP07._CST correctly returned a sane looking values.
\_SB_.SCK1.CP08._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP08._CST correctly returned a sane looking values.
\_SB_.SCK1.CP09._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP09._CST correctly returned a sane looking values.
\_SB_.SCK1.CP0A._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP0A._CST correctly returned a sane looking values.
\_SB_.SCK1.CP0B._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP0B._CST correctly returned a sane looking values.
\_SB_.SCK1.CP0C._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP0C._CST correctly returned a sane looking values.
\_SB_.SCK1.CP0D._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP0D._CST correctly returned a sane looking values.
\_SB_.SCK1.CP0E._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP0E._CST correctly returned a sane looking values.
\_SB_.SCK1.CP0F._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP0F._CST correctly returned a sane looking values.
\_SB_.SCK1.CP10._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP10._CST correctly returned a sane looking values.
\_SB_.SCK1.CP11._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP11._CST correctly returned a sane looking values.
\_SB_.SCK1.CP12._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP12._CST correctly returned a sane looking values.
\_SB_.SCK1.CP13._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP13._CST correctly returned a sane looking values.
\_SB_.SCK1.CP14._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP14._CST correctly returned a sane looking values.
\_SB_.SCK1.CP15._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP15._CST correctly returned a sane looking values.
\_SB_.SCK1.CP16._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP16._CST correctly returned a sane looking values.
\_SB_.SCK1.CP17._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP17._CST correctly returned a sane looking values.
\_SB_.SCK1.CP18._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP18._CST correctly returned a sane looking values.
\_SB_.SCK1.CP19._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP19._CST correctly returned a sane looking values.
\_SB_.SCK1.CP1A._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP1A._CST correctly returned a sane looking values.
\_SB_.SCK1.CP1B._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP1B._CST correctly returned a sane looking values.
\_SB_.SCK1.CP1C._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP1C._CST correctly returned a sane looking values.
\_SB_.SCK1.CP1D._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP1D._CST correctly returned a sane looking values.
\_SB_.SCK1.CP1E._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP1E._CST correctly returned a sane looking values.
\_SB_.SCK1.CP1F._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP1F._CST correctly returned a sane looking values.
\_SB_.SCK1.CP20._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP20._CST correctly returned a sane looking values.
\_SB_.SCK1.CP21._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP21._CST correctly returned a sane looking values.
\_SB_.SCK1.CP22._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP22._CST correctly returned a sane looking values.
\_SB_.SCK1.CP23._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK1.CP23._CST correctly returned a sane looking values.
\_SB_.SCK2.CP00._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP00._CST correctly returned a sane looking values.
\_SB_.SCK2.CP01._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP01._CST correctly returned a sane looking values.
\_SB_.SCK2.CP02._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP02._CST correctly returned a sane looking values.
\_SB_.SCK2.CP03._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP03._CST correctly returned a sane looking values.
\_SB_.SCK2.CP04._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP04._CST correctly returned a sane looking values.
\_SB_.SCK2.CP05._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP05._CST correctly returned a sane looking values.
\_SB_.SCK2.CP06._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP06._CST correctly returned a sane looking values.
\_SB_.SCK2.CP07._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP07._CST correctly returned a sane looking values.
\_SB_.SCK2.CP08._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP08._CST correctly returned a sane looking values.
\_SB_.SCK2.CP09._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP09._CST correctly returned a sane looking values.
\_SB_.SCK2.CP0A._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP0A._CST correctly returned a sane looking values.
\_SB_.SCK2.CP0B._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP0B._CST correctly returned a sane looking values.
\_SB_.SCK2.CP0C._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP0C._CST correctly returned a sane looking values.
\_SB_.SCK2.CP0D._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP0D._CST correctly returned a sane looking values.
\_SB_.SCK2.CP0E._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP0E._CST correctly returned a sane looking values.
\_SB_.SCK2.CP0F._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP0F._CST correctly returned a sane looking values.
\_SB_.SCK2.CP10._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP10._CST correctly returned a sane looking values.
\_SB_.SCK2.CP11._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP11._CST correctly returned a sane looking values.
\_SB_.SCK2.CP12._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP12._CST correctly returned a sane looking values.
\_SB_.SCK2.CP13._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP13._CST correctly returned a sane looking values.
\_SB_.SCK2.CP14._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP14._CST correctly returned a sane looking values.
\_SB_.SCK2.CP15._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP15._CST correctly returned a sane looking values.
\_SB_.SCK2.CP16._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP16._CST correctly returned a sane looking values.
\_SB_.SCK2.CP17._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP17._CST correctly returned a sane looking values.
\_SB_.SCK2.CP18._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP18._CST correctly returned a sane looking values.
\_SB_.SCK2.CP19._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP19._CST correctly returned a sane looking values.
\_SB_.SCK2.CP1A._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP1A._CST correctly returned a sane looking values.
\_SB_.SCK2.CP1B._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP1B._CST correctly returned a sane looking values.
\_SB_.SCK2.CP1C._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP1C._CST correctly returned a sane looking values.
\_SB_.SCK2.CP1D._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP1D._CST correctly returned a sane looking values.
\_SB_.SCK2.CP1E._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP1E._CST correctly returned a sane looking values.
\_SB_.SCK2.CP1F._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP1F._CST correctly returned a sane looking values.
\_SB_.SCK2.CP20._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP20._CST correctly returned a sane looking values.
\_SB_.SCK2.CP21._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP21._CST correctly returned a sane looking values.
\_SB_.SCK2.CP22._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP22._CST correctly returned a sane looking values.
\_SB_.SCK2.CP23._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK2.CP23._CST correctly returned a sane looking values.
\_SB_.SCK3.CP00._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP00._CST correctly returned a sane looking values.
\_SB_.SCK3.CP01._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP01._CST correctly returned a sane looking values.
\_SB_.SCK3.CP02._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP02._CST correctly returned a sane looking values.
\_SB_.SCK3.CP03._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP03._CST correctly returned a sane looking values.
\_SB_.SCK3.CP04._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP04._CST correctly returned a sane looking values.
\_SB_.SCK3.CP05._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP05._CST correctly returned a sane looking values.
\_SB_.SCK3.CP06._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP06._CST correctly returned a sane looking values.
\_SB_.SCK3.CP07._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP07._CST correctly returned a sane looking values.
\_SB_.SCK3.CP08._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP08._CST correctly returned a sane looking values.
\_SB_.SCK3.CP09._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP09._CST correctly returned a sane looking values.
\_SB_.SCK3.CP0A._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP0A._CST correctly returned a sane looking values.
\_SB_.SCK3.CP0B._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP0B._CST correctly returned a sane looking values.
\_SB_.SCK3.CP0C._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP0C._CST correctly returned a sane looking values.
\_SB_.SCK3.CP0D._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP0D._CST correctly returned a sane looking values.
\_SB_.SCK3.CP0E._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP0E._CST correctly returned a sane looking values.
\_SB_.SCK3.CP0F._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP0F._CST correctly returned a sane looking values.
\_SB_.SCK3.CP10._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP10._CST correctly returned a sane looking values.
\_SB_.SCK3.CP11._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP11._CST correctly returned a sane looking values.
\_SB_.SCK3.CP12._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP12._CST correctly returned a sane looking values.
\_SB_.SCK3.CP13._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP13._CST correctly returned a sane looking values.
\_SB_.SCK3.CP14._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP14._CST correctly returned a sane looking values.
\_SB_.SCK3.CP15._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP15._CST correctly returned a sane looking values.
\_SB_.SCK3.CP16._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP16._CST correctly returned a sane looking values.
\_SB_.SCK3.CP17._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP17._CST correctly returned a sane looking values.
\_SB_.SCK3.CP18._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP18._CST correctly returned a sane looking values.
\_SB_.SCK3.CP19._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP19._CST correctly returned a sane looking values.
\_SB_.SCK3.CP1A._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP1A._CST correctly returned a sane looking values.
\_SB_.SCK3.CP1B._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP1B._CST correctly returned a sane looking values.
\_SB_.SCK3.CP1C._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP1C._CST correctly returned a sane looking values.
\_SB_.SCK3.CP1D._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP1D._CST correctly returned a sane looking values.
\_SB_.SCK3.CP1E._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP1E._CST correctly returned a sane looking values.
\_SB_.SCK3.CP1F._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP1F._CST correctly returned a sane looking values.
\_SB_.SCK3.CP20._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP20._CST correctly returned a sane looking values.
\_SB_.SCK3.CP21._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP21._CST correctly returned a sane looking values.
\_SB_.SCK3.CP22._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP22._CST correctly returned a sane looking values.
\_SB_.SCK3.CP23._CST values:
#   C-State   Latency     Power
                (us)      (mW)
 1     C1          1      1016
 2     C2         41       350
PASSED: Test 82, \_SB_.SCK3.CP23._CST correctly returned a sane looking values.

Test 83 of 191: Test _PCT (Performance Control).
PASSED: Test 83, \_SB_.SCK0.CP00._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP01._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP02._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP03._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP04._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP05._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP06._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP07._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP08._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP09._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP0A._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP0B._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP0C._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP0D._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP0E._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP0F._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP10._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP11._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP12._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP13._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP14._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP15._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP16._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP17._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP18._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP19._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP1A._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP1B._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP1C._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP1D._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP1E._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP1F._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP20._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP21._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP22._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK0.CP23._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP00._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP01._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP02._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP03._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP04._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP05._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP06._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP07._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP08._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP09._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP0A._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP0B._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP0C._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP0D._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP0E._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP0F._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP10._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP11._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP12._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP13._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP14._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP15._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP16._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP17._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP18._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP19._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP1A._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP1B._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP1C._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP1D._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP1E._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP1F._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP20._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP21._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP22._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK1.CP23._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP00._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP01._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP02._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP03._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP04._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP05._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP06._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP07._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP08._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP09._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP0A._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP0B._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP0C._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP0D._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP0E._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP0F._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP10._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP11._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP12._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP13._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP14._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP15._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP16._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP17._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP18._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP19._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP1A._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP1B._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP1C._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP1D._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP1E._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP1F._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP20._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP21._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP22._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK2.CP23._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP00._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP01._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP02._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP03._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP04._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP05._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP06._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP07._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP08._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP09._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP0A._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP0B._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP0C._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP0D._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP0E._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP0F._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP10._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP11._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP12._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP13._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP14._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP15._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP16._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP17._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP18._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP19._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP1A._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP1B._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP1C._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP1D._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP1E._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP1F._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP20._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP21._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP22._PCT correctly returned a sane looking package.
PASSED: Test 83, \_SB_.SCK3.CP23._PCT correctly returned a sane looking package.

Test 84 of 191: Test _PDL (P-State Depth Limit).
SKIPPED: Test 84, Skipping test for non-existant object _PDL.

Test 85 of 191: Test _PPC (Performance Present Capabilities).
PASSED: Test 85, \_SB_.SCK0.CP00._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP01._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP02._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP03._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP04._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP05._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP06._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP07._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP08._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP09._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP0A._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP0B._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP0C._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP0D._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP0E._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP0F._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP10._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP11._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP12._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP13._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP14._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP15._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP16._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP17._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP18._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP19._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP1A._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP1B._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP1C._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP1D._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP1E._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP1F._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP20._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP21._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP22._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK0.CP23._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP00._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP01._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP02._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP03._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP04._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP05._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP06._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP07._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP08._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP09._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP0A._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP0B._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP0C._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP0D._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP0E._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP0F._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP10._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP11._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP12._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP13._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP14._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP15._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP16._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP17._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP18._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP19._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP1A._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP1B._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP1C._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP1D._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP1E._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP1F._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP20._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP21._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP22._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK1.CP23._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP00._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP01._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP02._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP03._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP04._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP05._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP06._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP07._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP08._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP09._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP0A._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP0B._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP0C._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP0D._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP0E._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP0F._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP10._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP11._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP12._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP13._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP14._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP15._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP16._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP17._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP18._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP19._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP1A._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP1B._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP1C._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP1D._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP1E._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP1F._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP20._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP21._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP22._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK2.CP23._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP00._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP01._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP02._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP03._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP04._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP05._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP06._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP07._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP08._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP09._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP0A._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP0B._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP0C._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP0D._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP0E._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP0F._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP10._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP11._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP12._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP13._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP14._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP15._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP16._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP17._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP18._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP19._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP1A._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP1B._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP1C._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP1D._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP1E._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP1F._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP20._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP21._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP22._PPC correctly returned an integer.
PASSED: Test 85, \_SB_.SCK3.CP23._PPC correctly returned an integer.

Test 86 of 191: Test _PPE (Polling for Platform Error).
SKIPPED: Test 86, Skipping test for non-existant object _PPE.

Test 87 of 191: Test _PSD (Power State Dependencies).
PASSED: Test 87, \_SB_.SCK0.CP00._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP01._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP02._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP03._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP04._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP05._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP06._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP07._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP08._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP09._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP0A._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP0B._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP0C._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP0D._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP0E._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP0F._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP10._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP11._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP12._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP13._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP14._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP15._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP16._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP17._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP18._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP19._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP1A._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP1B._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP1C._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP1D._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP1E._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP1F._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP20._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP21._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP22._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK0.CP23._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP00._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP01._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP02._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP03._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP04._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP05._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP06._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP07._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP08._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP09._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP0A._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP0B._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP0C._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP0D._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP0E._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP0F._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP10._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP11._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP12._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP13._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP14._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP15._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP16._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP17._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP18._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP19._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP1A._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP1B._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP1C._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP1D._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP1E._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP1F._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP20._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP21._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP22._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK1.CP23._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP00._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP01._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP02._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP03._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP04._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP05._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP06._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP07._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP08._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP09._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP0A._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP0B._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP0C._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP0D._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP0E._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP0F._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP10._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP11._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP12._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP13._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP14._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP15._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP16._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP17._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP18._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP19._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP1A._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP1B._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP1C._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP1D._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP1E._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP1F._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP20._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP21._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP22._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK2.CP23._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP00._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP01._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP02._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP03._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP04._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP05._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP06._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP07._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP08._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP09._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP0A._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP0B._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP0C._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP0D._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP0E._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP0F._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP10._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP11._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP12._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP13._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP14._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP15._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP16._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP17._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP18._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP19._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP1A._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP1B._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP1C._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP1D._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP1E._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP1F._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP20._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP21._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP22._PSD correctly returned a sane looking package.
PASSED: Test 87, \_SB_.SCK3.CP23._PSD correctly returned a sane looking package.

Test 88 of 191: Test _PTC (Processor Throttling Control).
PASSED: Test 88, \_SB_.SCK0.CP00._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP01._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP02._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP03._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP04._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP05._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP06._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP07._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP08._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP09._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP0A._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP0B._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP0C._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP0D._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP0E._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP0F._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP10._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP11._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP12._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP13._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP14._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP15._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP16._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP17._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP18._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP19._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP1A._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP1B._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP1C._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP1D._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP1E._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP1F._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP20._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP21._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP22._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK0.CP23._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP00._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP01._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP02._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP03._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP04._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP05._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP06._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP07._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP08._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP09._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP0A._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP0B._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP0C._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP0D._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP0E._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP0F._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP10._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP11._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP12._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP13._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP14._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP15._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP16._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP17._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP18._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP19._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP1A._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP1B._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP1C._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP1D._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP1E._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP1F._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP20._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP21._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP22._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK1.CP23._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP00._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP01._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP02._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP03._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP04._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP05._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP06._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP07._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP08._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP09._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP0A._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP0B._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP0C._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP0D._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP0E._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP0F._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP10._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP11._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP12._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP13._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP14._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP15._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP16._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP17._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP18._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP19._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP1A._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP1B._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP1C._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP1D._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP1E._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP1F._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP20._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP21._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP22._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK2.CP23._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP00._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP01._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP02._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP03._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP04._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP05._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP06._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP07._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP08._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP09._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP0A._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP0B._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP0C._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP0D._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP0E._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP0F._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP10._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP11._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP12._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP13._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP14._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP15._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP16._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP17._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP18._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP19._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP1A._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP1B._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP1C._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP1D._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP1E._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP1F._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP20._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP21._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP22._PTC correctly returned a sane looking package.
PASSED: Test 88, \_SB_.SCK3.CP23._PTC correctly returned a sane looking package.

Test 89 of 191: Test _TDL (T-State Depth Limit).
SKIPPED: Test 89, Skipping test for non-existant object _TDL.

Test 90 of 191: Test _TPC (Throttling Present Capabilities).
PASSED: Test 90, \_SB_.SCK0.CP00._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP01._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP02._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP03._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP04._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP05._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP06._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP07._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP08._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP09._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP0A._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP0B._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP0C._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP0D._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP0E._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP0F._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP10._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP11._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP12._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP13._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP14._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP15._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP16._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP17._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP18._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP19._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP1A._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP1B._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP1C._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP1D._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP1E._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP1F._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP20._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP21._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP22._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK0.CP23._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP00._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP01._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP02._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP03._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP04._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP05._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP06._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP07._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP08._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP09._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP0A._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP0B._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP0C._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP0D._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP0E._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP0F._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP10._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP11._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP12._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP13._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP14._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP15._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP16._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP17._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP18._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP19._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP1A._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP1B._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP1C._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP1D._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP1E._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP1F._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP20._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP21._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP22._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK1.CP23._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP00._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP01._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP02._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP03._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP04._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP05._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP06._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP07._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP08._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP09._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP0A._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP0B._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP0C._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP0D._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP0E._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP0F._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP10._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP11._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP12._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP13._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP14._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP15._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP16._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP17._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP18._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP19._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP1A._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP1B._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP1C._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP1D._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP1E._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP1F._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP20._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP21._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP22._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK2.CP23._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP00._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP01._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP02._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP03._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP04._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP05._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP06._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP07._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP08._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP09._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP0A._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP0B._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP0C._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP0D._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP0E._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP0F._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP10._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP11._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP12._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP13._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP14._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP15._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP16._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP17._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP18._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP19._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP1A._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP1B._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP1C._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP1D._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP1E._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP1F._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP20._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP21._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP22._TPC correctly returned an integer.
PASSED: Test 90, \_SB_.SCK3.CP23._TPC correctly returned an integer.

Test 91 of 191: Test _TSD (Throttling State Dependencies).
SKIPPED: Test 91, Skipping test for non-existant object _TSD.

Test 92 of 191: Test _TSS (Throttling Supported States).
\_SB_.SCK0.CP00._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP00._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP01._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP01._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP02._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP02._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP03._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP03._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP04._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP04._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP05._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP05._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP06._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP06._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP07._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP07._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP08._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP08._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP09._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP09._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP0A._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP0A._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP0B._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP0B._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP0C._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP0C._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP0D._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP0D._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP0E._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP0E._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP0F._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP0F._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP10._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP10._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP11._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP11._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP12._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP12._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP13._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP13._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP14._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP14._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP15._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP15._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP16._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP16._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP17._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP17._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP18._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP18._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP19._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP19._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP1A._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP1A._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP1B._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP1B._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP1C._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP1C._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP1D._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP1D._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP1E._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP1E._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP1F._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP1F._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP20._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP20._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP21._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP21._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP22._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP22._TSS correctly returned a sane looking package.
\_SB_.SCK0.CP23._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK0.CP23._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP00._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP00._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP01._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP01._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP02._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP02._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP03._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP03._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP04._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP04._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP05._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP05._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP06._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP06._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP07._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP07._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP08._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP08._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP09._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP09._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP0A._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP0A._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP0B._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP0B._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP0C._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP0C._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP0D._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP0D._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP0E._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP0E._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP0F._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP0F._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP10._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP10._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP11._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP11._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP12._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP12._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP13._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP13._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP14._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP14._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP15._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP15._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP16._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP16._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP17._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP17._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP18._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP18._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP19._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP19._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP1A._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP1A._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP1B._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP1B._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP1C._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP1C._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP1D._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP1D._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP1E._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP1E._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP1F._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP1F._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP20._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP20._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP21._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP21._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP22._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP22._TSS correctly returned a sane looking package.
\_SB_.SCK1.CP23._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK1.CP23._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP00._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP00._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP01._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP01._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP02._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP02._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP03._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP03._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP04._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP04._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP05._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP05._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP06._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP06._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP07._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP07._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP08._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP08._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP09._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP09._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP0A._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP0A._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP0B._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP0B._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP0C._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP0C._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP0D._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP0D._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP0E._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP0E._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP0F._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP0F._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP10._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP10._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP11._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP11._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP12._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP12._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP13._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP13._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP14._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP14._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP15._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP15._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP16._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP16._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP17._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP17._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP18._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP18._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP19._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP19._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP1A._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP1A._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP1B._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP1B._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP1C._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP1C._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP1D._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP1D._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP1E._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP1E._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP1F._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP1F._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP20._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP20._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP21._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP21._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP22._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP22._TSS correctly returned a sane looking package.
\_SB_.SCK2.CP23._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK2.CP23._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP00._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP00._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP01._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP01._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP02._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP02._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP03._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP03._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP04._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP04._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP05._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP05._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP06._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP06._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP07._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP07._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP08._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP08._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP09._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP09._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP0A._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP0A._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP0B._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP0B._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP0C._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP0C._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP0D._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP0D._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP0E._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP0E._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP0F._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP0F._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP10._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP10._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP11._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP11._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP12._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP12._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP13._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP13._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP14._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP14._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP15._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP15._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP16._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP16._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP17._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP17._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP18._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP18._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP19._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP19._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP1A._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP1A._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP1B._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP1B._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP1C._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP1C._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP1D._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP1D._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP1E._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP1E._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP1F._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP1F._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP20._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP20._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP21._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP21._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP22._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP22._TSS correctly returned a sane looking package.
\_SB_.SCK3.CP23._TSS values:
T-State  CPU     Power   Latency  Control  Status
         Freq    (mW)    (usecs)
    0    100%    35718        0      00      00
PASSED: Test 92, \_SB_.SCK3.CP23._TSS correctly returned a sane looking package.

Test 93 of 191: Test _PUR (Processor Utilization Request).
SKIPPED: Test 93, Skipping test for non-existant object _PUR.

Test 94 of 191: Test _MSG (Message).
SKIPPED: Test 94, Skipping test for non-existant object _MSG.

Test 95 of 191: Test _SST (System Status).
SKIPPED: Test 95, Skipping test for non-existant object _SST.

Test 96 of 191: Test _ALC (Ambient Light Colour Chromaticity).
SKIPPED: Test 96, Skipping test for non-existant object _ALC.

Test 97 of 191: Test _ALI (Ambient Light Illuminance).
SKIPPED: Test 97, Skipping test for non-existant object _ALI.

Test 98 of 191: Test _ALT (Ambient Light Temperature).
SKIPPED: Test 98, Skipping test for non-existant object _ALT.

Test 99 of 191: Test _ALP (Ambient Light Polling).
SKIPPED: Test 99, Skipping test for non-existant object _ALP.

Test 100 of 191: Test _ALR (Ambient Light Response).
SKIPPED: Test 100, Skipping test for non-existant object _ALR.

Test 101 of 191: Test _LID (Lid Status).
SKIPPED: Test 101, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _LID.

Test 102 of 191: Test _GTF (Get Task File).
PASSED: Test 102, \_SB_.PCI0.SAT2.PRID.MAST._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.SAT2.PRID.SLAV._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.SAT2.SECD.MAST._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.SAT2.SECD.SLAV._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.SAT1.PRID.MAST._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.SAT1.PRID.SLAV._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.SAT1.SECD.MAST._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.SAT1.SECD.SLAV._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.EVSS.PRID.MAST._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.EVSS.PRID.SLAV._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.EVSS.SECD.MAST._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.EVSS.SECD.SLAV._GTF correctly returned a sane
looking buffer.

Test 103 of 191: Test _GTM (Get Timing Mode).
PASSED: Test 103, \_SB_.PCI0.SAT2.PRID._GTM correctly returned a sane looking
buffer.
PASSED: Test 103, \_SB_.PCI0.SAT2.SECD._GTM correctly returned a sane looking
buffer.
PASSED: Test 103, \_SB_.PCI0.SAT1.PRID._GTM correctly returned a sane looking
buffer.
PASSED: Test 103, \_SB_.PCI0.SAT1.SECD._GTM correctly returned a sane looking
buffer.
PASSED: Test 103, \_SB_.PCI0.EVSS.PRID._GTM correctly returned a sane looking
buffer.
PASSED: Test 103, \_SB_.PCI0.EVSS.SECD._GTM correctly returned a sane looking
buffer.

Test 104 of 191: Test _MBM (Memory Bandwidth Monitoring Data).
SKIPPED: Test 104, Skipping test for non-existant object _MBM.

Test 105 of 191: Test _UPC (USB Port Capabilities).
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR11._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR12._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR13._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR14._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR15._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR16._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR17._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR18._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR11._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR12._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR13._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR14._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR15._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR16._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS01._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS02._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS03._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS04._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS05._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS06._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS07._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS08._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS09._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS10._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS11._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS12._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS13._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.HS14._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.SSP1._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.SSP2._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.SSP3._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.SSP4._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.SSP5._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.XHCI.RHUB.SSP6._UPC correctly returned a sane
looking package.

Test 106 of 191: Test _UPD (User Presence Detect).
SKIPPED: Test 106, Skipping test for non-existant object _UPD.

Test 107 of 191: Test _UPP (User Presence Polling).
SKIPPED: Test 107, Skipping test for non-existant object _UPP.

Test 108 of 191: Test _GCP (Get Capabilities).
SKIPPED: Test 108, Skipping test for non-existant object _GCP.

Test 109 of 191: Test _GRT (Get Real Time).
SKIPPED: Test 109, Skipping test for non-existant object _GRT.

Test 110 of 191: Test _GWS (Get Wake Status).
SKIPPED: Test 110, Skipping test for non-existant object _GWS.

Test 111 of 191: Test _CWS (Clear Wake Status).
SKIPPED: Test 111, Skipping test for non-existant object _CWS.

Test 112 of 191: Test _STP (Set Expired Timer Wake Policy).
SKIPPED: Test 112, Skipping test for non-existant object _STP.

Test 113 of 191: Test _STV (Set Timer Value).
SKIPPED: Test 113, Skipping test for non-existant object _STV.

Test 114 of 191: Test _TIP (Expired Timer Wake Policy).
SKIPPED: Test 114, Skipping test for non-existant object _TIP.

Test 115 of 191: Test _TIV (Timer Values).
SKIPPED: Test 115, Skipping test for non-existant object _TIV.

Test 116 of 191: Test _SBS (Smart Battery Subsystem).
SKIPPED: Test 116, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _SBS.

Test 117 of 191: Test _BCT (Battery Charge Time).
SKIPPED: Test 117, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BCT.

Test 118 of 191: Test _BIF (Battery Information).
SKIPPED: Test 118, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BIF.

Test 119 of 191: Test _BIX (Battery Information Extended).
SKIPPED: Test 119, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BIX.

Test 120 of 191: Test _BMA (Battery Measurement Averaging).
SKIPPED: Test 120, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMA.

Test 121 of 191: Test _BMC (Battery Maintenance Control).
SKIPPED: Test 121, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMC.

Test 122 of 191: Test _BMD (Battery Maintenance Data).
SKIPPED: Test 122, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMD.

Test 123 of 191: Test _BMS (Battery Measurement Sampling Time).
SKIPPED: Test 123, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMS.

Test 124 of 191: Test _BST (Battery Status).
SKIPPED: Test 124, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BST.

Test 125 of 191: Test _BTP (Battery Trip Point).
SKIPPED: Test 125, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BTP.

Test 126 of 191: Test _BTH (Battery Throttle Limit).
SKIPPED: Test 126, Skipping test for non-existant object _BTH.

Test 127 of 191: Test _BTM (Battery Time).
SKIPPED: Test 127, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BTM.

Test 128 of 191: Test _PCL (Power Consumer List).
SKIPPED: Test 128, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _PCL.

Test 129 of 191: Test _PIF (Power Source Information).
SKIPPED: Test 129, Skipping test for non-existant object _PIF.

Test 130 of 191: Test _PRL (Power Source Redundancy List).
SKIPPED: Test 130, Skipping test for non-existant object _PRL.

Test 131 of 191: Test _PSR (Power Source).
SKIPPED: Test 131, Skipping test for non-existant object _PSR.

Test 132 of 191: Test _GAI (Get Averaging Level).
SKIPPED: Test 132, Skipping test for non-existant object _GAI.

Test 133 of 191: Test _GHL (Get Harware Limit).
SKIPPED: Test 133, Skipping test for non-existant object _GHL.

Test 134 of 191: Test _PMD (Power Meter Devices).
SKIPPED: Test 134, Skipping test for non-existant object _PMD.

Test 135 of 191: Test _PMM (Power Meter Measurement).
SKIPPED: Test 135, Skipping test for non-existant object _PMM.

Test 136 of 191: Test _FIF (Fan Information).
SKIPPED: Test 136, Skipping test for non-existant object _FIF.

Test 137 of 191: Test _FPS (Fan Performance States).
SKIPPED: Test 137, Skipping test for non-existant object _FPS.

Test 138 of 191: Test _FSL (Fan Set Level).
SKIPPED: Test 138, Skipping test for non-existant object _FSL.

Test 139 of 191: Test _FST (Fan Status).
SKIPPED: Test 139, Skipping test for non-existant object _FST.

Test 140 of 191: Test _ACx (Active Cooling).
SKIPPED: Test 140, Skipping test for non-existant object _AC0.

SKIPPED: Test 140, Skipping test for non-existant object _AC1.

SKIPPED: Test 140, Skipping test for non-existant object _AC2.

SKIPPED: Test 140, Skipping test for non-existant object _AC3.

SKIPPED: Test 140, Skipping test for non-existant object _AC4.

SKIPPED: Test 140, Skipping test for non-existant object _AC5.

SKIPPED: Test 140, Skipping test for non-existant object _AC6.

SKIPPED: Test 140, Skipping test for non-existant object _AC7.

SKIPPED: Test 140, Skipping test for non-existant object _AC8.

SKIPPED: Test 140, Skipping test for non-existant object _AC9.


Test 141 of 191: Test _ART (Active Cooling Relationship Table).
SKIPPED: Test 141, Skipping test for non-existant object _ART.

Test 142 of 191: Test _CRT (Critical Trip Point).
SKIPPED: Test 142, Skipping test for non-existant object _CRT.

Test 143 of 191: Test _CR3 (Warm/Standby Temperature).
SKIPPED: Test 143, Skipping test for non-existant object _CR3.

Test 144 of 191: Test _DTI (Device Temperature Indication).
SKIPPED: Test 144, Skipping test for non-existant object _DTI.

Test 145 of 191: Test _HOT (Hot Temperature).
SKIPPED: Test 145, Skipping test for non-existant object _HOT.

Test 146 of 191: Test _MTL (Minimum Throttle Limit).
SKIPPED: Test 146, Skipping test for non-existant object _MTL.

Test 147 of 191: Test _NTT (Notification Temp Threshold).
SKIPPED: Test 147, Skipping test for non-existant object _NTT.

Test 148 of 191: Test _PSL (Passive List).
SKIPPED: Test 148, Skipping test for non-existant object _PSL.

Test 149 of 191: Test _PSV (Passive Temp).
SKIPPED: Test 149, Skipping test for non-existant object _PSV.

Test 150 of 191: Test _RTV (Relative Temp Values).
SKIPPED: Test 150, Skipping test for non-existant object _RTV.

Test 151 of 191: Test _SCP (Set Cooling Policy).
SKIPPED: Test 151, Skipping test for non-existant object _DTI.

Test 152 of 191: Test _TC1 (Thermal Constant 1).
SKIPPED: Test 152, Skipping test for non-existant object _TC1.

Test 153 of 191: Test _TC2 (Thermal Constant 2).
SKIPPED: Test 153, Skipping test for non-existant object _TC2.

Test 154 of 191: Test _TFP (Thermal fast Sampling Period).
SKIPPED: Test 154, Skipping test for non-existant object _TFP.

Test 155 of 191: Test _TMP (Thermal Zone Current Temp).
SKIPPED: Test 155, Skipping test for non-existant object _TMP.

Test 156 of 191: Test _TPT (Trip Point Temperature).
SKIPPED: Test 156, Skipping test for non-existant object _TPT.

Test 157 of 191: Test _TRT (Thermal Relationship Table).
SKIPPED: Test 157, Skipping test for non-existant object _TRT.

Test 158 of 191: Test _TSN (Thermal Sensor Device).
SKIPPED: Test 158, Skipping test for non-existant object _TSN.

Test 159 of 191: Test _TSP (Thermal Sampling Period).
SKIPPED: Test 159, Skipping test for non-existant object _TSP.

Test 160 of 191: Test _TST (Temperature Sensor Threshold).
SKIPPED: Test 160, Skipping test for non-existant object _TST.

Test 161 of 191: Test _TZD (Thermal Zone Devices).
SKIPPED: Test 161, Skipping test for non-existant object _TZD.

Test 162 of 191: Test _TZM (Thermal Zone member).
SKIPPED: Test 162, Skipping test for non-existant object _TZM.

Test 163 of 191: Test _TZP (Thermal Zone Polling).
SKIPPED: Test 163, Skipping test for non-existant object _TZP.

Test 164 of 191: Test _GPE (General Purpose Events).
SKIPPED: Test 164, Skipping test for non-existant object _GPE.

Test 165 of 191: Test _EC (EC Offset Query).
SKIPPED: Test 165, Skipping test for non-existant object _EC.

Test 166 of 191: Test _PTS (Prepare to Sleep).
Test _PTS(1).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(2).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(3).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(4).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(5).
PASSED: Test 166, \_PTS returned no values as expected.


Test 167 of 191: Test _TTS (Transition to State).
SKIPPED: Test 167, Optional control method _TTS does not exist.

Test 168 of 191: Test _S0 (System S0 State).
SKIPPED: Test 168, Skipping test for non-existant object _S0.

Test 169 of 191: Test _S1 (System S1 State).
SKIPPED: Test 169, Skipping test for non-existant object _S1.

Test 170 of 191: Test _S2 (System S2 State).
SKIPPED: Test 170, Skipping test for non-existant object _S2.

Test 171 of 191: Test _S3 (System S3 State).
SKIPPED: Test 171, Skipping test for non-existant object _S3.

Test 172 of 191: Test _S4 (System S4 State).
SKIPPED: Test 172, Skipping test for non-existant object _S4.

Test 173 of 191: Test _S5 (System S5 State).
SKIPPED: Test 173, Skipping test for non-existant object _S5.

Test 174 of 191: Test _WAK (System Wake).
Test _WAK(1) System Wake, State S1.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(2) System Wake, State S2.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(3) System Wake, State S3.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(4) System Wake, State S4.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(5) System Wake, State S5.
PASSED: Test 174, \_WAK correctly returned a sane looking package.


Test 175 of 191: Test _ADR (Return Unique ID for Device).
PASSED: Test 175, \_SB_.UNC3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.UNC2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.UNC1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.UNC0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IIOP._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.MHP0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.MHP1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.LPC0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IP2P._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT2.PRID._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT2.PRID.MAST._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT2.PRID.SLAV._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT2.SECD._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT2.SECD.MAST._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT2.SECD.SLAV._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SMBS._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.TERM._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.ALZA._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.HECI._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.HEC2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IDER._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.MEKT._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP02._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP02.BR6E._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP03._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP03.D075._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP04._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP06._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP07._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP08._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVMR._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVS0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVS1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVS2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.DMI0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.DMI0.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.DMI0.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.DMI0.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.DMI0.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.DMI0.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.DMI0.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.DMI0.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.DMI0.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1A.D06B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR1B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2A.D071._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2B.D072._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2C.D073._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR2D.D074._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3A.D076._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3B.D077._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3C.D078._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.BR3D.D079._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.CB0A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.CB0B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.CB0C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.CB0D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.CB0E._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.CB0F._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.CB0G._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.CB0H._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.D07A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.LAN0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.PRID._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.PRID.MAST._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.PRID.SLAV._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.SECD._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.SECD.MAST._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1.SECD.SLAV._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVSS._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVSS.PRID._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVSS.PRID.MAST._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVSS.PRID.SLAV._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVSS.SECD._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVSS.SECD.MAST._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EVSS.SECD.SLAV._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR11._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR12._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR13._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR14._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR15._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR16._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR17._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR18._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR11._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR12._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR13._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR14._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR15._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR16._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.XHCI._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS02._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS03._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS04._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS05._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS06._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS07._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS08._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS09._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS10._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS11._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS12._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS13._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.HS14._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.SSP1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.SSP2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.SSP3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.SSP4._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.SSP5._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.XHCI.RHUB.SSP6._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.IIOP._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.MHP0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.MHP1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QRP0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QRP0.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QRP0.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QRP0.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QRP0.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QRP0.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QRP0.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QRP0.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QRP0.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR1B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2C.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2C.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2C.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2C.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2C.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2C.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2C.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2C.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2D.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2D.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2D.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2D.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2D.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2D.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2D.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR2D.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3C.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3C.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3C.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3C.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3C.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3C.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3C.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3C.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3D.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3D.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3D.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3D.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3D.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3D.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3D.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.QR3D.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.CB1A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.CB1B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.CB1C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.CB1D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.CB1E._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.CB1F._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.CB1G._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI1.CB1H._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.IIOP._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.MHP0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.MHP1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RRP0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RRP0.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RRP0.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RRP0.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RRP0.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RRP0.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RRP0.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RRP0.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RRP0.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR1B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2C.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2C.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2C.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2C.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2C.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2C.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2C.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2C.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2D.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2D.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2D.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2D.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2D.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2D.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2D.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR2D.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3C.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3C.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3C.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3C.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3C.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3C.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3C.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3C.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3D.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3D.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3D.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3D.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3D.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3D.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3D.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.RR3D.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.CB2A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.CB2B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.CB2C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.CB2D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.CB2E._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.CB2F._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.CB2G._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI2.CB2H._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.IIOP._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.MHP0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.MHP1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SRP0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SRP0.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SRP0.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SRP0.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SRP0.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SRP0.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SRP0.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SRP0.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SRP0.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR1B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2C.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2C.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2C.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2C.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2C.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2C.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2C.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2C.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2D.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2D.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2D.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2D.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2D.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2D.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2D.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR2D.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3A.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3A.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3A.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3A.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3A.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3A.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3A.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3A.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3B.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3B.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3B.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3B.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3B.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3B.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3B.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3B.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3C.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3C.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3C.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3C.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3C.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3C.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3C.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3C.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3D.H000._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3D.H001._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3D.H002._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3D.H003._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3D.H004._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3D.H005._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3D.H006._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.SR3D.H007._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.CB3A._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.CB3B._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.CB3C._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.CB3D._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.CB3E._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.CB3F._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.CB3G._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI3.CB3H._ADR correctly returned an integer.

Test 176 of 191: Test _BCL (Query List of Brightness Control Levels Supported).
SKIPPED: Test 176, Skipping test for non-existant object _BCL.

Test 177 of 191: Test _BCM (Set Brightness Level).
SKIPPED: Test 177, Skipping test for non-existant object _BCM.

Test 178 of 191: Test _BQC (Brightness Query Current Level).
SKIPPED: Test 178, Skipping test for non-existant object _BQC.

Test 179 of 191: Test _DCS (Return the Status of Output Device).
SKIPPED: Test 179, Skipping test for non-existant object _DCS.

Test 180 of 191: Test _DDC (Return the EDID for this Device).
SKIPPED: Test 180, Skipping test for non-existant object _DDC.

Test 181 of 191: Test _DSS (Device Set State).
SKIPPED: Test 181, Skipping test for non-existant object _DSS.

Test 182 of 191: Test _DGS (Query Graphics State).
SKIPPED: Test 182, Skipping test for non-existant object _DGS.

Test 183 of 191: Test _DOD (Enumerate All Devices Attached to Display Adapter).
SKIPPED: Test 183, Skipping test for non-existant object _DOD.

Test 184 of 191: Test _DOS (Enable/Disable Output Switching).
SKIPPED: Test 184, Skipping test for non-existant object _DOS.

Test 185 of 191: Test _GPD (Get POST Device).
SKIPPED: Test 185, Skipping test for non-existant object _GPD.

Test 186 of 191: Test _ROM (Get ROM Data).
SKIPPED: Test 186, Skipping test for non-existant object _ROM.

Test 187 of 191: Test _SPD (Set POST Device).
SKIPPED: Test 187, Skipping test for non-existant object _SPD.

Test 188 of 191: Test _VPO (Video POST Options).
SKIPPED: Test 188, Skipping test for non-existant object _VPO.

Test 189 of 191: Test _CBA (Configuration Base Address).
SKIPPED: Test 189, Skipping test for non-existant object _CBA.

Test 190 of 191: Test _IFT (IPMI Interface Type).
SKIPPED: Test 190, Skipping test for non-existant object _IFT.

Test 191 of 191: Test _SRV (IPMI Interface Revision).
SKIPPED: Test 191, Skipping test for non-existant object _SRV.

================================================================================
2548 passed, 2 failed, 0 warning, 0 aborted, 162 skipped, 0 info only.
================================================================================

msdm: MSDM Microsoft Data Management Table test.
--------------------------------------------------------------------------------
Test 1 of 1: MSDM Microsoft Data Management Table test.
  Reserved:                 0x00000000
  Data Type:                0x00000001
  Data Reserved:            0x00000000
  Data Length:              0x0000001d
  Data:                     '3NHC4-P76DV-QV44F-RCQMH-PWD32'
MSDM has had minimal check due to proprietary nature of the table
PASSED: Test 1, No issues found in MSDM table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mchi: MCHI Management Controller Host Interface Table test.
--------------------------------------------------------------------------------
ACPI MCHI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

mcfg: MCFG PCI Express* memory mapped config space test.
--------------------------------------------------------------------------------
Test 1 of 2: Validate MCFG table.
This test tries to validate the MCFG table by comparing the first 16 bytes in
the MMIO mapped config space with the 'traditional' config space of the first
PCI device (root bridge). The MCFG data is only trusted if it is marked reserved
in the Int 15 AX=E820 BIOS memory map

Memory Map Layout
-----------------
0x0000000000000000 - 0x00000000000953ff (System RAM)
0x0000000000095400 - 0x000000000009ffff (reserved)
0x00000000000e0000 - 0x00000000000fffff (reserved)
0x0000000000100000 - 0x00000000398cbfff (System RAM)
0x00000000398cc000 - 0x000000003a277fff (reserved)
0x000000003a278000 - 0x000000003a2c0fff (ACPI Non-volatile Storage)
0x000000003a2c1000 - 0x000000003af28fff (ACPI Non-volatile Storage)
0x000000003af29000 - 0x000000003b3f2fff (reserved)
0x000000003b3f3000 - 0x000000003b3f3fff (System RAM)
0x000000003b3f4000 - 0x000000003b401fff (reserved)
0x000000003b402000 - 0x000000003cffffff (System RAM)
0x0000000040000000 - 0x000000004fffffff (reserved)
0x00000000fed1c000 - 0x00000000fed1ffff (reserved)
0x00000000ff000000 - 0x00000000ffffffff (reserved)
0x0000000100000000 - 0x00000002bfffffff (System RAM)

MCFG table found, size is 16 bytes (excluding header) (1 entries).
Configuration Entry #0:
  Base Address  : 0x40000000
  Segment       : 0
  Start bus     : 0
  End bus       : 255
PASSED: Test 1, MCFG MMIO config space is reserved in memory map table.

Test 2 of 2: Validate MCFG PCI config space.
PASSED: Test 2, PCI config space verified.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

madt: MADT Multiple APIC Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: MADT Multiple APIC Description Table test.
PASSED: Test 1, No issues found in MADT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

lpit: LPIT Low Power Idle Table test.
--------------------------------------------------------------------------------
ACPI LPIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

iort: IORT IO Remapping Table test.
--------------------------------------------------------------------------------
ACPI IORT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

hpet: HPET IA-PC High Precision Event Timer Table tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test HPET base in kernel log.
This test checks the HPET PCI BAR for each timer block in the timer. The base
address is passed by the firmware via an ACPI table. IRQ routing and
initialization is also verified by the test.
PASSED: Test 1, Found HPET base 0xfed00000 in kernel log.

Test 2 of 4: Test HPET base in HPET table.
Hardware ID of Event Block:
  PCI Vendor ID              : 0x8086
  Legacy IRQ Routing Capable : 1
  COUNT_SIZE_CAP counter size: 1
  Number of comparitors      : 7
  Hardwre Revision ID        : 0x1
Lower 32 bit base Address    : 0xfed00000
  Address Space ID           : 0x0
  Register Bit Width         : 0x40
  Register Bit Offset        : 0x0
  Address Width              : 0x0
HPET sequence number         : 0x0
Minimum clock tick           : 0x37ee
Page Protection              : 0x0 (No guaranteed protection)
OEM attributes               : 0x0
PASSED: Test 2, HPET looks sane.

Test 3 of 4: Test HPET base in DSDT and/or SSDT.
PASSED: Test 3, HPET base matches that between DSDT and the kernel (0xfed00000).

Test 4 of 4: Test HPET configuration.
PASSED: Test 4, Vendor ID looks sane: 0x8086.
PASSED: Test 4, Valid clock period 69841279.

================================================================================
5 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

hest: HEST Hardware Error Source Table test.
--------------------------------------------------------------------------------
ACPI HEST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

gtdt: GTDT Generic Timer Description Table test.
--------------------------------------------------------------------------------
ACPI GTDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

fpdt: FPDT Firmware Performance Data Table test.
--------------------------------------------------------------------------------
Test 1 of 1: FPDT Firmware Performance Data Table test.
  S3 Performance Table Pointer Record:
    Perf Rec Type:	0x0001
    Rec Length:	0x10
    Revision:	0x01
    Reserved:	0x00000000
    S3PT Pointer:	0x000000003b259830
Note: currently fwts does not check S3PT validity and the associated data
    Firmware Basic Boot Performance Pointer Record:
    Perf Rec Type:	0x0000
    Rec Length:	0x10
    Revision:	0x01
    Reserved:	0x00000000
    FBPT Pointer:	0x000000003b259850
Note: currently fwts does not check FBPT validity and the associated data
PASSED: Test 1, No issues found in FPDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

fan: Simple fan tests.
--------------------------------------------------------------------------------
Test 1 of 2: Test fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
PASSED: Test 1, Fan cooling_device0 of type Processor has max cooling state 17
and current cooling state 0.
PASSED: Test 1, Fan cooling_device1 of type Processor has max cooling state 17
and current cooling state 0.
PASSED: Test 1, Fan cooling_device2 of type Processor has max cooling state 17
and current cooling state 0.
PASSED: Test 1, Fan cooling_device3 of type Processor has max cooling state 17
and current cooling state 0.
PASSED: Test 1, Fan cooling_device4 of type Processor has max cooling state 17
and current cooling state 0.
PASSED: Test 1, Fan cooling_device5 of type Processor has max cooling state 17
and current cooling state 0.
PASSED: Test 1, Fan cooling_device6 of type Processor has max cooling state 17
and current cooling state 0.
PASSED: Test 1, Fan cooling_device7 of type Processor has max cooling state 17
and current cooling state 0.
FAILED [MEDIUM] NoFanCurState: Test 1, Fan present but has no cur_state present.

Test 2 of 2: Load system, check CPU fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
Loading CPUs for 20 seconds to try and get fan speeds to change.
Fan cooling_device0 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device1 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device2 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device3 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device4 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device5 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device6 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device7 current state did not change from value 0 while CPUs were
busy.

ADVICE: Did not detect any change in the CPU related thermal cooling device
states. It could be that the devices are returning static information back to
the driver and/or the fan speed is automatically being controlled by firmware
using System Management Mode in which case the kernel interfaces being examined
may not work anyway.


================================================================================
8 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

fadt: FADT Fixed ACPI Description Table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Test FADT ACPI Description Table tests.
PASSED: Test 1, No issues found in FADT table.

Test 2 of 3: Test FADT SCI_EN bit is enabled.
FADT Preferred PM Profile: 1 (Desktop) 
FADT is greater than ACPI version 1.0
PASSED: Test 2, SCI_EN bit in PM1a Control Register Block is enabled.

Test 3 of 3: Test FADT reset register.
PASSED: Test 3, FADT reset register width is 8 bits wide as expected.
PASSED: Test 3, FADT register bit offset is 0 as expected.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

facs: FACS Firmware ACPI Control Structure test.
--------------------------------------------------------------------------------
Test 1 of 1: FACS Firmware ACPI Control Structure test.
FACS Firmware ACPI Control Structure:
  Signature:                'FACS'
  Length:                   0x00000040
  Hardware Signature:       0x0000006e
  Firmware Waking Vector:   0x00000000
  Global Lock:              0x00000000
  Flags:                    0x00000000
  X-Firmware Waking Vector: 0x0000000000000000
  Version:                  0x02
  Reserved:                 0x00 0x00 0x00
  OSPM Flags:               0x00000000
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
PASSED: Test 1, No issues found in FACS table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

erst: ERST Error Record Serialization Table test.
--------------------------------------------------------------------------------
ACPI ERST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

ecdt: ECDT Embedded Controller Boot Resources Table test.
--------------------------------------------------------------------------------
ACPI ECDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

dmar: DMA Remapping (VT-d) test.
--------------------------------------------------------------------------------
Test 1 of 1: DMA Remapping test.
PASSED: Test 1, DMAR ACPI table has passed test.
PASSED: Test 1, Found no DMAR errors in kernel log.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

dbg2: DBG2 (Debug Port Table 2) test.
--------------------------------------------------------------------------------
ACPI DBG2 table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

dbgp: DBGP (Debug Port) Table test.
--------------------------------------------------------------------------------
ACPI DBGP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cstates: Processor C state support test.
--------------------------------------------------------------------------------
Test 1 of 1: Test all CPUs C-states.
This test checks if all processors have the same number of C-states, if the
C-state counter works and if C-state transitions happen.
Processor 0 has not reached C1 C3 during tests. This is not a failure, however
it is not a complete and thorough test.
PASSED: Test 1, Processor 1 has reached all C-states: C1 C3 C6 
PASSED: Test 1, Processor 1 has the same number of C-states as processor 0
Processor 2 has not reached C1 during tests. This is not a failure, however it
is not a complete and thorough test.
PASSED: Test 1, Processor 2 has the same number of C-states as processor 0
Processor 3 has not reached C1 C3 during tests. This is not a failure, however
it is not a complete and thorough test.
PASSED: Test 1, Processor 3 has the same number of C-states as processor 0
Processor 4 has not reached C1 during tests. This is not a failure, however it
is not a complete and thorough test.
PASSED: Test 1, Processor 4 has the same number of C-states as processor 0
Processor 5 has not reached C1 during tests. This is not a failure, however it
is not a complete and thorough test.
PASSED: Test 1, Processor 5 has the same number of C-states as processor 0
PASSED: Test 1, Processor 6 has reached all C-states: C1 C3 C6 
PASSED: Test 1, Processor 6 has the same number of C-states as processor 0
Processor 7 has not reached C3 during tests. This is not a failure, however it
is not a complete and thorough test.
PASSED: Test 1, Processor 7 has the same number of C-states as processor 0

================================================================================
9 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

csrt: CSRT Core System Resource Table test.
--------------------------------------------------------------------------------
ACPI CSRT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cpep: CPEP Corrected Platform Error Polling Table test.
--------------------------------------------------------------------------------
ACPI CPEP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

checksum: ACPI table checksum test.
--------------------------------------------------------------------------------
Test 1 of 1: ACPI table checksum test.
PASSED: Test 1, Table RSDP has correct checksum 0x94.
PASSED: Test 1, Table RSDP has correct extended checksum 0x82.
PASSED: Test 1, Table XSDT has correct checksum 0x7f
PASSED: Test 1, Table DSDT has correct checksum 0x6e
PASSED: Test 1, Table FACP has correct checksum 0xdd
PASSED: Test 1, Table APIC has correct checksum 0x08
PASSED: Test 1, Table FPDT has correct checksum 0xed
PASSED: Test 1, Table FIDT has correct checksum 0x3d
PASSED: Test 1, Table MCFG has correct checksum 0x94
PASSED: Test 1, Table UEFI has correct checksum 0x54
PASSED: Test 1, Table BDAT has correct checksum 0x60
PASSED: Test 1, Table HPET has correct checksum 0x60
PASSED: Test 1, Table PMCT has correct checksum 0x36
PASSED: Test 1, Table WDDT has correct checksum 0x98
PASSED: Test 1, Table SSDT has correct checksum 0xe7
PASSED: Test 1, Table SLIC has correct checksum 0x6a
PASSED: Test 1, Table MSDM has correct checksum 0xc5
PASSED: Test 1, Table BGRT has correct checksum 0xec
PASSED: Test 1, Table UEFI has correct checksum 0xba
PASSED: Test 1, Table DMAR has correct checksum 0x8c
PASSED: Test 1, Table ASF! has correct checksum 0x14
PASSED: Test 1, Table RSDT has correct checksum 0x0e
PASSED: Test 1, Table FACP has correct checksum 0xba

================================================================================
23 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

autobrightness: Automated LCD brightness test.
--------------------------------------------------------------------------------
Test 1 of 2: Test for maximum and actual brightness.

Test 2 of 2: Change actual brightness.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

boot: BOOT Table test.
--------------------------------------------------------------------------------
ACPI BOOT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

bgrt: BGRT Boot Graphics Resource Table test.
--------------------------------------------------------------------------------
Test 1 of 1: BGRT Boot Graphics Resource Table test.
BGRT Boot Graphics Resource Table:
  Version:                  0x0001
  Status:                   0x00
  Image Type:               0x00
  Image Memory Address:     0x0000000035db5018
  Image Offset X:           0x0000017e
  Image Offset Y:           0x00000098
PASSED: Test 1, No issues found in BGRT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

bert: BERT Boot Error Record Table test.
--------------------------------------------------------------------------------
ACPI BERT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

aspt: ASPT Table test.
--------------------------------------------------------------------------------
ACPI ASPT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

asf: ASF! Alert Standard Format Table test.
--------------------------------------------------------------------------------
Test 1 of 1: ASF! Alert Standard Format Table test.
ASF! Hardware Error Source Table
PASSED: Test 1, No issues found in ASF! ASF_INFO record.
PASSED: Test 1, No issues found in ASF! ASF_ALRT record.
PASSED: Test 1, No issues found in ASF! ASF_RCTL record.
PASSED: Test 1, No issues found in ASF! ASF_RMCP record.
PASSED: Test 1, No issues found in ASF! ASF_ADDR record.
PASSED: Test 1, No issues found in ASF! table.

================================================================================
6 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

apicinstance: Test for single instance of APIC/MADT table.
--------------------------------------------------------------------------------
Test 1 of 1: Test for single instance of APIC/MADT table.
Found APIC/MADT table APIC @ 3a2b2718, length 0x200 
PASSED: Test 1, Found 1 APIC/MADT table(s), as expected.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

acpitables: ACPI table headers sanity tests.
--------------------------------------------------------------------------------
Test 1 of 1: Test ACPI headers.
PASSED: Test 1, Table XSDT has valid signature and ID strings.
PASSED: Test 1, Table DSDT has valid signature and ID strings.
PASSED: Test 1, Table FACP has valid signature and ID strings.
PASSED: Test 1, Table APIC has valid signature and ID strings.
PASSED: Test 1, Table FPDT has valid signature and ID strings.
PASSED: Test 1, Table FIDT has valid signature and ID strings.
PASSED: Test 1, Table MCFG has valid signature and ID strings.
PASSED: Test 1, Table UEFI has valid signature and ID strings.
PASSED: Test 1, Table BDAT has valid signature and ID strings.
PASSED: Test 1, Table HPET has valid signature and ID strings.
PASSED: Test 1, Table PMCT has valid signature and ID strings.
PASSED: Test 1, Table WDDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SLIC has valid signature and ID strings.
PASSED: Test 1, Table MSDM has valid signature and ID strings.
FAILED [LOW] ACPITableHdrInfo: Test 1, ACPI Table BGRT has non-ASCII characters
in header field OEM ID 
PASSED: Test 1, Table UEFI has valid signature and ID strings.
PASSED: Test 1, Table DMAR has valid signature and ID strings.
PASSED: Test 1, Table ASF! has valid signature and ID strings.
PASSED: Test 1, Table RSDT has valid signature and ID strings.
PASSED: Test 1, Table FACP has valid signature and ID strings.

================================================================================
20 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================


2872 passed, 390 failed, 14 warnings, 62 aborted, 190 skipped, 10 info only.

Test Failure Summary
================================================================================

Critical failures: NONE

High failures: 18
 klog: HIGH Kernel message: [    0.152115] pci 0000:ff:1e.3: [Firmware Bug]: reg 0x10: invalid BAR (can't size)
 dmicheck: Out of range value 0x00 (range allowed 0x01..0x0d) while accessing entry 'Chassis Information (Type 3)' @ 0x000eb89b, field 'Base Board Type 0', offset 0x15
 syntaxcheck: Assembler error in line 5635
 syntaxcheck: Assembler error in line 20950
 syntaxcheck: Assembler error in line 20955
 syntaxcheck: Assembler error in line 20964
 syntaxcheck: Assembler error in line 20969
 syntaxcheck: Assembler error in line 20976
 syntaxcheck: Assembler error in line 28663
 syntaxcheck: Assembler error in line 28672
 syntaxcheck: Assembler error in line 28677
 syntaxcheck: Assembler error in line 28684
 syntaxcheck: Assembler error in line 36359
 syntaxcheck: Assembler error in line 36366
 syntaxcheck: Assembler error in line 36371
 syntaxcheck: Assembler error in line 36380
 syntaxcheck: Assembler error in line 36385
 syntaxcheck: Assembler error in line 36392

Medium failures: 82
 mtrr: Memory range 0x1000 to 0x953ff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x1000 to 0x953ff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x100000 to 0x398cbfff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x100000 to 0x398cbfff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x3b3f3000 to 0x3b3f3fff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x3b3f3000 to 0x3b3f3fff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0x3b402000 to 0x3cffffff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x3b402000 to 0x3cffffff (System RAM) is lacking attribute Write-Back.
 mtrr: Memory range 0xe0000000 to 0xefffffff (0000:02:00.0) has incorrect attribute Uncached.
 mtrr: Memory range 0xf0000000 to 0xf1ffffff (0000:02:00.0) has incorrect attribute Uncached.
 mtrr: Memory range 0x100000000 to 0x2bfffffff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x100000000 to 0x2bfffffff (System RAM) is lacking attribute Write-Back.
 cpufreq: CPU max frequency is unreachable
 cpufreq: Can't set CPU frequencies
 apicedge: Non-Legacy interrupt 0 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 1 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 4 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 8 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 12 is incorrectly level triggered.
 syntaxcheck: Assembler warning in line 85
 syntaxcheck: Assembler warning in line 262
 syntaxcheck: Assembler warning in line 2582
 syntaxcheck: Assembler warning in line 6496
 syntaxcheck: Assembler warning in line 6570
 syntaxcheck: Assembler warning in line 6716
 syntaxcheck: Assembler warning in line 8399
 syntaxcheck: Assembler warning in line 9010
 syntaxcheck: Assembler warning in line 9697
 syntaxcheck: Assembler warning in line 10369
 syntaxcheck: Assembler warning in line 11056
 syntaxcheck: Assembler warning in line 11743
 syntaxcheck: Assembler warning in line 12430
 syntaxcheck: Assembler warning in line 13117
 syntaxcheck: Assembler warning in line 13804
 syntaxcheck: Assembler warning in line 14491
 syntaxcheck: Assembler warning in line 15178
 syntaxcheck: Assembler warning in line 21175
 syntaxcheck: Assembler warning in line 21848
 syntaxcheck: Assembler warning in line 22521
 syntaxcheck: Assembler warning in line 23194
 syntaxcheck: Assembler warning in line 23867
 syntaxcheck: Assembler warning in line 24540
 syntaxcheck: Assembler warning in line 25213
 syntaxcheck: Assembler warning in line 25886
 syntaxcheck: Assembler warning in line 26559
 syntaxcheck: Assembler warning in line 27232
 syntaxcheck: Assembler warning in line 27905
 syntaxcheck: Assembler warning in line 28883
 syntaxcheck: Assembler warning in line 29556
 syntaxcheck: Assembler warning in line 30229
 syntaxcheck: Assembler warning in line 30902
 syntaxcheck: Assembler warning in line 31575
 syntaxcheck: Assembler warning in line 32248
 syntaxcheck: Assembler warning in line 32921
 syntaxcheck: Assembler warning in line 33594
 syntaxcheck: Assembler warning in line 34267
 syntaxcheck: Assembler warning in line 34940
 syntaxcheck: Assembler warning in line 35613
 syntaxcheck: Assembler warning in line 36591
 syntaxcheck: Assembler warning in line 37264
 syntaxcheck: Assembler warning in line 37937
 syntaxcheck: Assembler warning in line 38610
 syntaxcheck: Assembler warning in line 39283
 syntaxcheck: Assembler warning in line 39956
 syntaxcheck: Assembler warning in line 40629
 syntaxcheck: Assembler warning in line 41302
 syntaxcheck: Assembler warning in line 41975
 syntaxcheck: Assembler warning in line 42648
 syntaxcheck: Assembler warning in line 43321
 syntaxcheck: Assembler warning in line 45438
 syntaxcheck: Assembler warning in line 45986
 syntaxcheck: Assembler warning in line 46000
 syntaxcheck: Assembler warning in line 46015
 syntaxcheck: Assembler warning in line 46030
 syntaxcheck: Assembler warning in line 46044
 syntaxcheck: Assembler warning in line 46059
 syntaxcheck: Assembler warning in line 46074
 syntaxcheck: Assembler warning in line 46088
 syntaxcheck: Assembler warning in line 46621
 method: \_SB_.PCI3._CRS WORD Address Space Descriptor minimum address range 0x4858 is greater than the maximum address range 0x0.
 method: \_SB_.PCI3._CRS WORD Address Space Descriptor length 0x1 does not match the difference between the minimum and maximum address ranges 0x4858-0x0.
 fan: Fan present but has no cur_state present.

Low failures: 284
 maxreadreq: 2 devices have low MaxReadReq settings. Firmware may have configured these too low.
 mpcheck: IO Interrupt Entry 9 (@0x000fd97c) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 10 (@0x000fd984) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 11 (@0x000fd98c) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 12 (@0x000fd994) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 13 (@0x000fd99c) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 14 (@0x000fd9a4) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 15 (@0x000fd9ac) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 16 (@0x000fd9b4) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 17 (@0x000fd9bc) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 18 (@0x000fd9c4) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 19 (@0x000fd9cc) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 20 (@0x000fd9d4) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 21 (@0x000fd9dc) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 22 (@0x000fd9e4) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 23 (@0x000fd9ec) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 24 (@0x000fd9f4) has a Destination IO APIC ID 0x02 which has not been defined.
 mpcheck: IO Interrupt Entry 25 (@0x000fd9fc) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 26 (@0x000fda04) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 27 (@0x000fda0c) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 28 (@0x000fda14) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 29 (@0x000fda1c) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 30 (@0x000fda24) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 31 (@0x000fda2c) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 32 (@0x000fda34) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 33 (@0x000fda3c) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 34 (@0x000fda44) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 35 (@0x000fda4c) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 36 (@0x000fda54) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 37 (@0x000fda5c) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 38 (@0x000fda64) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 39 (@0x000fda6c) has a Destination IO APIC ID 0x00 which has not been defined.
 mpcheck: IO Interrupt Entry 40 (@0x000fda74) has a Destination IO APIC ID 0x00 which has not been defined.
 wmi: GUID 86CCFD48-205E-4A77-9C48-2021CBEDE341 has multiple associated methods WMTF defined, this is a firmware bug that leads to ambigous behaviour.
 syntaxcheck: Assembler remark in line 160
 syntaxcheck: Assembler remark in line 575
 syntaxcheck: Assembler remark in line 2621
 syntaxcheck: Assembler remark in line 2944
 syntaxcheck: Assembler remark in line 2950
 syntaxcheck: Assembler remark in line 6214
 syntaxcheck: Assembler remark in line 6426
 syntaxcheck: Assembler remark in line 6474
 syntaxcheck: Assembler remark in line 7054
 syntaxcheck: Assembler remark in line 7090
 syntaxcheck: Assembler remark in line 7140
 syntaxcheck: Assembler remark in line 7214
 syntaxcheck: Assembler remark in line 7267
 syntaxcheck: Assembler remark in line 7373
 syntaxcheck: Assembler remark in line 7407
 syntaxcheck: Assembler remark in line 7468
 syntaxcheck: Assembler remark in line 7521
 syntaxcheck: Assembler remark in line 7629
 syntaxcheck: Assembler remark in line 7663
 syntaxcheck: Assembler remark in line 8515
 syntaxcheck: Assembler remark in line 8537
 syntaxcheck: Assembler remark in line 8551
 syntaxcheck: Assembler remark in line 8572
 syntaxcheck: Assembler remark in line 9126
 syntaxcheck: Assembler remark in line 9148
 syntaxcheck: Assembler remark in line 9162
 syntaxcheck: Assembler remark in line 9183
 syntaxcheck: Assembler remark in line 9813
 syntaxcheck: Assembler remark in line 9835
 syntaxcheck: Assembler remark in line 9849
 syntaxcheck: Assembler remark in line 9870
 syntaxcheck: Assembler remark in line 10485
 syntaxcheck: Assembler remark in line 10507
 syntaxcheck: Assembler remark in line 10521
 syntaxcheck: Assembler remark in line 10542
 syntaxcheck: Assembler remark in line 11172
 syntaxcheck: Assembler remark in line 11194
 syntaxcheck: Assembler remark in line 11208
 syntaxcheck: Assembler remark in line 11229
 syntaxcheck: Assembler remark in line 11859
 syntaxcheck: Assembler remark in line 11881
 syntaxcheck: Assembler remark in line 11895
 syntaxcheck: Assembler remark in line 11916
 syntaxcheck: Assembler remark in line 12546
 syntaxcheck: Assembler remark in line 12568
 syntaxcheck: Assembler remark in line 12582
 syntaxcheck: Assembler remark in line 12603
 syntaxcheck: Assembler remark in line 13233
 syntaxcheck: Assembler remark in line 13255
 syntaxcheck: Assembler remark in line 13269
 syntaxcheck: Assembler remark in line 13290
 syntaxcheck: Assembler remark in line 13920
 syntaxcheck: Assembler remark in line 13942
 syntaxcheck: Assembler remark in line 13956
 syntaxcheck: Assembler remark in line 13977
 syntaxcheck: Assembler remark in line 14607
 syntaxcheck: Assembler remark in line 14629
 syntaxcheck: Assembler remark in line 14643
 syntaxcheck: Assembler remark in line 14664
 syntaxcheck: Assembler remark in line 15294
 syntaxcheck: Assembler remark in line 15316
 syntaxcheck: Assembler remark in line 15330
 syntaxcheck: Assembler remark in line 15351
 syntaxcheck: Assembler remark in line 15910
 syntaxcheck: Assembler remark in line 15946
 syntaxcheck: Assembler remark in line 15996
 syntaxcheck: Assembler remark in line 16070
 syntaxcheck: Assembler remark in line 16123
 syntaxcheck: Assembler remark in line 16229
 syntaxcheck: Assembler remark in line 16263
 syntaxcheck: Assembler remark in line 16324
 syntaxcheck: Assembler remark in line 16377
 syntaxcheck: Assembler remark in line 16485
 syntaxcheck: Assembler remark in line 16519
 syntaxcheck: Assembler remark in line 16631
 syntaxcheck: Assembler remark in line 16667
 syntaxcheck: Assembler remark in line 16717
 syntaxcheck: Assembler remark in line 16791
 syntaxcheck: Assembler remark in line 16844
 syntaxcheck: Assembler remark in line 16950
 syntaxcheck: Assembler remark in line 16984
 syntaxcheck: Assembler remark in line 17045
 syntaxcheck: Assembler remark in line 17098
 syntaxcheck: Assembler remark in line 17206
 syntaxcheck: Assembler remark in line 17240
 syntaxcheck: Assembler remark in line 17939
 syntaxcheck: Assembler remark in line 21291
 syntaxcheck: Assembler remark in line 21313
 syntaxcheck: Assembler remark in line 21327
 syntaxcheck: Assembler remark in line 21348
 syntaxcheck: Assembler remark in line 21964
 syntaxcheck: Assembler remark in line 21986
 syntaxcheck: Assembler remark in line 22000
 syntaxcheck: Assembler remark in line 22021
 syntaxcheck: Assembler remark in line 22637
 syntaxcheck: Assembler remark in line 22659
 syntaxcheck: Assembler remark in line 22673
 syntaxcheck: Assembler remark in line 22694
 syntaxcheck: Assembler remark in line 23310
 syntaxcheck: Assembler remark in line 23332
 syntaxcheck: Assembler remark in line 23346
 syntaxcheck: Assembler remark in line 23367
 syntaxcheck: Assembler remark in line 23983
 syntaxcheck: Assembler remark in line 24005
 syntaxcheck: Assembler remark in line 24019
 syntaxcheck: Assembler remark in line 24040
 syntaxcheck: Assembler remark in line 24656
 syntaxcheck: Assembler remark in line 24678
 syntaxcheck: Assembler remark in line 24692
 syntaxcheck: Assembler remark in line 24713
 syntaxcheck: Assembler remark in line 25329
 syntaxcheck: Assembler remark in line 25351
 syntaxcheck: Assembler remark in line 25365
 syntaxcheck: Assembler remark in line 25386
 syntaxcheck: Assembler remark in line 26002
 syntaxcheck: Assembler remark in line 26024
 syntaxcheck: Assembler remark in line 26038
 syntaxcheck: Assembler remark in line 26059
 syntaxcheck: Assembler remark in line 26675
 syntaxcheck: Assembler remark in line 26697
 syntaxcheck: Assembler remark in line 26711
 syntaxcheck: Assembler remark in line 26732
 syntaxcheck: Assembler remark in line 27348
 syntaxcheck: Assembler remark in line 27370
 syntaxcheck: Assembler remark in line 27384
 syntaxcheck: Assembler remark in line 27405
 syntaxcheck: Assembler remark in line 28021
 syntaxcheck: Assembler remark in line 28043
 syntaxcheck: Assembler remark in line 28057
 syntaxcheck: Assembler remark in line 28078
 syntaxcheck: Assembler remark in line 28999
 syntaxcheck: Assembler remark in line 29021
 syntaxcheck: Assembler remark in line 29035
 syntaxcheck: Assembler remark in line 29056
 syntaxcheck: Assembler remark in line 29672
 syntaxcheck: Assembler remark in line 29694
 syntaxcheck: Assembler remark in line 29708
 syntaxcheck: Assembler remark in line 29729
 syntaxcheck: Assembler remark in line 30345
 syntaxcheck: Assembler remark in line 30367
 syntaxcheck: Assembler remark in line 30381
 syntaxcheck: Assembler remark in line 30402
 syntaxcheck: Assembler remark in line 31018
 syntaxcheck: Assembler remark in line 31040
 syntaxcheck: Assembler remark in line 31054
 syntaxcheck: Assembler remark in line 31075
 syntaxcheck: Assembler remark in line 31691
 syntaxcheck: Assembler remark in line 31713
 syntaxcheck: Assembler remark in line 31727
 syntaxcheck: Assembler remark in line 31748
 syntaxcheck: Assembler remark in line 32364
 syntaxcheck: Assembler remark in line 32386
 syntaxcheck: Assembler remark in line 32400
 syntaxcheck: Assembler remark in line 32421
 syntaxcheck: Assembler remark in line 33037
 syntaxcheck: Assembler remark in line 33059
 syntaxcheck: Assembler remark in line 33073
 syntaxcheck: Assembler remark in line 33094
 syntaxcheck: Assembler remark in line 33710
 syntaxcheck: Assembler remark in line 33732
 syntaxcheck: Assembler remark in line 33746
 syntaxcheck: Assembler remark in line 33767
 syntaxcheck: Assembler remark in line 34383
 syntaxcheck: Assembler remark in line 34405
 syntaxcheck: Assembler remark in line 34419
 syntaxcheck: Assembler remark in line 34440
 syntaxcheck: Assembler remark in line 35056
 syntaxcheck: Assembler remark in line 35078
 syntaxcheck: Assembler remark in line 35092
 syntaxcheck: Assembler remark in line 35113
 syntaxcheck: Assembler remark in line 35729
 syntaxcheck: Assembler remark in line 35751
 syntaxcheck: Assembler remark in line 35765
 syntaxcheck: Assembler remark in line 35786
 syntaxcheck: Assembler remark in line 36707
 syntaxcheck: Assembler remark in line 36729
 syntaxcheck: Assembler remark in line 36743
 syntaxcheck: Assembler remark in line 36764
 syntaxcheck: Assembler remark in line 37380
 syntaxcheck: Assembler remark in line 37402
 syntaxcheck: Assembler remark in line 37416
 syntaxcheck: Assembler remark in line 37437
 syntaxcheck: Assembler remark in line 38053
 syntaxcheck: Assembler remark in line 38075
 syntaxcheck: Assembler remark in line 38089
 syntaxcheck: Assembler remark in line 38110
 syntaxcheck: Assembler remark in line 38726
 syntaxcheck: Assembler remark in line 38748
 syntaxcheck: Assembler remark in line 38762
 syntaxcheck: Assembler remark in line 38783
 syntaxcheck: Assembler remark in line 39399
 syntaxcheck: Assembler remark in line 39421
 syntaxcheck: Assembler remark in line 39435
 syntaxcheck: Assembler remark in line 39456
 syntaxcheck: Assembler remark in line 40072
 syntaxcheck: Assembler remark in line 40094
 syntaxcheck: Assembler remark in line 40108
 syntaxcheck: Assembler remark in line 40129
 syntaxcheck: Assembler remark in line 40745
 syntaxcheck: Assembler remark in line 40767
 syntaxcheck: Assembler remark in line 40781
 syntaxcheck: Assembler remark in line 40802
 syntaxcheck: Assembler remark in line 41418
 syntaxcheck: Assembler remark in line 41440
 syntaxcheck: Assembler remark in line 41454
 syntaxcheck: Assembler remark in line 41475
 syntaxcheck: Assembler remark in line 42091
 syntaxcheck: Assembler remark in line 42113
 syntaxcheck: Assembler remark in line 42127
 syntaxcheck: Assembler remark in line 42148
 syntaxcheck: Assembler remark in line 42764
 syntaxcheck: Assembler remark in line 42786
 syntaxcheck: Assembler remark in line 42800
 syntaxcheck: Assembler remark in line 42821
 syntaxcheck: Assembler remark in line 43437
 syntaxcheck: Assembler remark in line 43459
 syntaxcheck: Assembler remark in line 43473
 syntaxcheck: Assembler remark in line 43494
 syntaxcheck: Assembler remark in line 45216
 syntaxcheck: Assembler remark in line 45255
 syntaxcheck: Assembler remark in line 45300
 syntaxcheck: Assembler remark in line 45333
 syntaxcheck: Assembler remark in line 45350
 syntaxcheck: Assembler remark in line 45364
 syntaxcheck: Assembler remark in line 45418
 syntaxcheck: Assembler remark in line 45438
 syntaxcheck: Assembler remark in line 45495
 syntaxcheck: Assembler remark in line 45566
 syntaxcheck: Assembler remark in line 45984
 syntaxcheck: Assembler remark in line 45998
 syntaxcheck: Assembler remark in line 46013
 syntaxcheck: Assembler remark in line 46028
 syntaxcheck: Assembler remark in line 46042
 syntaxcheck: Assembler remark in line 46057
 syntaxcheck: Assembler remark in line 46072
 syntaxcheck: Assembler remark in line 46429
 syntaxcheck: Assembler remark in line 46452
 syntaxcheck: Assembler remark in line 46477
 syntaxcheck: Assembler remark in line 46486
 syntaxcheck: Assembler remark in line 46502
 syntaxcheck: Assembler remark in line 46513
 syntaxcheck: Assembler remark in line 46528
 syntaxcheck: Assembler remark in line 46544
 syntaxcheck: Assembler remark in line 46559
 syntaxcheck: Assembler remark in line 46593
 syntaxcheck: Assembler remark in line 46652
 syntaxcheck: Assembler remark in line 1465
 syntaxcheck: Assembler remark in line 1467
 syntaxcheck: Assembler remark in line 1481
 acpitables: ACPI Table BGRT has non-ASCII characters in header field OEM ID

Other failures: NONE

Test           |Pass |Fail |Abort|Warn |Skip |Info |
---------------+-----+-----+-----+-----+-----+-----+
acpiinfo       |     |     |     |     |     |    3|
acpitables     |   20|    1|     |     |     |     |
apicedge       |     |    5|     |     |     |     |
apicinstance   |    1|     |     |     |     |     |
asf            |    6|     |     |     |     |     |
aspm           |    2|     |     |    5|     |     |
aspt           |     |     |     |     |    1|     |
autobrightness |     |     |     |     |     |     |
bert           |     |     |     |     |    1|     |
bgrt           |    1|     |     |     |     |     |
bios32         |    4|     |     |     |     |     |
bios_info      |     |     |     |     |     |    1|
boot           |     |     |     |     |    1|     |
checksum       |   23|     |     |     |     |     |
cpep           |     |     |     |     |    1|     |
cpufreq        |    3|    2|     |    8|    2|     |
crs            |    1|     |     |     |     |     |
csm            |     |     |     |     |     |    1|
csrt           |     |     |     |     |    1|     |
cstates        |    9|     |     |     |     |     |
dbg2           |     |     |     |     |    1|     |
dbgp           |     |     |     |     |    1|     |
dmar           |    2|     |     |     |     |     |
dmicheck       |   87|    1|     |     |    1|     |
ebda           |    1|     |     |     |     |     |
ecdt           |     |     |     |     |    1|     |
erst           |     |     |     |     |    1|     |
facs           |    1|     |     |     |     |     |
fadt           |    4|     |     |     |     |     |
fan            |    8|    1|     |     |     |     |
fpdt           |    1|     |     |     |     |     |
gtdt           |     |     |     |     |    1|     |
hda_audio      |    2|     |     |     |     |     |
hest           |     |     |     |     |    1|     |
hpet           |    5|     |     |     |     |     |
iort           |     |     |     |     |    1|     |
klog           |     |    1|     |     |     |     |
lpit           |     |     |     |     |    1|     |
madt           |    1|     |     |     |     |     |
maxfreq        |    1|     |     |     |     |     |
maxreadreq     |     |    1|     |     |     |     |
mcfg           |    2|     |     |     |     |     |
mchi           |     |     |     |     |    1|     |
method         | 2548|    2|     |     |  162|     |
microcode      |     |     |     |     |    1|     |
mpcheck        |    8|   32|     |     |     |     |
msdm           |    1|     |     |     |     |     |
msr            |  107|     |     |     |     |     |
mtrr           |    1|   12|     |     |    1|     |
nx             |    3|     |     |     |     |     |
oops           |    2|     |     |     |     |     |
osilinux       |     |     |     |    1|     |     |
pcc            |     |     |     |     |     |    1|
pciirq         |    4|     |     |     |     |     |
pnp            |    2|     |     |     |     |     |
rsdp           |    1|     |     |     |     |     |
rsdt           |    1|     |     |     |     |     |
sbst           |     |     |     |     |    1|     |
securebootcert |     |     |     |     |    1|     |
slic           |    1|     |     |     |     |     |
slit           |     |     |     |     |    1|     |
spcr           |     |     |     |     |    1|     |
spmi           |     |     |     |     |    1|     |
srat           |     |     |     |     |    1|     |
stao           |     |     |     |     |    1|     |
syntaxcheck    |     |  331|     |     |     |     |
tcpa           |     |     |    1|     |     |     |
tpm2           |     |     |    1|     |     |     |
uefi           |    1|     |     |     |     |     |
uefibootpath   |     |     |    1|     |     |     |
uefirtauthvar  |     |     |   12|     |     |     |
uefirtmisc     |     |     |    3|     |     |     |
uefirttime     |     |     |   35|     |     |     |
uefirtvariable |     |     |    8|     |     |     |
version        |     |     |     |     |     |    4|
virt           |    1|     |     |     |     |     |
waet           |     |     |     |     |    1|     |
wakealarm      |    4|     |     |     |     |     |
wdat           |     |     |     |     |    1|     |
wmi            |    1|    1|     |     |     |     |
xenv           |     |     |    1|     |     |     |
xsdt           |    1|     |     |     |     |     |
---------------+-----+-----+-----+-----+-----+-----+
Total:         | 2872|  390|   62|   14|  190|   10|
---------------+-----+-----+-----+-----+-----+-----+
